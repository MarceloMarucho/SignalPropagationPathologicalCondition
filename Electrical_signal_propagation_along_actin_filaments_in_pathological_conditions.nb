(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2013317,      37761]
NotebookOptionsPosition[   1998123,      37509]
NotebookOutlinePosition[   1998897,      37534]
CellTagsIndexPosition[   1998854,      37531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Electrical signal propagation along Actin filaments in physiological and \
pathological conditions\
\>", "Title",
 CellChangeTimes->{{3.745792582795549*^9, 3.745792687037529*^9}, {
   3.749855508415292*^9, 3.7498555225015078`*^9}, {3.749855700157276*^9, 
   3.7498557068097763`*^9}, 3.754143597211635*^9, {3.827837669534835*^9, 
   3.8278376799880114`*^9}, {3.831565562593651*^9, 3.8315655954107914`*^9}, {
   3.8317451618852835`*^9, 3.8317451668964124`*^9}, 
   3.833126297931965*^9},ExpressionUUID->"a0ccd27c-dd2c-4aff-b5ed-\
88a91ff2e1a3"],

Cell["Preamble", "Text",
 CellChangeTimes->{{3.8339484450742116`*^9, 3.8339484496294374`*^9}, {
  3.8339484886664457`*^9, 3.833948489054414*^9}, {3.83607646518373*^9, 
  3.836076465357229*^9}},ExpressionUUID->"4e62c259-6dde-44b8-aca8-\
90e290e0e016"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Memory required:",
  FontWeight->"Bold"],
 " ~ 0.2GB"
}], "Item",
 CellChangeTimes->{{3.8360758856635838`*^9, 3.8360759603427415`*^9}, {
  3.8360767700168905`*^9, 
  3.8360767729702272`*^9}},ExpressionUUID->"8cbf235a-29dd-451a-8b51-\
e3639f15b037"],

Cell[TextData[{
 StyleBox["Calculation time",
  FontWeight->"Bold"],
 ": ~ 2 minutes"
}], "Item",
 CellChangeTimes->{{3.8360758856635838`*^9, 3.8360759258144054`*^9}, 
   3.836075964222487*^9},ExpressionUUID->"4f714050-9fb6-4f05-be21-\
cd180274d7dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Button", "[", 
   RowBox[{
   "\"\<Click this box to run the notebook. Once prompted insert appropriate \
inputs and click 'Proceed'. Wait for the message 'The calculations are over.' \
Use the sliders and check boxes (if available) to change the parameters to \
see the changes in plots.\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", "\[IndentingNewLine]", 
     RowBox[{"FrontEndToken", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<EvaluateNotebook\>\""}],
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"700", ",", "150"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "->", "\"\<Subsection\>\""}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.828467501798259*^9, 3.828467533567047*^9}, {
   3.828468929829815*^9, 3.828468940479703*^9}, {3.8284691139236193`*^9, 
   3.828469118290146*^9}, {3.828477980700218*^9, 3.8284779886089087`*^9}, {
   3.828479180843355*^9, 3.828479184768556*^9}, {3.828522308278507*^9, 
   3.8285223108186493`*^9}, {3.828526570254195*^9, 3.8285265740377493`*^9}, {
   3.828532595813335*^9, 3.8285325979835787`*^9}, {3.828533959380558*^9, 
   3.82853397515613*^9}, {3.8285341679678173`*^9, 3.828534175949957*^9}, {
   3.828536873681361*^9, 3.82853687766146*^9}, {3.828539511493848*^9, 
   3.828539513565572*^9}, {3.828539546739204*^9, 3.8285395518721724`*^9}, {
   3.828546583500147*^9, 3.8285465992856092`*^9}, {3.8285468977371063`*^9, 
   3.828546909190798*^9}, {3.828546995978755*^9, 3.828547002210657*^9}, {
   3.828547085120208*^9, 3.8285471386191807`*^9}, {3.828547185301179*^9, 
   3.828547202213277*^9}, {3.828547243187728*^9, 3.8285472906695833`*^9}, {
   3.8285473566395903`*^9, 3.828547376970541*^9}, {3.82854750064884*^9, 
   3.8285475151269293`*^9}, {3.82854820699304*^9, 3.828548305184247*^9}, 
   3.8285483366039963`*^9, {3.828549438864257*^9, 3.82854950597548*^9}, {
   3.828549563029171*^9, 3.828549648470009*^9}, {3.828549681085534*^9, 
   3.828549860282371*^9}, {3.8285508356410103`*^9, 3.8285510106029577`*^9}, {
   3.828551132129035*^9, 3.828551137553631*^9}, {3.833122792089859*^9, 
   3.833122842590639*^9}, {3.8331228792004232`*^9, 3.833122943268693*^9}, {
   3.833124485544175*^9, 3.833124497404838*^9}, {3.833125985566802*^9, 
   3.833125986524765*^9}, {3.833126443358815*^9, 3.833126499549889*^9}, {
   3.8341904827793503`*^9, 3.8341906018830414`*^9}, {3.834190636606592*^9, 
   3.8341907380317073`*^9}, {3.8342233927904916`*^9, 3.834223419905154*^9}, {
   3.834223456014943*^9, 3.8342234853259983`*^9}, {3.8360749606627655`*^9, 
   3.8360749877246175`*^9}, {3.8360750420485888`*^9, 
   3.8360750453809795`*^9}, {3.8360760153395243`*^9, 
   3.8360760616380467`*^9}, {3.8360761705134583`*^9, 3.836076366998721*^9}, {
   3.836076534969886*^9, 3.8360767184847884`*^9}, {3.8360774538747215`*^9, 
   3.8360776817482347`*^9}, {3.8360777252065*^9, 3.836077730140134*^9}, {
   3.8360778304347515`*^9, 3.836077832601288*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"981f3667-c32e-4e8b-be8e-f468c9b8de78"],

Cell[BoxData[
 ButtonBox["\<\"Click this box to run the notebook. Once prompted insert \
appropriate inputs and click 'Proceed'. Wait for the message 'The \
calculations are over.' Use the sliders and check boxes (if available) to \
change the parameters to see the changes in plots.\"\>",
  Appearance->Automatic,
  BaseStyle->"Subsection",
  ButtonFunction:>FrontEndExecute[
    FrontEndToken[
     InputNotebook[], "EvaluateNotebook"]],
  Evaluator->Automatic,
  ImageSize->{700, 150},
  Method->"Preemptive"]], "Output",
 ShowCellLabel->False,
 CellChangeTimes->{{3.833126486670727*^9, 3.83312650290554*^9}, 
   3.833126900642462*^9, 3.83312773050646*^9, 3.833281550850868*^9, 
   3.8332829295755043`*^9, 3.8332842956982236`*^9, 3.8332860182888403`*^9, 
   3.833671499482956*^9, 3.833673728561725*^9, 3.8336756157270455`*^9, 
   3.8336771045094476`*^9, 3.8336786240498734`*^9, 3.833950443420285*^9, 
   3.8339506867631845`*^9, 3.833952664472189*^9, 3.8341842769025836`*^9, 
   3.834189945658652*^9, {3.8341905833403244`*^9, 3.8341906037312517`*^9}, 
   3.8341906410349884`*^9, {3.8341906952688847`*^9, 3.8341907386062593`*^9}, 
   3.834223491922615*^9, 3.834223573073626*^9, 3.834969282289184*^9, 
   3.834969623007674*^9, 3.8350360313426013`*^9, 3.835104391406704*^9, 
   3.835315881452637*^9, 3.8354436816953497`*^9, 3.8354479883421392`*^9, 
   3.83546196349888*^9, 3.8354623004902134`*^9, 3.8355255436549635`*^9, 
   3.835556401599612*^9, 3.835561403650697*^9, 3.835573926025799*^9, 
   3.835641445220765*^9, 3.83564430385853*^9, 3.8356444963184648`*^9, 
   3.8357226203057117`*^9, 3.8357233574131317`*^9, 3.8357237244867725`*^9, 
   3.83572385013619*^9, 3.8357240106167574`*^9, 3.8357863041590843`*^9, 
   3.835787346532804*^9, 3.8357942140261683`*^9, 3.8358114978737063`*^9, 
   3.835811872062436*^9, 3.8358125644134274`*^9, 3.8358170617090445`*^9, 
   3.835826569084943*^9, 3.8358663075459538`*^9, 3.8358779672335*^9, 
   3.8360096175718036`*^9, 3.8360750161527205`*^9, 3.836075199678755*^9, 
   3.8360760733130584`*^9, {3.8360761919535465`*^9, 3.8360762842650523`*^9}, {
   3.836076346916974*^9, 3.8360763677277384`*^9}, 3.836076400772545*^9, {
   3.83607669865345*^9, 3.8360767190762053`*^9}, 3.8360773864845476`*^9, {
   3.8360774686913424`*^9, 3.836077537756483*^9}, {3.8360775808216305`*^9, 
   3.836077682329626*^9}, 3.83607773080225*^9, 3.836077834182747*^9, 
   3.8360785057056274`*^9, 3.836765178674728*^9, 3.836765220695383*^9, 
   3.8367652530838118`*^9, {3.836765292286861*^9, 3.836765311486203*^9}, 
   3.83676543926086*^9, 3.8367666551382837`*^9, 3.836766694294354*^9, {
   3.8367678230505333`*^9, 3.836767868522766*^9}, 3.8367681220631723`*^9, 
   3.836768472491437*^9, {3.8367686265240717`*^9, 3.836768661138714*^9}, 
   3.836769229442502*^9, 3.8367693067613792`*^9, 3.8368315027144127`*^9, {
   3.836831536597662*^9, 3.836831552284216*^9}, {3.8368316731607533`*^9, 
   3.836831690288628*^9}, {3.836831879292141*^9, 3.8368318946363907`*^9}, 
   3.836831968369884*^9, 3.8368321296449747`*^9, {3.836832265823988*^9, 
   3.836832276513299*^9}, {3.8368323480171127`*^9, 3.836832379009632*^9}, {
   3.83683240945415*^9, 3.836832423534648*^9}, {3.836832536760141*^9, 
   3.8368325479480047`*^9}, {3.836832897349312*^9, 3.8368329423381968`*^9}, {
   3.836832975463338*^9, 3.83683300091298*^9}, 3.8368333935317793`*^9, {
   3.8368334267094584`*^9, 3.8368335083389482`*^9}, 3.837006069498765*^9, 
   3.837006138502099*^9, 3.837006207266388*^9, 3.837006255525599*^9, 
   3.8370077815628896`*^9, 3.837007958641692*^9, {3.837020695047941*^9, 
   3.837020735320997*^9}, {3.8370208929789333`*^9, 3.8370209310334578`*^9}, {
   3.837021025913903*^9, 3.8370210521530046`*^9}, 3.837021136273654*^9, 
   3.83710993941502*^9, 3.837110106284254*^9, 3.8371101666742992`*^9, 
   3.837110251404387*^9},
 CellLabel->
  "Out[475]=",ExpressionUUID->"cab20bf2-015a-4371-b50b-7f202b00d04d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.749855611415601*^9, 3.749855611435729*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"4eb07c1f-f949-4dcc-86b0-98101fb93885"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8339315109937983`*^9, 3.833931551722282*^9}, 
   3.833945144226179*^9},
 CellLabel->
  "In[477]:=",ExpressionUUID->"d73a7176-6294-4222-be7f-f287c261463c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Developer`\>\"", "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[478]:=",ExpressionUUID->"6ac09cee-13b3-4f3f-8df2-01540dedf43a"],

Cell["Taking user inputs ...", "Text",
 CellChangeTimes->{{3.83394830341761*^9, 3.833948319584607*^9}, {
   3.8339484837688026`*^9, 3.833948483973257*^9}, 3.8360764728477173`*^9, {
   3.836077860153832*^9, 
   3.836077863224323*^9}},ExpressionUUID->"d8df726e-6931-4f19-a3cd-\
8f16824a5498"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xtm", "=", "310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xln", "=", " ", "23.83"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wnucleotide", "=", "\"\<ATP\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conform", "=", "\"\<alpha-skeletal\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wmut", "=", "\"\<wild type\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Radius in Agmstrons (>= 23.83 \[Angstrom]): \>\"", "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "xln", "]"}], ",", "Number"}], "]"}], ",", 
        RowBox[{
        "TextCell", "[", 
         "\"\<Temperature in Kelvin(typically between 295K and 320K):\>\"", 
         " ", "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "xtm", "]"}], ",", "Number"}], "]"}], ",", 
        RowBox[{
        "TextCell", "[", "\"\<Select Nucletoide state model\>\"", "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wnucleotide", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<ATP\>\"", ",", "\"\<ADP\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"TextCell", "[", "\"\<Select isoform model\>\"", "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "conform", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<alpha-skeletal\>\"", ",", "\"\<alpha-cardiac\>\"", ",", 
            "\"\<alpha-smooth\>\"", ",", "\"\<gamma-smooth\>\"", ",", 
            "\"\<beta-cytoplasmic\>\"", ",", "\"\<gamma-cytoplasmic\>\""}], 
           "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "3"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"TextCell", "[", "\"\<Select conformation model\>\"", "]"}], 
        ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmut", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<wild type\>\"", ",", 
            "\"\<mutant (options in next screen)\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"len", "=", "xln"}], ",", 
             RowBox[{"temp", "=", "xtm"}], ",", 
             RowBox[{"isoform", "=", "conform"}], ",", 
             RowBox[{"nucleotide", "=", "wnucleotide"}], ",", 
             RowBox[{"mut", "=", "wmut"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
      "]"}], "]"}], ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHZDGOpez543j9XC3xSDatMHlPoi2SsoC0yVzHzDw
gPjpH8H0p6yUlaVA+lC37ToQ7cSv/RBEL5N3A9MGG9weSPa/cWybvQRMT3p7
/D2IfuOY8wFEH3/qpCIFpJlaAsG0VtTJIBCddCEtGERzc19nkgbSF9I8mUG0
wcOAmSDaYtpzMJ0XWi+zdsIbxyXflyiAaAWmlzZKE984bldocgPR97Ze8dsw
+Y3jE5kWfxDN5/vyPcu0N45dRld5WIG0TdpnARA9ceYiCRC9xfyeDIiexp2v
BqInRW6tAtFMYW8aQHRn19V1IHqVXMBGEH3mk9xzTiC99tXDlyA6b2VcIReQ
7pCTLwLRAC55ovk=
  "],
 CellLabel->
  "In[479]:=",ExpressionUUID->"54adad6c-781b-46f5-b823-4bb15a9e9277"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wmutspec", "=", "\"\<Met311Arg (ACTB: Developmental disability)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq2", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<beta-cytoplasmic\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq", "+", "disfq2"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for beta actin proteins\>\"", "]"}], 
        ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Met311Arg (ACTB: Developmental disability)\>\"", ",", 
            "\"\<Glu362Lys (ACTB: Neutrophil disfunction)\>\""}], "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8368313137458687`*^9, 3.8368314449120417`*^9}, {
   3.836831482496499*^9, 3.8368314938609047`*^9}, 3.836831530242876*^9, {
   3.83683158894522*^9, 3.836831589774971*^9}, {3.836831624008502*^9, 
   3.836831652326827*^9}, {3.836833779694668*^9, 3.836833790978125*^9}, {
   3.836833844442091*^9, 3.83683385880224*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"0464da77-0463-4841-a563-ee661a993376"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wmutspec2", "=", "\"\<Asn10Asp (ACTG1: Baraister-Winter syndrome)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq1", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq21", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<gamma-cytoplasmic\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq1", "+", "disfq21"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for gamma actin proteins\>\"", "]"}], 
        ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec2", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Asn10Asp (ACTG1: Baraister-Winter syndrome)\>\"", ",", 
            "\"\<Glu239Lys (ACTG1: Deafness)\>\""}], "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec2"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8368313137458687`*^9, 3.8368314449120417`*^9}, {
   3.836831482496499*^9, 3.8368314938609047`*^9}, 3.836831530242876*^9, {
   3.83683158894522*^9, 3.836831589774971*^9}, {3.83683194169385*^9, 
   3.8368319584362497`*^9}, {3.836832106661152*^9, 3.836832112155513*^9}, {
   3.836833808662088*^9, 3.8368338622123117`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"dfcccc2e-b308-48f2-9b76-5c329c625dee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wmutspec3", "=", "\"\<Asp1Tyr (ACTA1: Core myopathy)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq3", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq23", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<alpha-skeletal\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq3", "+", "disfq23"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for alpha skeletal actin proteins\>\"",
          "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec3", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Asp1Tyr (ACTA1: Core myopathy)\>\"", ",", 
            "\"\<Glu4Lys (ACTA 1: Nemaline myopathy)\>\"", ",", 
            "\"\<Gly15Arg (ACTA 1: Actin myopathy)\>\"", ",", 
            "\"\<Gly15Asp (ACTA 1: Fetal akinesia)\>\""}], "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec3"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.836832165544224*^9, 3.836832253378417*^9}, 
   3.83683233506732*^9, {3.8368327101782618`*^9, 3.8368328793585777`*^9}, {
   3.8368338267351418`*^9, 3.836833833826799*^9}, {3.836833865444956*^9, 
   3.8368338656424007`*^9}, {3.8370190330268106`*^9, 
   3.8370190559037867`*^9}, {3.837019106135273*^9, 3.8370191069910517`*^9}, {
   3.8370195009378967`*^9, 3.8370195060604143`*^9}, {3.837020565800742*^9, 
   3.8370205661685038`*^9}},
 CellLabel->
  "In[493]:=",ExpressionUUID->"12da5032-d534-47e6-8a32-9fa6aaa799da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wmutspec3", "=", "\"\<Cys17Arg (ACTA 2: Aortic disease)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq3", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq25", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<alpha-smooth\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq3", "+", "disfq25"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for alpha smooth actin proteins\>\"", 
         "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec3", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Cys17Arg (ACTA 2: Aortic disease)\>\"", ",", 
            "\"\<Gly36Arg (ACTA 2: Thoracic aortic aneurysms)\>\""}], "}"}], 
          ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec3"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.837019238287581*^9, 3.837019305294812*^9}, {
   3.837019552020768*^9, 3.837019591742325*^9}, 3.837019814631434*^9, 
   3.837019965995994*^9, 3.8370204844860973`*^9, {3.8370205512932577`*^9, 
   3.837020553061248*^9}},
 CellLabel->
  "In[497]:=",ExpressionUUID->"939fc976-b081-49dd-9750-4b2b79edd6f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wmutspec3", "=", 
   "\"\<Arg210His (ACTC1: Dilated and hypertrophic Cardiomyopathy)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq3", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq26", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<alpha-cardiac\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq3", "+", "disfq26"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for alpha cardiac actin proteins\>\"", 
         "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec3", "]"}], ",", 
          RowBox[{
          "{", "\"\<Arg210His (ACTC1: Dilated and hypertrophic \
Cardiomyopathy)\>\"", "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec3"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.837019992450289*^9, 3.837020065395686*^9}, {
   3.837020153079761*^9, 3.8370201546797743`*^9}, {3.837020199836628*^9, 
   3.837020233112111*^9}, 3.8370203372012253`*^9, {3.83702053540845*^9, 
   3.8370205443812447`*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"90849eec-9da1-44fd-afd9-8c63717a36a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wmutspec3", "=", 
   "\"\<Arg255Cys (Megacystis microcolon-intestinal hypoperistalsis syndrome)\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"disfq3", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disfq27", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"(", 
     RowBox[{"isoform", "==", "\"\<gamma-smooth\>\""}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"disfq3", "+", "disfq27"}], "==", "2"}], ",", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"DialogNotebook", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "TextCell", "[", 
         "\"\<Missense mutation models for alpha gamma-smooth proteins\>\"", 
         "]"}], ",", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "wmutspec3", "]"}], ",", 
          RowBox[{
          "{", "\"\<Arg255Cys (Megacystis microcolon-intestinal \
hypoperistalsis syndrome)\>\"", "}"}], ",", 
          RowBox[{"Appearance", " ", "\[Rule]", " ", 
           RowBox[{"\"\<Vertical\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Proceed\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{"{", 
            RowBox[{"mutspec", "=", "wmutspec3"}], "}"}], "]"}]}], "]"}]}], 
       "}"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.837020464066139*^9, 3.8370205238219147`*^9}, {
   3.837020594431902*^9, 3.837020606709237*^9}, 3.837020881372561*^9},
 CellLabel->
  "In[505]:=",ExpressionUUID->"de59cf44-ad0f-4465-9bd6-291bbf6cf96a"],

Cell[CellGroupData[{

Cell["1. Parameters", "Section",
 CellChangeTimes->{{3.83394834701278*^9, 
  3.833948367584725*^9}},ExpressionUUID->"d90ddbbb-3109-465f-b499-\
6a502fca72ae"],

Cell[CellGroupData[{

Cell["1.1 Cylinder and electrolyte Parameters and constants", "Subsection",
 CellChangeTimes->{{3.836072357217087*^9, 3.8360723635637007`*^9}, {
  3.8360730390603995`*^9, 
  3.836073055417776*^9}},ExpressionUUID->"9bd1ee19-bef0-4779-98fb-\
ccb1a5b30163"],

Cell[CellGroupData[{

Cell["1.1.1 cylinder Parameters", "Subsubsection",
 CellChangeTimes->{{3.8360723785500145`*^9, 3.836072383537381*^9}, {
  3.836072730852625*^9, 
  3.8360727327240596`*^9}},ExpressionUUID->"8c730de0-7ddb-4d0a-ba02-\
1fe62c864a9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QpHicong", "=", 
   RowBox[{"QuantityArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"23", ",", 
       RowBox[{"-", "82"}], ",", 
       RowBox[{"-", "154"}], ",", 
       RowBox[{"-", "184"}], ",", 
       RowBox[{"-", "222"}]}], "}"}], ",", "\"\<ElementaryCharge\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isom", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"isoform", "==", "\"\<alpha-skeletal\>\""}], ",", "0", ",", 
     RowBox[{"isoform", "==", "\"\<alpha-cardiac\>\""}], ",", "0", ",", 
     RowBox[{"isoform", "==", "\"\<alpha-smooth\>\""}], ",", "0", ",", 
     RowBox[{"isoform", "==", "\"\<gamma-smooth\>\""}], ",", "1", ",", 
     RowBox[{"isoform", "==", "\"\<beta-cytoplasmic\>\""}], ",", "1", ",", 
     RowBox[{"isoform", "==", "\"\<gamma-cytoplasmic\>\""}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucl", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"nucleotide", "==", "\"\<ATP\>\""}], ",", "0", ",", 
     RowBox[{"nucleotide", "==", "\"\<ADP\>\""}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutation", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"mutspec", "==", "\"\<Asp1Tyr (ACTA1: Core myopathy)\>\""}], ",",
      "1", ",", 
     RowBox[{"mutspec", "==", "\"\<Glu4Lys (ACTA 1: Nemaline myopathy)\>\""}],
      ",", "2", ",", 
     RowBox[{"mutspec", "==", "\"\<Gly15Arg (ACTA 1: Actin myopathy)\>\""}], 
     ",", "1", ",", 
     RowBox[{"mutspec", "==", "\"\<Gly15Asp (ACTA 1: Fetal akinesia)\>\""}], 
     ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"mutspec", "==", "\"\<Cys17Arg (ACTA 2: Aortic disease)\>\""}], 
     ",", "1", ",", 
     RowBox[{
     "mutspec", "==", 
      "\"\<Gly36Arg (ACTA 2: Thoracic aortic aneurysms)\>\""}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
     "mutspec", "==", "\"\<Asn10Asp (ACTG1: Baraister-Winter syndrome)\>\""}],
      ",", "1", ",", 
     RowBox[{"mutspec", "==", "\"\<Glu239Lys (ACTG1: Deafness)\>\""}], ",", 
     "2", ",", 
     RowBox[{
     "mutspec", "==", "\"\<Met311Arg (ACTB: Developmental disability)\>\""}], 
     ",", "1", ",", 
     RowBox[{
     "mutspec", "==", "\"\<Glu362Lys (ACTB: Neutrophil disfunction)\>\""}], 
     ",", "2", ",", 
     RowBox[{
     "mutspec", "==", 
      "\"\<Arg255Cys (Megacystis microcolon-intestinal hypoperistalsis \
syndrome)\>\""}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
     "mutspec", "==", 
      "\"\<Arg210His (ACTC1: Dilated and hypertrophic Cardiomyopathy)\>\""}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"mut", "==", "\"\<wild type\>\""}], ",", "0", ",", 
     RowBox[{"mut", "==", "\"\<mutant (options in next screen)\>\""}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QpHi", "=", 
   RowBox[{"QpHicong", "+", 
    RowBox[{"14", "*", 
     RowBox[{"QuantityArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"isom", "+", "nucl", "+", 
          RowBox[{"mutation", "*", "state"}]}], ",", 
         RowBox[{"isom", "+", "nucl", "+", 
          RowBox[{"mutation", "*", "state"}]}], ",", 
         RowBox[{"isom", "+", "nucl", "+", 
          RowBox[{"mutation", "*", "state"}]}], ",", 
         RowBox[{"isom", "+", "nucl", "+", 
          RowBox[{"mutation", "*", "state"}]}], ",", 
         RowBox[{"isom", "+", "nucl", "+", 
          RowBox[{"mutation", "*", "state"}]}]}], "}"}], ",", 
       "\"\<ElementaryCharge\>\""}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"Quantity", "[", 
     RowBox[{"422.20", ",", "\"\<Angstroms\>\""}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LAF", " ", "=", " ", 
   RowBox[{"422.20", "\[Times]", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CylRad", " ", "=", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"len", ",", "\"\<Angstroms\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CylRadd", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", "CylRad", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"denom", " ", "=", " ", 
    RowBox[{"2", "\[Times]", "\[Pi]", "\[Times]", "CylRad"}]}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lm", " ", "=", " ", 
   RowBox[{"Quantity", "[", 
    RowBox[{"5.4", ",", "\"\<Nanometers\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uLm", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", "Lm", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sSurfCyl", " ", "=", " ", 
   RowBox[{
   "2", "\[Times]", "\[Pi]", "\[Times]", "CylRad", "\[Times]", "Lm"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SurfCyl", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", "sSurfCyl", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rzp", "=", "CylRadd"}], ";"}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.751214279425634*^9, 3.7512143669875507`*^9}, {
   3.751214408710537*^9, 3.751214460751548*^9}, {3.751214560924366*^9, 
   3.751214603012415*^9}, 3.751214642806715*^9, 3.751214681072567*^9, {
   3.7512147420416937`*^9, 3.7512148025897713`*^9}, {3.75121483846981*^9, 
   3.751214876599*^9}, {3.751214989756236*^9, 3.751214995780074*^9}, {
   3.751215052853548*^9, 3.751215072957281*^9}, {3.751215305815542*^9, 
   3.7512153257030563`*^9}, 3.751303212568265*^9, {3.751303586403653*^9, 
   3.751303690887766*^9}, {3.751304796279063*^9, 3.751304807581181*^9}, {
   3.751308064100253*^9, 3.7513080695279627`*^9}, {3.751335821132246*^9, 
   3.751335848808668*^9}, 3.75133589769088*^9, {3.75134221193431*^9, 
   3.751342213520115*^9}, {3.751729224095007*^9, 3.751729235278894*^9}, {
   3.751730364149486*^9, 3.751730366402979*^9}, {3.751743518216275*^9, 
   3.75174367850944*^9}, {3.752353057515438*^9, 3.752353135260569*^9}, {
   3.752372277093649*^9, 3.7523723289916687`*^9}, {3.75237236095936*^9, 
   3.752372361763177*^9}, {3.752372499919264*^9, 3.752372541745413*^9}, {
   3.7523725859032307`*^9, 3.752372623639127*^9}, {3.7524121399167223`*^9, 
   3.752412157139056*^9}, {3.752412188903317*^9, 3.7524121901578627`*^9}, {
   3.753634823239822*^9, 3.7536348689404583`*^9}, {3.753714836746006*^9, 
   3.753714851582691*^9}, {3.754072075872965*^9, 3.754072198930573*^9}, {
   3.7550487719758873`*^9, 3.755048773495905*^9}, {3.755048833417232*^9, 
   3.755048834796484*^9}, {3.7551386500382013`*^9, 3.75513867141646*^9}, {
   3.826913640624569*^9, 3.826913765612686*^9}, {3.82691379894525*^9, 
   3.8269138561421623`*^9}, {3.826914142051362*^9, 3.8269141427074823`*^9}, {
   3.826914226388514*^9, 3.8269142538289013`*^9}, {3.826916560182417*^9, 
   3.82691658072656*^9}, {3.826916620615411*^9, 3.8269166999870768`*^9}, {
   3.82691803080615*^9, 3.8269180312545147`*^9}, 3.8278302457545886`*^9, {
   3.8315166145997972`*^9, 3.8315166149818025`*^9}, {3.831516704030383*^9, 
   3.831516798275918*^9}, {3.8315168469337735`*^9, 3.8315168472219706`*^9}, 
   3.8315169986019726`*^9, {3.831517119967865*^9, 3.8315171280127525`*^9}, {
   3.831738159756899*^9, 3.83173817293489*^9}, 3.8331225552048483`*^9, 
   3.8331234751928663`*^9, {3.836072716655898*^9, 3.836072718307073*^9}, 
   3.8360728115892897`*^9, {3.836760838219648*^9, 3.836760842980734*^9}, {
   3.8367608958366537`*^9, 3.836760922749565*^9}, {3.836761009278056*^9, 
   3.836761210678445*^9}, {3.836761245467744*^9, 3.836761371417233*^9}, {
   3.8367617897168922`*^9, 3.836761810409814*^9}, {3.836762016660737*^9, 
   3.836762207788129*^9}, {3.836762253933785*^9, 3.8367622542677298`*^9}, {
   3.836762289491626*^9, 3.836762385458515*^9}, {3.836762431920092*^9, 
   3.836762432186385*^9}, {3.836762466120288*^9, 3.836762583905098*^9}, {
   3.83676263069233*^9, 3.836762700497189*^9}, {3.836764493832059*^9, 
   3.8367645171528473`*^9}, 3.836764554707909*^9, {3.836764744199081*^9, 
   3.836764747566462*^9}, {3.836764960466496*^9, 3.836765035479467*^9}, 
   3.8368334180791407`*^9, {3.837019886045671*^9, 3.837019893946711*^9}, {
   3.83702024608318*^9, 3.837020284311973*^9}, {3.837020618989449*^9, 
   3.837020619463913*^9}, {3.837020817924828*^9, 3.837020818309168*^9}, {
   3.837021014263916*^9, 3.837021016884157*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"4dad0bd1-48ba-45e6-b70a-dffc67b8810c"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.1.2 COnstants", "Subsubsection",
 CellChangeTimes->{{3.836072419678924*^9, 
  3.83607242701731*^9}},ExpressionUUID->"841f6e73-1a87-4217-9999-\
66765ecc436d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]0", "=", 
   RowBox[{"N", "[", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"UnitConvert", "[", 
      RowBox[{"Quantity", "[", "\"\<ElectricConstant\>\"", "]"}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{"Quantity", "[", "\"\<MolarGasConstant\>\"", "]"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{"Quantity", "[", "\"\<FaradayConstant\>\"", "]"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ue", "=", 
   RowBox[{"Quantity", "[", "\"\<ElementaryCharge\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{"Quantity", "[", "\"\<ElementaryCharge\>\"", "]"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uKb", "=", 
   RowBox[{"Quantity", "[", "\"\<BoltzmannConstant\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kb", "=", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"UnitConvert", "[", 
      RowBox[{"Quantity", "[", "\"\<BoltzmannConstant\>\"", "]"}], "]"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", "x"}], "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "4.5318"}], ")"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "247.8"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"140", "-", "temp"}], ")"}]}]}]}], ",", "x"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.7495989649055843`*^9, 3.749598994390592*^9}, {
   3.749599157162964*^9, 3.749599158844817*^9}, {3.749599230776586*^9, 
   3.749599232576456*^9}, {3.7495995328232803`*^9, 3.7495995331496983`*^9}, {
   3.754072015534967*^9, 3.754072019182376*^9}, {3.754072401063051*^9, 
   3.754072453607018*^9}, {3.754072486167923*^9, 3.754072489143386*^9}, {
   3.754072527497356*^9, 3.754073029166676*^9}, {3.7540730854741383`*^9, 
   3.754073131248335*^9}, {3.7540732173906603`*^9, 3.7540732482763233`*^9}, {
   3.7541415821952057`*^9, 3.754141661688067*^9}, {3.754144239457048*^9, 
   3.7541442417298813`*^9}, {3.755048947384193*^9, 3.755048949816635*^9}, {
   3.7550499196134567`*^9, 3.755050015558416*^9}, {3.755050126809209*^9, 
   3.755050134404378*^9}, {3.755139070360071*^9, 3.7551390712415333`*^9}, {
   3.7551391100166063`*^9, 3.755139130481064*^9}, 3.755139251059987*^9, {
   3.755139297202305*^9, 3.755139319583198*^9}, {3.7551393607142763`*^9, 
   3.755139362975266*^9}, 3.75513998468279*^9, {3.755140027019532*^9, 
   3.755140149533547*^9}, {3.8003540947532187`*^9, 3.800354101368763*^9}, {
   3.800354139365427*^9, 3.800354143154436*^9}, {3.800355818847554*^9, 
   3.800355821004074*^9}, {3.800355922491355*^9, 3.800355937962881*^9}, {
   3.800356004482561*^9, 3.800356004626094*^9}, {3.8269162081831703`*^9, 
   3.826916242524226*^9}, {3.826916276446084*^9, 3.826916286906371*^9}, {
   3.826916345983798*^9, 3.826916364536092*^9}, {3.8269164347475023`*^9, 
   3.826916495184669*^9}, {3.826916746504867*^9, 3.826916840486433*^9}, {
   3.826916914772552*^9, 3.826917051141686*^9}, {3.826917090753063*^9, 
   3.826917225571665*^9}, {3.826918049958728*^9, 3.82691819180945*^9}, {
   3.826921445410768*^9, 3.8269215035159273`*^9}, {3.82692195213057*^9, 
   3.826921956067892*^9}, 3.826922045447104*^9, {3.8269221433221684`*^9, 
   3.826922144592826*^9}, 3.826934060424015*^9, {3.8315168561318016`*^9, 
   3.8315168566424503`*^9}, {3.8315547554844933`*^9, 3.831554756325223*^9}, {
   3.8317330350913906`*^9, 3.8317330452466373`*^9}, {3.8317331347409573`*^9, 
   3.8317331350230055`*^9}, 3.832329784729384*^9, {3.8358113132497373`*^9, 
   3.835811339033575*^9}, {3.8358113840778155`*^9, 3.835811389700847*^9}, {
   3.8358114333533306`*^9, 3.8358114932953267`*^9}, {3.8358115606416283`*^9, 
   3.8358115678173823`*^9}, {3.83581183027509*^9, 3.835811863451237*^9}, {
   3.8360095682149544`*^9, 3.836009596516696*^9}, 3.836009669500578*^9, {
   3.836011749318386*^9, 3.836011754205948*^9}, 3.8360727131388474`*^9, 
   3.8360727497334366`*^9, {3.837021360746849*^9, 3.8370213618348494`*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"34a42913-3373-4394-9991-924fcafc80d8"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836072766884833*^9, 3.8360727710255065`*^9}, 
   3.8360769919434934`*^9},ExpressionUUID->"18f9ac04-b2b6-4106-8e79-\
c733399fcfe2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iccepsilon", "=", 
   RowBox[{"80", "\[Times]", "\[Epsilon]0"}]}], " ", ";"}]], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.833948592836022*^9, 3.833948602247192*^9}, 
   3.833948638398803*^9, {3.8341883973110733`*^9, 3.8341884055528855`*^9}, {
   3.836072776658614*^9, 3.83607277783755*^9}, {3.836072827757969*^9, 
   3.8360728282298355`*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"8aee2f94-2eb0-498f-9703-5c3e78c56127"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.8360727881955137`*^9, 
  3.8360727966277723`*^9}},ExpressionUUID->"ae593e49-c40a-4217-aa1e-\
cc623dad030f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcepsilon", "=", 
   RowBox[{"78.358", "\[Times]", "\[Epsilon]0"}]}], " ", ";"}]], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.836072838338496*^9, 3.836072838917351*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"ab31565d-9ab1-4c87-9149-147d8606b916"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.1.3 Adjustable electrolyte parameters", "Subsubsection",
 CellChangeTimes->{{3.8360724377296596`*^9, 3.836072451754328*^9}, {
  3.836073108985962*^9, 
  3.8360731122417483`*^9}},ExpressionUUID->"663ce70c-bc8a-4674-92a9-\
5f04d3a725b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "2"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"um", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"5.0148*^-10", "\[Times]", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2.65449*^-20"}], "/", 
         RowBox[{"(", 
          RowBox[{"Kb", "*", "temp"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"3.25164*^-10", "\[Times]", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2.64948*^-20"}], "/", 
         RowBox[{"(", 
          RowBox[{"Kb", "*", "temp"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"3.57995*^-10", "\[Times]", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2.51681*^-20"}], "/", 
         RowBox[{"(", 
          RowBox[{"Kb", "*", "temp"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"1.83587*^-10", "\[Times]", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2.64948*^-20"}], "/", 
         RowBox[{"(", 
          RowBox[{"Kb", "*", "temp"}], ")"}]}], "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"QuantityArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3.04", ",", "2.32", ",", "3.34", ",", "5.5"}], "}"}], ",", 
     "\"\<Angstroms\>\""}], "]"}]}], ";"}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.833937629815688*^9, 3.8339377029224*^9}, {
   3.837007595396268*^9, 3.837007602956065*^9}, {3.837021117284956*^9, 
   3.837021118836433*^9}, 
   3.8371655106752357`*^9},ExpressionUUID->"a12149dd-deee-4879-80c2-\
a2a21b0170b4"],

Cell["Intracellular", "Text",
 CellChangeTimes->{{3.836072505195503*^9, 3.8360725079455943`*^9}},
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.6, 0.4, 0.2],ExpressionUUID->"872758e8-48d8-4415-80d9-22fef64e1588"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"icccbulk", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{"140", ",", "12", ",", "4", ",", "74"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iccT", "=", "temp"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"icclambda", "=", 
   RowBox[{
    RowBox[{"iccepsilon", "*", "R", "*", 
     RowBox[{
      RowBox[{"iccT", "/", 
       RowBox[{"F", "^", "2"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "*", "icccbulk"}], ")"}], "//", "Total"}], 
       ")"}]}]}], "//", "Sqrt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"icclb", "=", 
   RowBox[{
    RowBox[{"e", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", "*", "Pi", "*", "iccepsilon", "*", "Kb", "*", "iccT"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"iccalfa2", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["F", "3"], "\[Times]", 
      RowBox[{"z", "^", "3"}], "\[Times]", "um", "\[Times]", 
      RowBox[{
       RowBox[{"icccbulk", "/", "R"}], "/", "iccT"}]}], "//", "Total"}]}], 
   ";"}],
  FontColor->GrayLevel[0]]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.749521214111031*^9, 3.7495212272942457`*^9}, 
   3.74952631371472*^9, {3.749562329599935*^9, 3.749562361504684*^9}, {
   3.749563589588736*^9, 3.749563595297678*^9}, 3.754141716602364*^9, {
   3.755049429760198*^9, 3.755049438869773*^9}, {3.7550504554522247`*^9, 
   3.755050459484247*^9}, {3.755050548905428*^9, 3.755050549861302*^9}, 
   3.810636237856378*^9, 3.82691782604632*^9, {3.826917968307487*^9, 
   3.826918002835554*^9}, {3.826919279906604*^9, 3.826919283594648*^9}, {
   3.82691990395231*^9, 3.8269199418687553`*^9}, {3.8269228008598433`*^9, 
   3.826922801791232*^9}, 3.826934452413136*^9, {3.826937341647328*^9, 
   3.82693734757128*^9}, {3.826937595503449*^9, 3.8269375967488813`*^9}, {
   3.8275296841037025`*^9, 3.8275296876920443`*^9}, {3.8275435751634502`*^9, 
   3.8275435904613123`*^9}, {3.827829434207993*^9, 3.8278294478290277`*^9}, {
   3.8315213449635634`*^9, 3.8315213645695724`*^9}, {3.8315214030468955`*^9, 
   3.831521504137665*^9}, {3.831522501786049*^9, 3.83152252636616*^9}, {
   3.831554773801657*^9, 3.8315547760648355`*^9}, {3.8315551542390394`*^9, 
   3.8315551547197533`*^9}, {3.8317339585887733`*^9, 3.831733967443688*^9}, 
   3.8339347566767173`*^9, {3.8339348561446*^9, 3.8339349187252407`*^9}, {
   3.8339350151714025`*^9, 3.8339350154715967`*^9}, 3.83393537805956*^9, {
   3.833935414697749*^9, 3.8339354619863043`*^9}, {3.833935508379902*^9, 
   3.833935514176996*^9}, 3.833944063411601*^9, 3.833944314324499*^9, 
   3.833944445854146*^9},
 CellLabel->
  "In[538]:=",ExpressionUUID->"1fe0be80-5bc6-4b24-a76e-4231486af7e2"],

Cell["In-vitro", "Text",
 CellChangeTimes->{{3.8360725206200485`*^9, 3.836072525474995*^9}},
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.6, 0.4, 0.2],ExpressionUUID->"a7c322b9-0f6b-4c3a-a3af-faec97264068"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ivccBulk", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{"100", ",", "0", ",", "100", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivcT", "=", "temp"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivclambda", "=", 
   RowBox[{
    RowBox[{"ivcepsilon", "*", "R", "*", 
     RowBox[{
      RowBox[{"ivcT", "/", 
       RowBox[{"F", "^", "2"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "2"], "*", "ivccBulk"}], "//", "Total"}], 
       ")"}]}]}], "//", "Sqrt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivclb", "=", 
   RowBox[{
    RowBox[{"e", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", "*", "Pi", "*", "ivcepsilon", "*", "Kb", "*", "ivcT"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivcalfa2", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["F", "3"], 
     StyleBox["\[Times]",
      FontColor->GrayLevel[0]], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["(",
         FontColor->GrayLevel[0]], 
        RowBox[{
         SuperscriptBox["z", "3"], 
         StyleBox["*",
          FontColor->GrayLevel[0]], 
         StyleBox["um",
          FontColor->GrayLevel[0]], 
         StyleBox["*",
          FontColor->GrayLevel[0]], " ", "ivccBulk"}], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}], 
       StyleBox["/",
        FontColor->GrayLevel[0]], 
       StyleBox["R",
        FontColor->GrayLevel[0]]}], 
      StyleBox["/",
       FontColor->GrayLevel[0]], 
      StyleBox["ivcT",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox["//",
     FontColor->GrayLevel[0]], 
    StyleBox["Total",
     FontColor->GrayLevel[0]]}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.831734023818928*^9, 3.8317340784750957`*^9}, {
   3.8339355436150155`*^9, 3.8339355514194317`*^9}, 3.833937262536599*^9, 
   3.8339379738764625`*^9, 3.833943576916798*^9, {3.833944535158349*^9, 
   3.8339445355442924`*^9}, {3.833944733738861*^9, 3.833944737597596*^9}, 
   3.8339464145743055`*^9, {3.8339464516223507`*^9, 3.8339465005752015`*^9}, 
   3.833946757171709*^9, {3.834969379154807*^9, 3.8349693941969624`*^9}, {
   3.834970255736409*^9, 3.834970367493471*^9}, {3.8349705847992764`*^9, 
   3.834970588631028*^9}, {3.8349706213059015`*^9, 3.8349706880347705`*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"aac28957-2c9b-473d-9869-681e03b33082"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.1.4 Linear and surface charge density", "Subsubsection",
 CellChangeTimes->{{3.8360725492277846`*^9, 
  3.8360725626817436`*^9}},ExpressionUUID->"38587c6f-d727-4bff-a973-\
6d264ea0917d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]pHi", "=", 
   RowBox[{"QpHi", "/", "L"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]pHi", "=", 
   RowBox[{"\[Lambda]pHi", "/", "denom"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]pH", " ", "=", " ", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{"\[Sigma]pHi", ",", 
     RowBox[{
      RowBox[{"\"\<Coulombs\>\"", "/", "\"\<Meters\>\""}], "/", 
      "\"\<Meters\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xpH", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"y\[Sigma]", "=", 
   RowBox[{"QuantityMagnitude", "[", "\[Sigma]pH", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f\[Sigma]", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"xpH", ",", " ", "y\[Sigma]"}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.7513049416586237`*^9, 3.751304944288046*^9}, {
   3.7513092953347073`*^9, 3.751309299568225*^9}, {3.8269138969110203`*^9, 
   3.826913921233707*^9}, 3.826913968129909*^9, {3.8269141599408712`*^9, 
   3.826914161545397*^9}, {3.826917315911858*^9, 3.826917327728675*^9}, 
   3.8278295914950438`*^9, 3.83312239739246*^9, {3.8339380797491198`*^9, 
   3.8339380867975707`*^9}, {3.835526491222741*^9, 3.835526525658374*^9}, {
   3.835526578670049*^9, 3.8355265973880143`*^9}, {3.835526669018419*^9, 
   3.8355266695649157`*^9}, {3.83552718191678*^9, 3.8355271872779655`*^9}, {
   3.83676086131468*^9, 3.836760864622674*^9}, {3.836764724975239*^9, 
   3.836764731224845*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"a3e70049-009c-47ae-95e3-8c8e77a5c105"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.2 Current and Electric Potential", "Subsection",
 CellChangeTimes->{{3.8360728946537895`*^9, 
  3.8360728991241245`*^9}},ExpressionUUID->"f7f15b38-9564-4096-81e5-\
56a1ef8a1343"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836073255339903*^9, 3.8360732584494705`*^9}},
 FontWeight->"Bold",ExpressionUUID->"2643740c-87e2-482c-942a-b2d06b054614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"icckinf", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["F", "2"], "*", 
     SuperscriptBox["z", "2"], "*", "um", "*", "icccbulk"}], "//", 
    "Total"}]}], ";"}]], "Input",
 CellChangeTimes->{3.8339456786551933`*^9},
 CellLabel->
  "In[554]:=",ExpressionUUID->"3491bdf4-2869-4b9c-9260-55a6511e421d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "icckeff", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"icckeff", "[", "pH_", "]"}],
   FontColor->GrayLevel[0]], 
  StyleBox[":=",
   FontColor->GrayLevel[0]], 
  RowBox[{
   StyleBox["(",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox[
     RowBox[{"icckeff", "[", "pH", "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox["=",
     FontColor->GrayLevel[0]], 
    RowBox[{
     StyleBox["icckinf",
      FontColor->GrayLevel[0]], 
     StyleBox["*",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox["(",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox["1",
        FontColor->GrayLevel[0]], 
       StyleBox["-",
        FontColor->GrayLevel[0]], 
       RowBox[{
        StyleBox["(",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "F", "*", 
              StyleBox[
               RowBox[{"f\[Sigma]", "[", "pH", "]"}],
               FontColor->RGBColor[0.5, 0, 0.5]], "*", 
              RowBox[{"icclambda", "^", "2"}], "*", "CylRadd"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"iccepsilon", "*", "R", "*", "iccT", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"icclb", "+", "CylRadd"}], ")"}], "^", "2"}], "-", 
                RowBox[{"CylRadd", "^", "2"}]}], ")"}]}], ")"}]}], ")"}],
          FontColor->GrayLevel[0]], 
         StyleBox["*",
          FontColor->GrayLevel[0]], 
         RowBox[{
          StyleBox["(",
           FontColor->GrayLevel[0]], 
          RowBox[{
           StyleBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["z", "3"], "*", "um", "*", "icccbulk"}], "//", 
              "Total"}], ")"}],
            FontColor->GrayLevel[0]], 
           StyleBox["/",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["(",
             FontColor->GrayLevel[0]], 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               StyleBox["z",
                FontColor->GrayLevel[0]], "2"], 
              StyleBox[" ",
               FontColor->GrayLevel[0]], 
              StyleBox["um",
               FontColor->GrayLevel[0]], 
              StyleBox[" ",
               FontColor->GrayLevel[0]], 
              StyleBox["icccbulk",
               FontColor->GrayLevel[0]]}], 
             StyleBox["//",
              FontColor->GrayLevel[0]], 
             StyleBox["Total",
              FontColor->GrayLevel[0]]}], 
            StyleBox[")",
             FontColor->GrayLevel[0]]}]}], 
          StyleBox[")",
           FontColor->GrayLevel[0]]}], 
         StyleBox["*",
          FontColor->GrayLevel[0]], 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"icclb", "+", "CylRadd"}], ")"}], "*", 
                RowBox[{"BesselK", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", 
                   "icclambda"}]}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"CylRadd", "*", 
                RowBox[{"BesselK", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"CylRadd", "/", "icclambda"}]}], "]"}]}], ")"}]}], 
             ")"}]}], ")"}],
          FontColor->GrayLevel[0]]}], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}]}], 
      StyleBox[")",
       FontColor->GrayLevel[0]]}]}]}], 
   StyleBox[")",
    FontColor->GrayLevel[0]]}]}]}], "Input",
 CellChangeTimes->{{3.8339454471353817`*^9, 3.8339454845131865`*^9}, 
   3.833945766650652*^9},
 CellLabel->
  "In[555]:=",ExpressionUUID->"6c5e09b1-227e-4b9a-b847-73ed1a920937"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"iccG", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"(", "CylRadd", ")"}], "/", "icclambda"}]}], "]"}], 
           ")"}], "^", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"(", "CylRadd", ")"}], "/", "icclambda"}]}], "]"}], 
           ")"}], "^", "2"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"2", "*", "icclambda", "*", 
         RowBox[{"BesselK", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"(", "CylRadd", ")"}], "/", "icclambda"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"(", "CylRadd", ")"}], "/", "icclambda"}]}], "]"}], "/", 
          "CylRadd"}]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"icclb", "+", "CylRadd"}], ")"}], "^", "2"}], ")"}], 
           "/", 
           RowBox[{"CylRadd", "^", "2"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"BesselK", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", 
                "icclambda"}]}], "]"}], ")"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"BesselK", "[", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", 
                "icclambda"}]}], "]"}], ")"}], "^", "2"}]}], ")"}]}], ")"}], 
       "-", 
       RowBox[{"(", 
        RowBox[{"2", "*", "icclambda", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", 
          RowBox[{"CylRadd", "^", "2"}]}], "*", 
         RowBox[{"BesselK", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", "icclambda"}]}], 
          "]"}], "*", 
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"icclb", "+", "CylRadd"}], ")"}], "/", "icclambda"}]}], 
          "]"}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{"CylRadd", "/", "icclambda"}]}], "]"}], ")"}], "^", "2"}], 
      ")"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.83394534973689*^9, 3.833945352223798*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"0fb83b6a-55ec-4e56-8f2f-b7b6ccb27c99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "iccEP", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iccEP", "[", 
   RowBox[{"pH_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"iccEP", "[", 
     RowBox[{"pH", ",", "r"}], "]"}], "=", 
    RowBox[{
     StyleBox[
      RowBox[{"f\[Sigma]", "[", "pH", "]"}],
      FontColor->RGBColor[0.5, 0, 0.5]], "*", "icclambda", "*", 
     RowBox[{
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", "r"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"iccepsilon", "*", 
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{"CylRadd", "/", "icclambda"}]}], "]"}]}], ")"}]}]}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.8341884540242863`*^9, 3.8341884723225975`*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"5e25b99c-4c7d-4491-b917-fdbbf80f9d70"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836073271554104*^9, 
  3.836073274098508*^9}},ExpressionUUID->"2fd499c2-b5e6-41d2-ad08-\
1d358cf19596"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivckinf", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["F", "2"], "*", 
     SuperscriptBox["z", "2"], 
     StyleBox["*",
      FontColor->GrayLevel[0]], 
     StyleBox["um",
      FontColor->GrayLevel[0]], 
     StyleBox["*",
      FontColor->GrayLevel[0]], "ivccBulk"}], 
    StyleBox["//",
     FontColor->GrayLevel[0]], 
    StyleBox["Total",
     FontColor->GrayLevel[0]]}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]], "Input",
 CellChangeTimes->{{3.8349694972314787`*^9, 3.8349695058304663`*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"47d79107-93a3-4a17-b57a-5c0c7180bd36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ivckeff", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivckeff", "[", "pH_", "]"}], " ", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ivckeff", "[", "pH", "]"}], "=", 
    RowBox[{"ivckinf", "*", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "F", "*", 
             RowBox[{"f\[Sigma]", "[", "pH", "]"}], "*", 
             RowBox[{"ivclambda", "^", "2"}], "*", "CylRadd"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"ivcepsilon", "*", "R", "*", "ivcT", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ivclb", " ", "+", "CylRadd"}], ")"}], "^", "2"}], 
               " ", "-", " ", 
               RowBox[{"CylRadd", "^", "2"}]}], ")"}]}], ")"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["z", "3"], 
              StyleBox["*",
               FontColor->GrayLevel[0]], 
              StyleBox["um",
               FontColor->GrayLevel[0]], 
              StyleBox["*",
               FontColor->GrayLevel[0]], "ivccBulk"}], 
             StyleBox["//",
              FontColor->GrayLevel[0]], 
             StyleBox["Total",
              FontColor->GrayLevel[0]]}], " ", ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["z", "2"], 
              StyleBox["*",
               FontColor->GrayLevel[0]], 
              StyleBox["um",
               FontColor->GrayLevel[0]], 
              StyleBox["*",
               FontColor->GrayLevel[0]], "ivccBulk"}], 
             StyleBox["//",
              FontColor->GrayLevel[0]], 
             StyleBox["Total",
              FontColor->GrayLevel[0]]}], ")"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "*", 
               RowBox[{"BesselK", "[", 
                RowBox[{"1", ",", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ivclb", " ", "+", "CylRadd"}], ")"}], "/", 
                  "ivclambda"}]}], "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"CylRadd", "*", 
               RowBox[{"BesselK", "[", 
                RowBox[{"1", ",", " ", 
                 RowBox[{"CylRadd", "/", "ivclambda"}]}], "]"}]}], ")"}]}], 
            ")"}]}], ")"}]}], ")"}]}], ")"}]}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.834969529216264*^9, 3.834969554190507*^9}, {
  3.8349697669859476`*^9, 3.8349697710303526`*^9}},
 CellLabel->
  "In[561]:=",ExpressionUUID->"473a30be-4518-4eb5-917d-4852b6bd8f18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcG", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"BesselK", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             RowBox[{"(", "CylRadd", ")"}], "/", "ivclambda"}]}], "]"}], 
          ")"}], "^", "2"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", " ", 
            RowBox[{
             RowBox[{"(", "CylRadd", ")"}], "/", "ivclambda"}]}], "]"}], 
          ")"}], "^", "2"}]}], ")"}], " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{"2", "*", "ivclambda", "*", 
        RowBox[{"BesselK", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", "CylRadd", ")"}], "/", "ivclambda"}]}], "]"}], "*", 
        RowBox[{
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", " ", 
           RowBox[{
            RowBox[{"(", "CylRadd", ")"}], "/", "ivclambda"}]}], "]"}], "/", 
         "CylRadd"}]}], ")"}], " ", "-", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "^", "2"}], 
           ")"}], "/", 
          RowBox[{"CylRadd", "^", "2"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "/", 
               "ivclambda"}]}], "]"}], ")"}], "^", "2"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "/", 
               "ivclambda"}]}], "]"}], ")"}], "^", "2"}]}], ")"}]}], ")"}], 
      " ", "-", " ", 
      RowBox[{"(", 
       RowBox[{"2", "*", "ivclambda", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "/", 
         RowBox[{"CylRadd", "^", "2"}]}], "*", 
        RowBox[{"BesselK", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "/", 
           "ivclambda"}]}], "]"}], "*", 
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ivclb", " ", "+", " ", "CylRadd"}], ")"}], "/", 
           "ivclambda"}]}], "]"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"BesselK", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"CylRadd", "/", "ivclambda"}]}], "]"}], ")"}], "^", "2"}], 
     ")"}]}]}], ";"}]], "Input",
 ShowCellLabel->False,
 CellLabel->
  "In[563]:=",ExpressionUUID->"69d52d1c-a877-4f7c-ad19-46d6fdc10e17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ivcEp", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivcEp", "[", 
   RowBox[{"pH_", ",", " ", "r_"}], "]"}], " ", ":=", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"ivcEp", "[", 
     RowBox[{"pH", ",", " ", "r"}], "]"}], "=", 
    RowBox[{
     RowBox[{"f\[Sigma]", "[", "pH", "]"}], "*", "ivclambda", "*", 
     RowBox[{
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", " ", "r"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"ivcepsilon", "*", 
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"CylRadd", "/", "ivclambda"}]}], "]"}]}], ")"}]}]}]}], 
   ")"}]}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.8339413997169037`*^9, 3.8339414259809213`*^9}, {
   3.8339416047140055`*^9, 3.833941624142146*^9}, 3.833947484006958*^9},
 CellLabel->
  "In[564]:=",ExpressionUUID->"b849c9cf-4591-4c53-9f1b-28f9474ad4d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3 Resistance", "Subsection",
 CellChangeTimes->{{3.836073174992202*^9, 
  3.8360731776340084`*^9}},ExpressionUUID->"496752d1-d879-4f94-989d-\
33c47469b09a"],

Cell[CellGroupData[{

Cell["1.3.1 Transverse resistance", "Subsubsection",
 CellChangeTimes->{{3.836073195369691*^9, 
  3.8360732214438066`*^9}},ExpressionUUID->"28a93ed4-c3bc-4fad-ba0c-\
a201074aeb6a"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.836073476678986*^9},ExpressionUUID->"fa3dc2cb-bf55-4ce7-bdef-\
d7a213fefad2"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ClearAll", "[", "iccdeltak", "]"}], ";"}],
  FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"iccdeltak", "[", "pH_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"iccdeltak", "[", "pH", "]"}], "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "iccalfa2"}], "*", 
        RowBox[{
         RowBox[{
          RowBox[{"icclb", "/", "2"}], "/", "rzp"}], "/", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rzp", "+", "icclb"}], ")"}], "/", "rzp"}], "]"}]}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"iccEP", "[", 
           RowBox[{"pH", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"icclb", "+", "rzp"}], ")"}], "/", "icclambda"}], 
             ")"}]}], "]"}], "+", 
          RowBox[{"iccEP", "[", 
           RowBox[{"pH", ",", 
            RowBox[{"(", 
             RowBox[{"rzp", "/", "icclambda"}], ")"}]}], "]"}]}], ")"}]}], 
       "+", 
       RowBox[{"icckinf", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"icclb", "/", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"rzp", "+", "icclb"}], ")"}], "/", "rzp"}], "]"}]}], 
           "/", "rzp"}], "-", "1"}], ")"}]}]}]}], ")"}]}], ";"}],
  FontColor->GrayLevel[0]]}], "Input",
 CellChangeTimes->{{3.8339431187852955`*^9, 3.8339431374009533`*^9}, {
   3.8339431844778075`*^9, 3.8339431973921957`*^9}, 3.8339475133572063`*^9, {
   3.833950316836572*^9, 3.833950323168319*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"a150f437-c19c-40be-bd80-c28b4500d1c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "iccRt", "]"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"iccRt", "[", "pH_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"iccRt", "[", "pH", "]"}], "=", 
      RowBox[{"icclb", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "Pi", "*", "uLm", "*", "rzp", "*", 
         RowBox[{"Abs", "[", 
          RowBox[{"icckinf", "+", 
           RowBox[{"iccdeltak", "[", "pH", "]"}]}], "]"}]}], ")"}]}]}], 
     ")"}]}], ";"}],
  FontColor->GrayLevel[0]]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{{3.8339432583641963`*^9, 3.833943272470214*^9}, {
   3.8339475287417173`*^9, 3.8339475469716215`*^9}, 3.8339503103932695`*^9, 
   3.8341885118163915`*^9},
 CellLabel->
  "In[568]:=",ExpressionUUID->"80e312c2-bd8d-474a-a7b1-40a4e9026b55"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836073497668501*^9, 
  3.83607350481063*^9}},ExpressionUUID->"8cf3b778-6e68-4523-bcf6-\
5df94c8c1d5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ivcdeltak", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ivcdeltak", "[", "pH_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ivcdeltak", "[", "pH", "]"}], " ", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ivcalfa2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{"ivclb", "/", "2"}], "/", "rzp"}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rzp", " ", "+", " ", "ivclb"}], ")"}], "/", "rzp"}], 
         "]"}]}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ivcEp", "[", 
          RowBox[{"pH", ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ivclb", " ", "+", " ", "rzp"}], ")"}], "/", 
             "ivclambda"}], ")"}]}], "]"}], " ", "+", " ", 
         RowBox[{"ivcEp", "[", 
          RowBox[{"pH", ",", " ", 
           RowBox[{"(", 
            RowBox[{"rzp", "/", "ivclambda"}], ")"}]}], "]"}]}], ")"}]}], " ",
       "+", " ", 
      RowBox[{"ivckinf", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ivclb", "/", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"rzp", " ", "+", " ", "ivclb"}], ")"}], "/", "rzp"}], 
            "]"}]}], "/", "rzp"}], " ", "-", " ", "1"}], ")"}]}]}]}], ")"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.8339475983159533`*^9, 3.8339476593973436`*^9}, {
  3.83395029744557*^9, 3.833950301393444*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"224b31a0-d9d1-495f-a9d3-a192b207912e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ivcRt", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ivcRt", "[", "pH_", "]"}], " ", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ivcRt", "[", "pH", "]"}], "=", " ", 
     RowBox[{"ivclb", "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "Pi", "*", "uLm", "*", "rzp", "*", 
        RowBox[{"Abs", "[", 
         RowBox[{"ivckinf", " ", "+", " ", 
          RowBox[{"ivcdeltak", "[", "pH", "]"}]}], "]"}]}], ")"}]}]}], 
    ")"}]}], ";"}]}], "Input",
 ShowCellLabel->False,
 CellChangeTimes->{
  3.833947589208976*^9, {3.833947684643344*^9, 3.8339477277577143`*^9}, 
   3.833950290175557*^9},
 CellLabel->
  "In[572]:=",ExpressionUUID->"8d72ffc4-79c2-437a-9a5f-59f48f409c3b"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3.2 Longitudinal resistance", "Subsubsection",
 CellChangeTimes->{{3.8360735565789747`*^9, 
  3.8360735730509243`*^9}},ExpressionUUID->"f5327c6c-442d-4f7e-8c35-\
bbe73560b15f"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836073594411534*^9, 
  3.8360736121467953`*^9}},ExpressionUUID->"ebe5a30f-4d3c-4a08-a142-\
b4a6e3ff8009"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ClearAll", "[", "iccRl", "]"}], ";"}],
  FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"iccRl", "[", "pH_", "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[":=",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["(",
     FontColor->GrayLevel[0]], 
    RowBox[{
     StyleBox[
      RowBox[{"iccRl", "[", "pH", "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox["=",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox["uLm",
       FontColor->GrayLevel[0]], 
      StyleBox["/",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox["(",
        FontColor->GrayLevel[0]], 
       RowBox[{
        StyleBox[
         RowBox[{"N", "[", 
          RowBox[{"Pi", ",", "10"}], "]"}],
         FontColor->GrayLevel[0]], 
        StyleBox["*",
         FontColor->GrayLevel[0]], 
        StyleBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"icclb", "+", "rzp"}], ")"}], "^", "2"}], "-", 
           RowBox[{"rzp", "^", "2"}]}], ")"}],
         FontColor->GrayLevel[0]], 
        StyleBox["*",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox["(",
          FontColor->GrayLevel[0]], 
         RowBox[{
          StyleBox[
           RowBox[{"icckeff", "[", "pH", "]"}],
           FontColor->GrayLevel[0]], 
          StyleBox["+",
           FontColor->GrayLevel[0]], 
          RowBox[{
           StyleBox["iccG",
            FontColor->GrayLevel[0]], 
           StyleBox["*",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["(",
             FontColor->GrayLevel[0]], 
            RowBox[{
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{
               StyleBox[
                RowBox[{"rzp", "^", "2"}],
                FontColor->GrayLevel[0]], 
               StyleBox["*",
                FontColor->GrayLevel[0]], 
               RowBox[{
                StyleBox[
                 RowBox[{"f\[Sigma]", "[", "pH", "]"}],
                 FontColor->RGBColor[0.5, 0, 0.5]], 
                StyleBox["^",
                 FontColor->GrayLevel[0]], 
                StyleBox["2",
                 FontColor->GrayLevel[0]]}]}], 
              StyleBox[")",
               FontColor->GrayLevel[0]]}], 
             StyleBox["/",
              FontColor->GrayLevel[0]], 
             StyleBox[
              RowBox[{"(", 
               RowBox[{"mu", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"icclb", "+", "rzp"}], ")"}], "^", "2"}], "-", 
                  RowBox[{"rzp", "^", "2"}]}], ")"}]}], ")"}],
              FontColor->GrayLevel[0]]}], 
            StyleBox[")",
             FontColor->GrayLevel[0]]}]}]}], 
         StyleBox[")",
          FontColor->GrayLevel[0]]}]}], 
       StyleBox[")",
        FontColor->GrayLevel[0]]}]}]}], 
    StyleBox[")",
     FontColor->GrayLevel[0]]}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]}], "Input",
 CellChangeTimes->{{3.74952239477724*^9, 3.749522402039484*^9}, {
   3.749523722528233*^9, 3.7495237225319757`*^9}, {3.749523762897606*^9, 
   3.7495237629013567`*^9}, {3.749524337186816*^9, 3.7495243572005453`*^9}, {
   3.75514204309223*^9, 3.755142047074054*^9}, 3.8269193582070704`*^9, {
   3.827529346609746*^9, 3.8275293560616326`*^9}, 3.827529796232085*^9, 
   3.831517163850627*^9, 3.8317342861614065`*^9, 3.831734321507896*^9, {
   3.8339477858755255`*^9, 3.833947852139739*^9}, {3.833947945229705*^9, 
   3.833947961664729*^9}, 3.8339502866086445`*^9, 3.836073625849557*^9, {
   3.836081570275714*^9, 3.8360815887738447`*^9}, {3.8360816569347177`*^9, 
   3.8360816626253567`*^9}, {3.836081867054722*^9, 3.836081916281953*^9}},
 CellLabel->
  "In[574]:=",ExpressionUUID->"584858b5-e2fd-45ac-ba54-eab795e12549"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.836073644443659*^9},ExpressionUUID->"229c69b7-0826-4eec-a006-\
b14c2c174394"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ivcRl", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ivcRl", "[", "pH_", "]"}], " ", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ivcRl", "[", "pH", "]"}], "=", " ", 
     RowBox[{"uLm", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Pi", ",", " ", "10"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ivclb", " ", "+", " ", "rzp"}], ")"}], "^", "2"}], " ", 
          "-", " ", 
          RowBox[{"rzp", "^", "2"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ivckeff", "[", "pH", "]"}], " ", "+", 
          RowBox[{"ivcG", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rzp", "^", "2"}], "*", 
               RowBox[{
                RowBox[{"f\[Sigma]", "[", "pH", "]"}], "^", "2"}]}], ")"}], 
             "/", 
             RowBox[{"(", 
              RowBox[{"mu", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ivclb", " ", "+", " ", "rzp"}], ")"}], "^", "2"}],
                  " ", "-", " ", 
                 RowBox[{"rzp", "^", "2"}]}], ")"}]}], ")"}]}], ")"}]}]}], 
         ")"}]}], ")"}]}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8339478784548707`*^9, 3.8339479201723433`*^9}, {
   3.833947972338972*^9, 3.833947989238655*^9}, 3.833950281918237*^9, {
   3.836073661933821*^9, 3.8360736624680424`*^9}},
 CellLabel->
  "In[576]:=",ExpressionUUID->"fa5d9c61-b80a-4ad5-a364-d4a3532d7144"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.4 Capacitance", "Subsection",
 CellChangeTimes->{{3.836073721180052*^9, 
  3.8360737273313727`*^9}},ExpressionUUID->"20038edd-1cc5-423b-aba6-\
bd1e11a9910b"],

Cell[TextData[StyleBox["Formulas",
 FontSize->16,
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.836073768970499*^9, 3.836073799626415*^9}},
 FontWeight->"Bold",ExpressionUUID->"98279648-a1bb-4635-a7dd-a9704fdf5714"],

Cell[TextData[{
 "Total capacitance, non linear parameter b, and linear capacitance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "0"], TraditionalForm]], "Text",ExpressionUUID->
  "f7a88a1e-8698-48eb-a7d7-2f081990c288"]
}], "Text",
 CellChangeTimes->{
  3.8278304678851204`*^9},ExpressionUUID->"a7983a5a-3d6b-496f-878e-\
6c4173e649ad"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         StyleBox["C", "TI"], "\[Congruent]", 
         FractionBox[
          StyleBox["Q", "TI"], 
          StyleBox["V", "TI"]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["C", "TI"], "0"], 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             StyleBox["b", "TI"], 
             StyleBox["V", "TI"], "+", "\[CenterEllipsis]"}], ")"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "C\\equiv \\frac{Q}{V}=C_0(1-bV+\\cdots)", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2e60420c-6631-4131-935c-ebd076fef4ce"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         StyleBox["C", "TI"], "\[LongEqual]", "2", "\[Pi]", 
         SubscriptBox[
          StyleBox["r", "TI"], "\[Xi]"], 
         StyleBox["l", "TI"], 
         OverscriptBox[
          SubscriptBox[
           StyleBox["C", "TI"], "0"], "^"], 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             StyleBox["b", "TI"], 
             StyleBox["V", "TI"], "+", "\[CenterEllipsis]"}], ")"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "C=2\\pi r_{\\xi} l \\hat{C_0}(1-bV+\\cdots)", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "99187d38-e9a4-4617-b9ff-65a9272937d5"]
}], "Text",
 CellChangeTimes->{{3.8349688863629904`*^9, 
  3.8349689032746325`*^9}},ExpressionUUID->"11c7e254-4a94-4058-b560-\
8116835d8e0d"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.8360738570986013`*^9},ExpressionUUID->"88bd7782-80de-44d0-bf33-\
fda23b956d48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iccbData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "292.15`"}], "}"}], ",", 
       RowBox[{"-", "7.04520225907309`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "298.15`"}], "}"}], ",", 
       RowBox[{"-", "6.89048276867725`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "304.15`"}], "}"}], ",", 
       RowBox[{"-", "6.73416299607119`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "310.15`"}], "}"}], ",", 
       RowBox[{"-", "6.59010575643678`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "316.15`"}], "}"}], ",", 
       RowBox[{"-", "6.44534085018724`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "321.15`"}], "}"}], ",", 
       RowBox[{"-", "6.34547837304308`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "292.15`"}], "}"}], ",", 
       RowBox[{"-", "6.28074214667302`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "298.15`"}], "}"}], ",", 
       RowBox[{"-", "6.13256380730967`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "304.15`"}], "}"}], ",", 
       RowBox[{"-", "6.00844292361789`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "310.15`"}], "}"}], ",", 
       RowBox[{"-", "5.87271744113126`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "316.15`"}], "}"}], ",", 
       RowBox[{"-", "5.75064914306211`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "321.15`"}], "}"}], ",", 
       RowBox[{"-", "6.06658584257457`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "292.15`"}], "}"}], ",", 
       RowBox[{"-", "6.71607999857109`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "298.15`"}], "}"}], ",", 
       RowBox[{"-", "6.56332216453148`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "304.15`"}], "}"}], ",", 
       RowBox[{"-", "6.42280090664478`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "310.15`"}], "}"}], ",", 
       RowBox[{"-", "6.29918390933296`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "316.15`"}], "}"}], ",", 
       RowBox[{"-", "6.16096339871244`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "321.15`"}], "}"}], ",", 
       RowBox[{"-", "6.04167350136179`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "292.15`"}], "}"}], ",", 
       RowBox[{"-", "5.81335886814075`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "298.15`"}], "}"}], ",", 
       RowBox[{"-", "6.28330683790706`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "304.15`"}], "}"}], ",", 
       RowBox[{"-", "6.15316214319245`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "310.15`"}], "}"}], ",", 
       RowBox[{"-", "6.02021369091225`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "316.15`"}], "}"}], ",", 
       RowBox[{"-", "5.89228243092949`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "321.15`"}], "}"}], ",", 
       RowBox[{"-", "5.80553826189667`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "292.15`"}], "}"}], ",", 
       RowBox[{"-", "6.40890056765745`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "298.15`"}], "}"}], ",", 
       RowBox[{"-", "6.28916671595026`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "304.15`"}], "}"}], ",", 
       RowBox[{"-", "6.1632113574831`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "310.15`"}], "}"}], ",", 
       RowBox[{"-", "6.01885334528184`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "316.15`"}], "}"}], ",", 
       RowBox[{"-", "5.89431507240758`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "321.15`"}], "}"}], ",", 
       RowBox[{"-", "5.79791718256665`"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.835556930814768*^9, 3.8355570064839897`*^9}, 
   3.8355576018031635`*^9, {3.8355577570868835`*^9, 3.8355577749808965`*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"7232a811-9050-4b24-a4f7-14fbfec28c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iccbFun", "=", 
   RowBox[{"Interpolation", "[", "iccbData", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.835557016147747*^9, 3.835557040156223*^9}, {
   3.8355570996717734`*^9, 3.83555710109503*^9}, {3.8355577686626935`*^9, 
   3.835557769272215*^9}, 3.835561440004629*^9},
 CellLabel->
  "In[579]:=",ExpressionUUID->"90916f08-4ce3-4816-a763-872ee649f667"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iccC0Data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "292.15`"}], "}"}], ",", 
       "1.0432863967024569`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "298.15`"}], "}"}], ",", 
       "1.0225407162208487`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "304.15`"}], "}"}], ",", 
       "1.0240047054821349`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "310.15`"}], "}"}], ",", 
       "1.0147916167007417`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "316.15`"}], "}"}], ",", 
       "1.0058125110484047`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "321.15`"}], "}"}], ",", 
       "9.981541303655341`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "292.15`"}], "}"}], ",", 
       "1.0245714375729816`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "298.15`"}], "}"}], ",", 
       "1.0153308060136974`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "304.15`"}], "}"}], ",", 
       "1.0056365369761956`*^-16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "310.15`"}], "}"}], ",", 
       "9.957074947621269`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "316.15`"}], "}"}], ",", 
       "9.868265405226516`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "321.15`"}], "}"}], ",", 
       "9.615463501293229`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "292.15`"}], "}"}], ",", 
       "9.868605741895497`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "298.15`"}], "}"}], ",", 
       "9.777019581758469`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "304.15`"}], "}"}], ",", 
       "9.685294018510589`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "310.15`"}], "}"}], ",", 
       "9.593633574318281`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "316.15`"}], "}"}], ",", 
       "9.509402148921713`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "321.15`"}], "}"}], ",", 
       "9.443797011149544`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "292.15`"}], "}"}], ",", 
       "9.90639006818256`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "298.15`"}], "}"}], ",", 
       "9.590310669527228`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "304.15`"}], "}"}], ",", 
       "9.5017706825976`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "310.15`"}], "}"}], ",", 
       "9.414436864934496`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "316.15`"}], "}"}], ",", 
       "9.33190446317278`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "321.15`"}], "}"}], ",", 
       "9.26085891621492`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "292.15`"}], "}"}], ",", 
       "9.620430934089083`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "298.15`"}], "}"}], ",", 
       "9.523858434731886`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "304.15`"}], "}"}], ",", 
       "9.432743688284012`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "310.15`"}], "}"}], ",", 
       "9.352201276152549`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "316.15`"}], "}"}], ",", 
       "9.267796285438349`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "321.15`"}], "}"}], ",", 
       "9.199418895175065`*^-17"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8355574137197676`*^9, 3.8355574697303147`*^9}, 
   3.835557629571613*^9, 3.8355577384387846`*^9},
 CellLabel->
  "In[580]:=",ExpressionUUID->"66d1481e-c432-4594-8bb7-2e3842575b3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iccC0Fun", "=", 
   RowBox[{"Interpolation", "[", "iccC0Data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8355574845253906`*^9, 3.835557502928411*^9}, 
   3.8355614445558634`*^9},
 CellLabel->
  "In[581]:=",ExpressionUUID->"30851471-a3df-49f9-b672-45d5838b55ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iccb", " ", "=", 
   RowBox[{"iccbFun", "[", 
    RowBox[{"len", ",", "iccT"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"iccCo", " ", "=", 
   RowBox[{"iccC0Fun", "[", 
    RowBox[{"len", ",", "iccT"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[582]:=",ExpressionUUID->"548939e3-15c4-4439-af5f-1600a8b849b8"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.836073951491166*^9},ExpressionUUID->"eb904cc5-af2b-4f42-9cfb-\
674f4a371219"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcbData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "292.15`"}], "}"}], ",", 
       "0.512614060478198`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "298.15`"}], "}"}], ",", 
       "0.496112993774198`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "304.15`"}], "}"}], ",", "0.48000015056051`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "310.15`"}], "}"}], ",", 
       "0.463692421331974`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "316.15`"}], "}"}], ",", "0.4501546397312`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "321.15`"}], "}"}], ",", 
       "0.437868439666967`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "292.15`"}], "}"}], ",", 
       "0.494435455619035`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "298.15`"}], "}"}], ",", 
       "0.478715620920394`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "304.15`"}], "}"}], ",", 
       "0.463366352451184`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "310.15`"}], "}"}], ",", 
       "0.448765590516653`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "316.15`"}], "}"}], ",", 
       "0.435094020027823`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "321.15`"}], "}"}], ",", 
       "0.424474639331011`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "292.15`"}], "}"}], ",", 
       "0.46134133753743`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "298.15`"}], "}"}], ",", 
       "0.447140405028992`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "304.15`"}], "}"}], ",", 
       "0.433496973413469`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "310.15`"}], "}"}], ",", 
       "0.419682536505783`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "316.15`"}], "}"}], ",", 
       "0.407422047242412`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "321.15`"}], "}"}], ",", 
       "0.397640024419504`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "292.15`"}], "}"}], ",", 
       "0.458137872976017`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "298.15`"}], "}"}], ",", 
       "0.44404148623797`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "304.15`"}], "}"}], ",", 
       "0.430121203545348`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "310.15`"}], "}"}], ",", 
       "0.417244264903387`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "316.15`"}], "}"}], ",", 
       "0.405249964673119`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "321.15`"}], "}"}], ",", 
       "0.396003970604199`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "292.15`"}], "}"}], ",", "0.43517276337073`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "298.15`"}], "}"}], ",", "0.422176238691349`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "304.15`"}], "}"}], ",", "0.409750878530536`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "310.15`"}], "}"}], ",", "0.396849308385956`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "316.15`"}], "}"}], ",", "0.386163854376989`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "321.15`"}], "}"}], ",", "0.375805319467776`"}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8356425492827234`*^9, 3.835642564586216*^9}, 
   3.835642846960534*^9},
 CellLabel->
  "In[584]:=",ExpressionUUID->"827d6d41-a234-4020-b203-65c008b832d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcbFun", "=", 
   RowBox[{"Interpolation", "[", "ivcbData", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83564282153801*^9, 3.8356428554578695`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"618d1338-4840-4fe9-98e3-0fe6b50ed2b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcC0Data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "292.15`"}], "}"}], ",", 
       "6.640814017717993`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "298.15`"}], "}"}], ",", 
       "6.592408079870895`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "304.15`"}], "}"}], ",", 
       "6.545092119222432`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "310.15`"}], "}"}], ",", 
       "6.499114706310157`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "316.15`"}], "}"}], ",", 
       "6.453953770303901`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"23.83`", ",", "321.15`"}], "}"}], ",", 
       "6.416473404848236`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "292.15`"}], "}"}], ",", 
       "6.5218973200139`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "298.15`"}], "}"}], ",", 
       "6.469466109632775`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "304.15`"}], "}"}], ",", 
       "6.41866292351118`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "310.15`"}], "}"}], ",", 
       "6.368281522012187`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "316.15`"}], "}"}], ",", 
       "6.320730227865516`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"30.3725`", ",", "321.15`"}], "}"}], ",", 
       "6.281200101196005`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "292.15`"}], "}"}], ",", 
       "6.431594999916348`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "298.15`"}], "}"}], ",", 
       "6.376954132454964`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "304.15`"}], "}"}], ",", 
       "6.324016314164674`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "310.15`"}], "}"}], ",", 
       "6.272720435830382`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "316.15`"}], "}"}], ",", 
       "6.221883050573596`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"36.915`", ",", "321.15`"}], "}"}], ",", 
       "6.181037881131177`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "292.15`"}], "}"}], ",", 
       "6.35358079452262`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "298.15`"}], "}"}], ",", 
       "6.297925407326382`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "304.15`"}], "}"}], ",", 
       "6.243949482328686`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "310.15`"}], "}"}], ",", 
       "6.191417125698059`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "316.15`"}], "}"}], ",", 
       "6.140304933822448`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"43.4575`", ",", "321.15`"}], "}"}], ",", 
       "6.098763350537723`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "292.15`"}], "}"}], ",", 
       "6.297665667836784`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "298.15`"}], "}"}], ",", 
       "6.241175728471172`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "304.15`"}], "}"}], ",", 
       "6.186543060036394`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "310.15`"}], "}"}], ",", 
       "6.13325437639383`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "316.15`"}], "}"}], ",", 
       "6.081127300443368`*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "321.15`"}], "}"}], ",", 
       "6.039188360074647`*^-17"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8356427163996983`*^9, 3.835642727574809*^9}, 
   3.8356432282813487`*^9},
 CellLabel->
  "In[586]:=",ExpressionUUID->"d42bb073-e88d-4980-8c9c-32f78b5da3e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ivcC0Fun", "=", 
   RowBox[{"Interpolation", "[", "ivcC0Data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8356432338016963`*^9, 3.8356432582201667`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"c41abcb1-13fa-45f5-a3f3-cda4fa36df02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ivcb", "=", 
   RowBox[{"ivcbFun", "[", 
    RowBox[{"len", ",", "ivcT"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ivcCo", " ", "=", 
   RowBox[{"ivcC0Fun", "[", 
    RowBox[{"len", ",", "ivcT"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[588]:=",ExpressionUUID->"3f3f153b-cccd-4c52-8816-93f76316ec81"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.5 Impedance", "Subsection",
 CellChangeTimes->{{3.8360740389791093`*^9, 
  3.8360740436388693`*^9}},ExpressionUUID->"32109e9a-7425-4a88-a61b-\
1d5ca7307a31"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.8360740663161736`*^9},ExpressionUUID->"0041c5b6-3f8d-49c6-ba72-\
5c65236cc3b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "iccZe", "]"}], ";"}], 
  StyleBox[" ",
   FontColor->GrayLevel[0]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"iccZe", "[", 
     RowBox[{"pH_", ",", "V1_"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[":=",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["(",
     FontColor->GrayLevel[0]], 
    RowBox[{
     StyleBox[
      RowBox[{"iccZe", "[", 
       RowBox[{"pH", ",", "V1"}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox["=",
      FontColor->GrayLevel[0]], 
     StyleBox["\[IndentingNewLine]",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox["Sqrt",
       FontColor->GrayLevel[0]], 
      StyleBox["[",
       FontColor->GrayLevel[0]], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"32", "/", "225"}], ")"}],
         FontColor->GrayLevel[0]], 
        StyleBox["\[Times]",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox["(",
          FontColor->GrayLevel[0]], 
         RowBox[{
          RowBox[{
           StyleBox["25",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            SuperscriptBox["\[Pi]", "4"],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox[
            RowBox[{
             StyleBox["(",
              FontColor->GrayLevel[0]], 
             RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "2"]}], "+", 
          RowBox[{
           StyleBox["80",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], "iccb", 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox["\[Pi]", "4"], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"iccRl", "[", "pH", "]"}],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"iccRt", "[", "pH", "]"}],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"(", "V1", ")"}],
            FontColor->GrayLevel[0]]}], 
          StyleBox["+",
           FontColor->GrayLevel[0]], 
          RowBox[{
           StyleBox["64",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            SuperscriptBox["iccb", "2"],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            SuperscriptBox["\[Pi]", "4"],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox[
            RowBox[{
             StyleBox["(",
              FontColor->GrayLevel[0]], 
             RowBox[{"iccRt", "[", "pH", "]"}], ")"}], "2"], "\[Times]", 
           StyleBox[
            SuperscriptBox["V1", "2"],
            FontColor->GrayLevel[0]]}]}], 
         StyleBox[")",
          FontColor->GrayLevel[0]]}]}], 
       StyleBox["+",
        FontColor->GrayLevel[0]], 
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"8", "/", "225"}], ")"}],
         FontColor->GrayLevel[0]], 
        StyleBox["*",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox["\[Sqrt]",
          FontColor->GrayLevel[0]], 
         RowBox[{
          StyleBox["(",
           FontColor->GrayLevel[0]], 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"-", "5625"}],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["\[Pi]", "4"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "4"]}], "+", 
           RowBox[{
            StyleBox["10000",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "4"]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["11250",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"iccRt", "[", "pH", "]"}],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["5625",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "2"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"iccRt", "[", "pH", "]"}], ")"}], "2"]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["18000",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], "iccb", "\[Times]", 
            SuperscriptBox["\[Pi]", "4"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"iccRl", "[", "pH", "]"}], ")"}], "3"], "\[Times]", 
            RowBox[{"iccRt", "[", "pH", "]"}], "\[Times]", 
            RowBox[{"(", "V1", ")"}]}], "+", 
           RowBox[{"64000", " ", "iccb", " ", 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRl", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"iccRt", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"(", "V1", ")"}],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["36000",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox["iccb",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "2"], "\[Times]", 
            RowBox[{"(", "V1", ")"}]}], "-", 
           RowBox[{"18000", " ", "iccb", " ", 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"iccRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "3"], " ", "V1"}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["14400",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "2"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["153600",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "2"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["28800",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "2"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"iccRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["14400",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "2"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["163840",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "3"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"iccRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "3"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["65536",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["iccb", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"iccRt", "[", "pH", "]"}], "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "4"],
             FontColor->GrayLevel[0]]}]}], 
          StyleBox[")",
           FontColor->GrayLevel[0]]}]}]}]}], 
      StyleBox["]",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox[")",
     FontColor->GrayLevel[0]]}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]}], "Input",
 CellChangeTimes->{{3.753921326565681*^9, 3.753921353925139*^9}, {
   3.753922733385086*^9, 3.753922737802216*^9}, {3.7539227932289257`*^9, 
   3.753922797654591*^9}, {3.754142875517775*^9, 3.7541429307813053`*^9}, {
   3.755052133100996*^9, 3.7550521379762363`*^9}, 3.8002993425592937`*^9, {
   3.800300329573018*^9, 3.800300365326314*^9}, 3.8003012064579077`*^9, {
   3.826182955672332*^9, 3.8261829707590523`*^9}, 3.826918840774596*^9, 
   3.826918875120246*^9, {3.827530109269537*^9, 3.8275301620218873`*^9}, {
   3.8275303597766557`*^9, 3.827530363901202*^9}, {3.827530583501732*^9, 
   3.827530636746276*^9}, {3.827537180154642*^9, 3.827537182449381*^9}, {
   3.82753721644619*^9, 3.827537264831366*^9}, {3.8275373107856503`*^9, 
   3.82753748031573*^9}, {3.827537612912633*^9, 3.827537644367901*^9}, {
   3.8275403290746813`*^9, 3.827540344365288*^9}, {3.827540405910701*^9, 
   3.827540431159821*^9}, {3.8275404856214237`*^9, 3.827540684059561*^9}, {
   3.8275408168162947`*^9, 3.827540855559435*^9}, {3.82754089016188*^9, 
   3.82754097722611*^9}, {3.8275413164126377`*^9, 3.82754135540117*^9}, {
   3.827541386734013*^9, 3.8275414938472443`*^9}, {3.827541524651552*^9, 
   3.82754157357504*^9}, 3.827829881509232*^9, {3.827829927455307*^9, 
   3.827829948391157*^9}, {3.8339488396320515`*^9, 3.833948890913183*^9}, {
   3.833950222880274*^9, 3.833950230470723*^9}, {3.834185970051243*^9, 
   3.8341859748482103`*^9}, {3.8341862374733963`*^9, 3.834186294971034*^9}, {
   3.834186431905326*^9, 3.8341864335353003`*^9}, {3.834186468725393*^9, 
   3.8341864872754364`*^9}, {3.8341865773695774`*^9, 
   3.8341865838515363`*^9}, {3.834186633097967*^9, 3.8341866567250676`*^9}, 
   3.836074071537141*^9},
 CellLabel->
  "In[590]:=",ExpressionUUID->"986edc49-a121-4be0-8db4-7b3e986c789a"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.8360740896591663`*^9},ExpressionUUID->"3a4e1321-878c-4793-ad53-\
e10db80690aa"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "ivcZe", "]"}], ";"}], " "}],
  FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ivcZe", "[", 
     RowBox[{"pH_", ",", "V1_"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[":=",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["(",
     FontColor->GrayLevel[0]], 
    RowBox[{
     StyleBox[
      RowBox[{"ivcZe", "[", 
       RowBox[{"pH", ",", "V1"}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox["=",
      FontColor->GrayLevel[0]], 
     StyleBox["\[IndentingNewLine]",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox["Sqrt",
       FontColor->GrayLevel[0]], 
      StyleBox["[",
       FontColor->GrayLevel[0]], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"32", "/", "225"}], ")"}],
         FontColor->GrayLevel[0]], 
        StyleBox["\[Times]",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox["(",
          FontColor->GrayLevel[0]], 
         RowBox[{
          RowBox[{
           StyleBox["25",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            SuperscriptBox["\[Pi]", "4"],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox[
            RowBox[{
             StyleBox["(",
              FontColor->GrayLevel[0]], 
             RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "2"]}], "+", 
          RowBox[{
           StyleBox["80",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], "ivcb", 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox["\[Pi]", "4"], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"ivcRl", "[", "pH", "]"}],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"ivcRt", "[", "pH", "]"}],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            RowBox[{"(", "V1", ")"}],
            FontColor->GrayLevel[0]]}], 
          StyleBox["+",
           FontColor->GrayLevel[0]], 
          RowBox[{
           StyleBox["64",
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox["ivcb", "2"], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           StyleBox[
            SuperscriptBox["\[Pi]", "4"],
            FontColor->GrayLevel[0]], 
           StyleBox["\[Times]",
            FontColor->GrayLevel[0]], 
           SuperscriptBox[
            RowBox[{
             StyleBox["(",
              FontColor->GrayLevel[0]], 
             RowBox[{"ivcRt", "[", "pH", "]"}], ")"}], "2"], "\[Times]", 
           StyleBox[
            SuperscriptBox["V1", "2"],
            FontColor->GrayLevel[0]]}]}], 
         StyleBox[")",
          FontColor->GrayLevel[0]]}]}], 
       StyleBox["+",
        FontColor->GrayLevel[0]], 
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"8", "/", "225"}], ")"}],
         FontColor->GrayLevel[0]], 
        StyleBox[" ",
         FontColor->GrayLevel[0]], 
        RowBox[{
         StyleBox["\[Sqrt]",
          FontColor->GrayLevel[0]], 
         RowBox[{
          StyleBox["(",
           FontColor->GrayLevel[0]], 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"-", "5625"}],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["\[Pi]", "4"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "4"]}], "+", 
           RowBox[{
            StyleBox["10000",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "4"]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["11250",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"ivcRt", "[", "pH", "]"}],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["5625",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{
              StyleBox["(",
               FontColor->GrayLevel[0]], 
              RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "2"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"ivcRt", "[", "pH", "]"}], ")"}], "2"]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["18000",
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], "ivcb", "\[Times]", 
            SuperscriptBox["\[Pi]", "4"], "\[Times]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"ivcRl", "[", "pH", "]"}], ")"}], "3"], "\[Times]", 
            RowBox[{"ivcRt", "[", "pH", "]"}], "\[Times]", 
            RowBox[{"(", "V1", ")"}]}], "+", 
           RowBox[{"64000", " ", "ivcb", " ", 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRl", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"ivcRt", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox["\[Times]",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"(", "V1", ")"}],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["36000",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], "ivcb", " ", 
            SuperscriptBox["\[Pi]", "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "2"], "\[Times]", 
            RowBox[{"(", "V1", ")"}]}], "-", 
           RowBox[{"18000", " ", "ivcb", " ", 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"ivcRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "3"], " ", "V1"}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["14400",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["153600",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRl", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["28800",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"ivcRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["-",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["14400",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "2"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "4"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "2"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["163840",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             RowBox[{"ivcRl", "[", "pH", "]"}],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "3"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "3"],
             FontColor->GrayLevel[0]]}], 
           StyleBox["+",
            FontColor->GrayLevel[0]], 
           RowBox[{
            StyleBox["65536",
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox["ivcb", "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["\[Pi]", "8"],
             FontColor->GrayLevel[0]], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            SuperscriptBox[
             RowBox[{"ivcRt", "[", "pH", "]"}], "4"], 
            StyleBox[" ",
             FontColor->GrayLevel[0]], 
            StyleBox[
             SuperscriptBox["V1", "4"],
             FontColor->GrayLevel[0]]}]}], 
          StyleBox[")",
           FontColor->GrayLevel[0]]}]}]}]}], 
      StyleBox["]",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox[")",
     FontColor->GrayLevel[0]]}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]}], "Input",
 CellChangeTimes->{{3.83394891183504*^9, 3.83394895808524*^9}, {
   3.833950216543156*^9, 3.8339502340479174`*^9}, {3.834186671681985*^9, 
   3.8341866742422247`*^9}, {3.8341867468825564`*^9, 3.834186796470503*^9}, 
   3.8360740932663493`*^9},
 CellLabel->
  "In[592]:=",ExpressionUUID->"caf319a6-8c5d-4f20-9496-1390dcb6cf30"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. theory", "Chapter",
 CellChangeTimes->{
  3.749565681085022*^9, 3.826933873832099*^9, {3.8278299673648367`*^9, 
   3.827829972132201*^9}, {3.8278303600107727`*^9, 3.8278303602620964`*^9}, {
   3.833127903606235*^9, 3.833127916630416*^9}},
 FontWeight->"Bold",ExpressionUUID->"963a5af9-850b-421b-b699-cd2e81349045"],

Cell[TextData[StyleBox["Formulas",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.8360741840779448`*^9},ExpressionUUID->"5210adaa-4a5c-499b-9bb2-\
7ab597c82414"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{"\[Gamma]", "\[LongEqual]", 
        FractionBox[
         RowBox[{"3", 
           SubscriptBox[
            StyleBox["C", "TI"], "0"], 
           StyleBox["Z", "TI"]}], 
         RowBox[{
           StyleBox["b", "TI"], 
           SuperscriptBox[
            StyleBox["Z", "TI"], 
            RowBox[{"3", "/", "2"}]], 
           SubscriptBox[
            StyleBox["C", "TI"], "0"]}]]}], TraditionalForm], "errors" -> {}, 
    "input" -> "\\gamma = \\frac{3C_ 0Z}{bZ^{3/2}C_ 0}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"1fdc7341-554b-415e-83e5-c2dfca8f1940"]], \
"Text",
 CellChangeTimes->{{3.834968941011359*^9, 
  3.834968947676358*^9}},ExpressionUUID->"8bc3b89f-ae54-45a4-b7c8-\
d6d374bcca24"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{
        SubscriptBox["\[Mu]", "2"], "\[LongEqual]", 
        FractionBox[
         RowBox[{"6", 
           SubscriptBox[
            StyleBox["R", "TI"], 
            StyleBox["t", "TI"]]}], 
         StyleBox["Z", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
    "\\mu_2=\\frac{6R_t}{Z}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"3f454979-cbd0-4551-be3b-adda65bcf42b"]], \
"Text",
 CellChangeTimes->{
  3.8349689693897057`*^9},ExpressionUUID->"ecf4b542-9280-43d3-aab2-\
9f7be121959a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{
        SubscriptBox["\[Mu]", "3"], "\[LongEqual]", 
        FractionBox[
         RowBox[{"24", 
           SubscriptBox[
            StyleBox["R", "TI"], 
            StyleBox["l", "TI"]]}], 
         StyleBox["Z", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
    "\\mu_3=\\frac{24R_l}{Z}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"0c5e6e18-9170-430b-a794-ab47ae881750"]], \
"Text",
 CellChangeTimes->{
  3.834968990673016*^9},ExpressionUUID->"309ece2e-754c-456c-9ad9-\
a2cbd6dfc6e1"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[CapitalOmega]", "0"], "\[LongEqual]", 
         SqrtBox[
          FractionBox[
           RowBox[{"12", 
             SubscriptBox[
              StyleBox["V", "TI"], "inp"]}], 
           RowBox[{"|", "\[Gamma]", "|", 
             SuperscriptBox[
              StyleBox["Z", "TI"], 
              RowBox[{"1", "/", "2"}]]}]]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\Omega_0=\\sqrt{\\frac{12 V_{\\text{inp}}}{\\lvert \\gamma \\rvert \
Z^{1/2}}}", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c9c25af2-2fe1-4774-a70c-ccaa0c2ce7f5"],
 " there is  a discrepancy with the article"
}], "Text",
 CellChangeTimes->{{3.8349690100794735`*^9, 
  3.834969055090456*^9}},ExpressionUUID->"620814fe-86fd-4dfe-af01-\
6c5d34a962d9"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{"\[Alpha]", "\[LongEqual]", 
        SubscriptBox[
         StyleBox["C", "TI"], "0"], 
        StyleBox["Z", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
    "\\alpha = C_0 Z", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"0e108d36-f085-4d13-864a-311835c4224e"]], \
"Text",
 CellChangeTimes->{
  3.8349690695048323`*^9},ExpressionUUID->"58419dee-b9a6-4b17-a73f-\
2ff2b3557848"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{"\[Beta]", "\[LongEqual]", "2", 
        StyleBox["l", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
    "\\beta = 2 l", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"34b3398c-c0fb-4ad3-a89f-b8d1466386cc"]], \
"Text",
 CellChangeTimes->{
  3.8349690904120035`*^9},ExpressionUUID->"4540114e-d190-4718-bc86-\
ce92682a2b92"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{"\[CapitalOmega]", 
        RowBox[{"(", "\[Tau]", ")"}], "\[LongEqual]", 
        SqrtBox[
         FractionBox[
          RowBox[{
            SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
            SuperscriptBox[
             StyleBox["e", "TI"], 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"4", 
                  SubscriptBox["\[Tau]\[Mu]", "3"]}], "3"]}]]}], 
          RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", 
               SubscriptBox["\[Mu]", "2"], 
               SubsuperscriptBox["\[CapitalOmega]", "0", "2"]}], 
             RowBox[{"5", 
               SubscriptBox["\[Mu]", "3"]}]], 
            RowBox[{"(", 
              RowBox[{"1", "-", 
                SuperscriptBox[
                 StyleBox["e", "TI"], 
                 FractionBox[
                  RowBox[{"-4", 
                    SubscriptBox["\[Tau]\[Mu]", "3"]}], "3"]]}], ")"}]}]]]}], 
      TraditionalForm], "errors" -> {}, "input" -> 
    "\\Omega (\\tau)=\\sqrt{\\frac{\\Omega_0^2 e^{-\\frac{4\\tau \
\\mu_3}{3}}}{1+\\frac{4\\mu_2 \\Omega_0^2}{5 \\mu_3}(1-e^{\\frac{-4\\tau \
\\mu_3}{3}})}}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"50c8de0e-f8d5-4127-97f8-663a478e0a57"]], \
"Text",
 CellChangeTimes->{
  3.83496910906584*^9},ExpressionUUID->"88114cac-7209-4ae8-b535-1dace8d772a6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{"\[Eta]", 
        RowBox[{"(", "\[Tau]", ")"}], "\[LongEqual]", 
        FractionBox[
         RowBox[{"-5", 
           RowBox[{"[", 
             RowBox[{"4", 
               SubscriptBox["\[Mu]", "3"], "\[Tau]", "+", "3", "ln", 
               RowBox[{"(", 
                 RowBox[{"5", 
                   SubscriptBox["\[Mu]", "3"]}], ")"}], "-", "3", "ln", 
               RowBox[{"(", 
                 RowBox[{"-4", 
                   SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
                   SubscriptBox["\[Mu]", "2"], "+", 
                   SuperscriptBox[
                    StyleBox["e", "TI"], 
                    FractionBox[
                    RowBox[{"4", 
                    SubscriptBox["\[Tau]\[Mu]", "3"]}], "3"]], 
                   RowBox[{"(", 
                    RowBox[{"4", 
                    SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
                    SubscriptBox["\[Mu]", "2"], "+", "5", 
                    SubscriptBox["\[Mu]", "3"]}], ")"}]}], ")"}]}], "]"}]}], 
         RowBox[{"4", 
           SubscriptBox["\[Mu]", "2"]}]]}], TraditionalForm], "errors" -> {}, 
    "input" -> 
    "\\eta (\\tau)=\\frac{-5[4\\mu_3 \\tau+3 \
\\ln{(5\\mu_3)}-3\\ln{(-4\\Omega_0^2 \\mu_2 + e^{\\frac{4\\tau \
\\mu_3}{3}}(4\\Omega_0^2 \\mu_2+5\\mu_3))}]}{4\\mu_2}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"57fcb7f5-0f99-469c-a2c2-6656e7547b62"]], \
"Text",
 CellChangeTimes->{
  3.8349691295898876`*^9},ExpressionUUID->"4f3820de-77ea-4d8d-9513-\
ece87a55d9b9"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{
        StyleBox["v", "TI"], 
        RowBox[{"(", 
          StyleBox["t", "TI"], ")"}], "\[LongEqual]", "-", 
        FractionBox[
         RowBox[{"5", "\[Cross]", 
           RowBox[{"[", 
             RowBox[{"4", 
               SubscriptBox["\[Mu]", "3"], "-", 
               FractionBox[
                RowBox[{"4", 
                  SuperscriptBox[
                   StyleBox["e", "TI"], 
                   FractionBox[
                    RowBox[{"4", 
                    SubscriptBox["\[Mu]", "3"], 
                    StyleBox["t", "TI"]}], "3"]], 
                  SubscriptBox["\[Mu]", "3"], 
                  RowBox[{"(", 
                    RowBox[{"4", 
                    SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
                    SubscriptBox["\[Mu]", "2"], "+", "5", 
                    SubscriptBox["\[Mu]", "3"]}], ")"}]}], 
                RowBox[{"-4", 
                  SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
                  SubscriptBox["\[Mu]", "2"], "+", 
                  SuperscriptBox[
                   StyleBox["e", "TI"], 
                   FractionBox[
                    RowBox[{"4", 
                    SubscriptBox["\[Mu]", "3"], 
                    StyleBox["t", "TI"]}], "3"]], 
                  RowBox[{"(", 
                    RowBox[{"4", 
                    SubsuperscriptBox["\[CapitalOmega]", "0", "2"], 
                    SubscriptBox["\[Mu]", "2"], "+", "5", 
                    SubscriptBox["\[Mu]", "3"]}], ")"}]}]]}], "]"}]}], 
         RowBox[{"4", 
           SubscriptBox["\[Mu]", "2"]}]]}], TraditionalForm], "errors" -> {}, 
    "input" -> 
    "v(t)=-\\frac{5\\times [4\\mu_3-\\frac{4e^{\\frac{4\\mu_3 \
t}{3}}\\mu_3(4\\Omega_0^2 \
\\mu_2+5\\mu_3)}{-4\\Omega_0^2\\mu_2+e^{\\frac{4\\mu_3 t}{3}}(4\\Omega_0^2 \
\\mu_2+5\\mu_3)}]}{4\\mu_2}", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"6e300721-f2e3-4219-825d-9efed4399788"]], \
"Text",
 CellChangeTimes->{
  3.8349691482773533`*^9},ExpressionUUID->"b6b47ee4-ade7-413f-bed7-\
b842b2fbadf7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["t", "TI"], 
          StyleBox["d", "TI"]], "\[Congruent]", 
         FractionBox[
          SubscriptBox[
           StyleBox["t", "TI"], "max"], 
          RowBox[{"24", "\[Alpha]"}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "t_d\\equiv \\frac{t_{\\text{max}}}{24\\alpha}", "state" -> 
     "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e00722d0-d3d4-48b0-9f6b-9fd5b88e448f"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[Association["boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{"\[CapitalOmega]", "(", 
            SubscriptBox[
             StyleBox["t", "TI"], 
             StyleBox["d", "TI"]], ")"}], 
          RowBox[{"\[CapitalOmega]", "(", "0", ")"}]], "\[LongEqual]", 
         "0.1"}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\frac{\\Omega(t_d)}{\\Omega(0)}=0.1", "state" -> "Boxes"],
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "375a63f7-9d71-4765-b234-f8cb7de31204"]
}], "Text",
 CellChangeTimes->{{3.83496916771052*^9, 
  3.834969186688737*^9}},ExpressionUUID->"e5b54813-d93c-474d-aa75-\
c92c09fd7785"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{
        SubscriptBox[
         StyleBox["v", "TI"], "av"], "\[LongEqual]", 
        FractionBox["1", 
         RowBox[{"24", 
           SubscriptBox[
            StyleBox["t", "TI"], 
            StyleBox["d", "TI"]], "\[Alpha]"}]], 
        SubsuperscriptBox["\[Integral]", "0", 
         RowBox[{
           SubscriptBox[
            StyleBox["t", "TI"], "max"], "\[LongEqual]", "24", 
           SubscriptBox[
            StyleBox["t", "TI"], 
            StyleBox["d", "TI"]], "\[Alpha]"}]], 
        FractionBox["\[Beta]", "\[Alpha]"], 
        RowBox[{"[", 
          RowBox[{"1", "+", 
            StyleBox["v", "TI"], 
            RowBox[{"(", 
              FractionBox[
               StyleBox["t", "TI"], 
               RowBox[{"24", "\[Alpha]"}]], ")"}]}], "]"}], 
        StyleBox["d", "TI"], 
        StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
    "v_{\\text{av}}=\\frac{1}{24t_d \\alpha}\\int_0^{t_{\\text{max}}=24t_d \
\\alpha} \\frac{\\beta}{\\alpha}[1+v(\\frac{t}{24\\alpha})]dt", "state" -> 
    "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"c4e78d3e-8573-4363-bac7-cb64fb39f6b0"]], \
"Text",
 CellChangeTimes->{
  3.8349692131634617`*^9},ExpressionUUID->"6c7dbe89-d985-4918-800a-\
66d1721ae22e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[Association["boxes" -> FormBox[
      RowBox[{
        StyleBox["W", "TI"], 
        RowBox[{"(", 
          RowBox[{
            StyleBox["x", "TI"], ",", 
            StyleBox["t", "TI"]}], ")"}], "\[LongEqual]", "-2", 
        "\[CapitalOmega]", 
        SuperscriptBox[
         RowBox[{"(", 
           FractionBox[
            StyleBox["t", "TI"], 
            RowBox[{"24", "\[Alpha]"}]], ")"}], "2"], 
        SuperscriptBox["sech", "2"], 
        RowBox[{"(", 
          RowBox[{"\[CapitalOmega]", 
            RowBox[{"(", 
              FractionBox[
               StyleBox["t", "TI"], 
               RowBox[{"24", "\[Alpha]"}]], ")"}], 
            RowBox[{"[", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    FractionBox[
                    StyleBox["x", "TI"], "\[Beta]"], "-", 
                    FractionBox[
                    StyleBox["t", "TI"], "\[Alpha]"]}], ")"}], "-", "\[Eta]", 
                RowBox[{"(", 
                  FractionBox[
                   StyleBox["t", "TI"], 
                   RowBox[{"24", "\[Alpha]"}]], ")"}]}], "]"}]}], ")"}]}], 
      TraditionalForm], "errors" -> {}, "input" -> 
    "W(x,t)=-2\\Omega(\\frac{t}{24\\alpha})^2\\text{sech}^2(\\Omega(\\frac{t}{\
24\\alpha})[(\\frac{x}{\\beta}-\\frac{t}{\\alpha})-\\eta(\\frac{t}{24\\alpha})\
])", "state" -> "Boxes"],
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"58ffb37c-0709-4cfe-ae98-8ba4224eb005"]], \
"Text",
 CellChangeTimes->{
  3.8350290773055954`*^9},ExpressionUUID->"8577f67a-ab91-4ba8-bf40-\
4512c18c069a"],

Cell[TextData[StyleBox["Intracellular",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.8360738570986013`*^9},ExpressionUUID->"ff3aa4e6-5584-40f2-93b9-\
5c3961985e16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "cgamma", ",", "c\[Mu]2", ",", "c\[Mu]3", ",", "cwo", ",", "calfa", ",", 
    "c\[CapitalOmega]", ",", "c\[Eta]", ",", "cvelocityprop", ",", 
    "cdecaytime", ",", "cvavg", ",", "cWx"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cgamma", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cgamma", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{"3", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"iccCo", "*", 
         RowBox[{"iccZe", "[", 
          RowBox[{"pH", ",", "V1"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"iccb", "*", 
         RowBox[{
          RowBox[{"iccZe", "[", 
           RowBox[{"pH", ",", "V1"}], "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}]}], "*", "iccCo"}], ")"}]}]}]}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c\[Mu]2", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c\[Mu]2", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"iccRt", "[", "pH", "]"}], "*", 
      RowBox[{"6", "/", 
       RowBox[{"iccZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c\[Mu]3", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c\[Mu]3", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"iccRl", "[", "pH", "]"}], "*", 
      RowBox[{"24", "/", 
       RowBox[{"iccZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cwo", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cwo", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V0", "*", 
        RowBox[{"12", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"cgamma", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"iccZe", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calfa", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"calfa", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{"(", 
      RowBox[{"iccCo", "*", 
       RowBox[{"iccZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}], ")"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cbeta", "=", 
   RowBox[{"2", "*", "uLm"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"c\[CapitalOmega]", "[", 
      RowBox[{"\[Tau]_", ",", "pH_", ",", "V0_"}], "]"}],
     FontSize->14], 
    StyleBox[":=",
     FontSize->14], 
    RowBox[{
     StyleBox["(",
      FontSize->14], 
     RowBox[{
      RowBox[{"c\[CapitalOmega]", "[", 
       RowBox[{"\[Tau]", ",", "pH", ",", "V0"}], "]"}], "=", 
      "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"cwo", "[", 
              RowBox[{"pH", ",", "V0"}], "]"}], "2"], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"4", " ", "\[Tau]", " ", 
                RowBox[{"c\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]}]]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 RowBox[{"c\[Mu]2", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"cwo", "[", 
                   RowBox[{"pH", ",", "V0"}], "]"}], "2"]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"5", 
                 RowBox[{"c\[Mu]3", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"4", " ", "\[Tau]", " ", 
                   RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]}]]}], ")"}]}]}], 
           ")"}]}], ")"}]}],
       FontSize->14]}], 
     StyleBox[")",
      FontSize->14]}]}], 
   StyleBox[";",
    FontSize->14]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c\[Eta]", "[", 
     RowBox[{"\[Tau]_", ",", "pH_", ",", "V0_"}], "]"}], " ", ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c\[Eta]", "[", 
       RowBox[{"\[Tau]", ",", "pH", ",", "V0"}], "]"}], " ", "=", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"c\[Mu]3", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}], " ", "\[Tau]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"5", " ", 
                RowBox[{"c\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], "]"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox[
                  RowBox[{"cwo", "[", 
                   RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                 RowBox[{"c\[Mu]2", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"4", " ", 
                    RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], " ", "\[Tau]"}], "3"]], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"cwo", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                    RowBox[{"c\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                   RowBox[{"5", " ", 
                    RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}]}]}], 
               "]"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           RowBox[{"c\[Mu]2", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}], ")"}]}]}], ")"}]}], 
   ";"}], "\[IndentingNewLine]", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"cvelocityprop", "[", 
     RowBox[{"t_", ",", "pH_", ",", "V0_"}], "]"}],
    FontSize->14], 
   StyleBox[":=",
    FontSize->14], 
   RowBox[{
    StyleBox["(",
     FontSize->14], 
    RowBox[{
     RowBox[{"cvelocityprop", "[", 
      RowBox[{"t", ",", "pH", ",", "V0"}], "]"}], "=", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"c\[Mu]3", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"4", " ", "t", " ", 
                   RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]], " ", 
                RowBox[{"c\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"cwo", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                   RowBox[{"c\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                  RowBox[{"5", " ", 
                   RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox[
                  RowBox[{"cwo", "[", 
                   RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                 RowBox[{"c\[Mu]2", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"4", " ", "t", " ", 
                    RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"cwo", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                    RowBox[{"c\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                   RowBox[{"5", " ", 
                    RowBox[{"c\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           RowBox[{"c\[Mu]2", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}], ")"}]}],
      FontSize->14]}], 
    StyleBox[")",
     FontSize->14]}]}], 
  StyleBox[";",
   FontSize->14]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cdecaytime", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cdecaytime", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"w", "/.", " ", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c\[CapitalOmega]", "[", 
            RowBox[{"w", ",", "pH", ",", "V0"}], "]"}], "\[Equal]", 
           RowBox[{"0.1", "*", 
            RowBox[{"c\[CapitalOmega]", "[", 
             RowBox[{"0", ",", "pH", ",", "V0"}], "]"}]}]}], ",", "w"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cvavg", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cvavg", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "=", " ", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"cvelocityprop", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"t", "/", 
                 RowBox[{"calfa", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
               ",", "V0"}], "]"}], "/", "24"}], "+", "1"}], ")"}], "/", 
          RowBox[{"calfa", "[", 
           RowBox[{"pH", ",", "V0"}], "]"}]}], "*", "cbeta"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"24", "*", 
           RowBox[{"cdecaytime", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}], "*", 
           RowBox[{"calfa", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}]}], "}"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"24", "*", 
        RowBox[{"cdecaytime", "[", 
         RowBox[{"pH", ",", "V0"}], "]"}], "*", 
        RowBox[{"calfa", "[", 
         RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cWx", "[", 
    RowBox[{"x_", ",", "t_", ",", "pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cWx", "[", 
      RowBox[{"x", ",", "t", ",", "pH", ",", "V0"}], "]"}], "=", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c\[CapitalOmega]", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "/", 
            RowBox[{"calfa", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", ",", 
          "V0"}], "]"}], ")"}], "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sech", "[", 
         RowBox[{
          RowBox[{"c\[CapitalOmega]", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"t", "/", 
              RowBox[{"calfa", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
            ",", "V0"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "/", "cbeta"}], "-", 
              RowBox[{"t", "/", 
               RowBox[{"calfa", "[", 
                RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}], "-", 
            RowBox[{"c\[Eta]", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "/", 
                RowBox[{"calfa", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
              ",", "V0"}], "]"}]}], ")"}]}], "]"}], ")"}], "^", "2"}]}]}], 
    ")"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.749855178495295*^9, 3.749855195013369*^9}, {
   3.750692005076985*^9, 3.750692232795004*^9}, {3.750701223822612*^9, 
   3.750701239316421*^9}, {3.7507042244252872`*^9, 3.750704239240206*^9}, {
   3.7550519687070913`*^9, 3.7550519687715693`*^9}, {3.755142926545418*^9, 
   3.75514292764802*^9}, {3.7551429785754147`*^9, 3.755142996180735*^9}, {
   3.755146300437273*^9, 3.7551463051395807`*^9}, {3.755146368241624*^9, 
   3.755146371526627*^9}, {3.755146436834117*^9, 3.755146460436777*^9}, {
   3.755146520299992*^9, 3.755146542945722*^9}, 3.755146617333877*^9, 
   3.8261837751517963`*^9, {3.82693289558211*^9, 3.826932914571495*^9}, {
   3.827530166573682*^9, 3.827530206186534*^9}, {3.827530453665845*^9, 
   3.8275305476583276`*^9}, {3.827530640812402*^9, 3.8275306806491895`*^9}, {
   3.8275307527639008`*^9, 3.827530764370138*^9}, {3.827531327285125*^9, 
   3.8275313323371053`*^9}, {3.8275313696143084`*^9, 3.827531376319738*^9}, {
   3.827531661041363*^9, 3.827531661465228*^9}, {3.8275332783754888`*^9, 
   3.8275332792554593`*^9}, 3.8275350906828985`*^9, {3.827535280391942*^9, 
   3.8275352898157434`*^9}, {3.8275353396978846`*^9, 
   3.8275353649595714`*^9}, {3.8278297214361334`*^9, 3.8278297400197268`*^9}, 
   3.831517166718345*^9, {3.8339490180159826`*^9, 3.833949159799494*^9}, {
   3.833949197928397*^9, 3.833949431291498*^9}, {3.833949641168023*^9, 
   3.8339497477117634`*^9}, {3.8341872208045845`*^9, 3.8341873293617864`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"7bc09ddb-f90c-4de9-8eb0-ddbf532f8b39"],

Cell[TextData[StyleBox["In-vitro",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{
  3.836074256410947*^9},ExpressionUUID->"e0a76863-c908-41a4-affb-\
d5e54813ba49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "vgamma", ",", "v\[Mu]2", ",", "v\[Mu]3", ",", "vwo", ",", "valfa", ",", 
    "v\[CapitalOmega]", ",", "v\[Eta]", ",", "vvelocityprop", ",", 
    "vdecaytime", ",", "vvavg", ",", "vWx"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vgamma", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"vgamma", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{"3", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ivcCo", "*", 
         RowBox[{"ivcZe", "[", 
          RowBox[{"pH", ",", "V1"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"ivcb", "*", 
         RowBox[{
          RowBox[{"ivcZe", "[", 
           RowBox[{"pH", ",", "V1"}], "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}]}], "*", "ivcCo"}], ")"}]}]}]}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v\[Mu]2", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"v\[Mu]2", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"ivcRt", "[", "pH", "]"}], "*", 
      RowBox[{"6", "/", 
       RowBox[{"ivcZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v\[Mu]3", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"v\[Mu]3", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"ivcRl", "[", "pH", "]"}], "*", 
      RowBox[{"24", "/", 
       RowBox[{"ivcZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vwo", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"vwo", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V0", "*", 
        RowBox[{"12", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"vgamma", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"ivcZe", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"valfa", "[", 
    RowBox[{"pH_", ",", "V1_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"valfa", "[", 
      RowBox[{"pH", ",", "V1"}], "]"}], "=", 
     RowBox[{"(", 
      RowBox[{"ivcCo", "*", 
       RowBox[{"ivcZe", "[", 
        RowBox[{"pH", ",", "V1"}], "]"}]}], ")"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vbeta", "=", 
   RowBox[{"2", "*", "uLm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v\[CapitalOmega]", "[", 
    RowBox[{"\[Tau]_", ",", "pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"v\[CapitalOmega]", "[", 
      RowBox[{"\[Tau]", ",", "pH", ",", "V0"}], "]"}], "=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"vwo", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}], "2"], 
          StyleBox[
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"4", " ", "\[Tau]", " ", 
               RowBox[{"v\[Mu]3", "[", 
                RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]}]],
           FontSize->14]}], 
         StyleBox[")",
          FontSize->14]}], 
        StyleBox["/",
         FontSize->14], 
        RowBox[{
         StyleBox["(",
          FontSize->14], 
         RowBox[{
          StyleBox["1",
           FontSize->14], 
          StyleBox["+",
           FontSize->14], 
          RowBox[{
           RowBox[{
            StyleBox["(",
             FontSize->14], 
            RowBox[{
             RowBox[{
              StyleBox["(",
               FontSize->14], 
              RowBox[{
               StyleBox["4",
                FontSize->14], 
               StyleBox[" ",
                FontSize->14], 
               StyleBox[
                RowBox[{"v\[Mu]2", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}],
                FontSize->14], 
               StyleBox[" ",
                FontSize->14], 
               SuperscriptBox[
                RowBox[{"vwo", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}], "2"]}], 
              StyleBox[")",
               FontSize->14]}], 
             StyleBox["/",
              FontSize->14], 
             StyleBox[
              RowBox[{"(", 
               RowBox[{"5", 
                RowBox[{"v\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}],
              FontSize->14]}], 
            StyleBox[")",
             FontSize->14]}], 
           StyleBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"4", " ", "\[Tau]", " ", 
                  RowBox[{"v\[Mu]3", "[", 
                   RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]}]]}], ")"}],
            FontSize->14]}]}], 
         StyleBox[")",
          FontSize->14]}]}], 
       StyleBox[")",
        FontSize->14]}]}]}], 
    StyleBox[")",
     FontSize->14]}]}], 
  StyleBox[";",
   FontSize->14]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"v\[Eta]", "[", 
     RowBox[{"\[Tau]_", ",", "pH_", ",", "V0_"}], "]"}], " ", ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"v\[Eta]", "[", 
       RowBox[{"\[Tau]", ",", "pH", ",", "V0"}], "]"}], "=", 
      RowBox[{"-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"v\[Mu]3", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}], " ", "\[Tau]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"5", " ", 
                RowBox[{"v\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], "]"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox[
                  RowBox[{"vwo", "[", 
                   RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                 RowBox[{"v\[Mu]2", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"4", " ", 
                    RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], " ", "\[Tau]"}], "3"]], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"vwo", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], " ", 
                    RowBox[{"v\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "+", 
                   RowBox[{"5", " ", 
                    RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}]}]}], 
               "]"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           RowBox[{"v\[Mu]2", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}], ")"}]}]}], ")"}]}], 
   ";"}], " ", "\[IndentingNewLine]", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vvelocityprop", 
    StyleBox["[",
     FontSize->14], 
    StyleBox[
     RowBox[{"t_", ",", "pH_", ",", "V0_"}],
     FontSize->14], 
    StyleBox["]",
     FontSize->14]}], 
   StyleBox[":=",
    FontSize->14], 
   RowBox[{
    StyleBox["(",
     FontSize->14], 
    RowBox[{
     RowBox[{"vvelocityprop", 
      StyleBox["[",
       FontSize->14], 
      StyleBox[
       RowBox[{"t", ",", "pH", ",", "V0"}],
       FontSize->14], 
      StyleBox["]",
       FontSize->14]}], 
     StyleBox["=",
      FontSize->14], 
     RowBox[{
      StyleBox["-",
       FontSize->14], 
      RowBox[{
       StyleBox["(",
        FontSize->14], 
       RowBox[{
        RowBox[{
         StyleBox["(",
          FontSize->14], 
         RowBox[{
          StyleBox["5",
           FontSize->14], 
          StyleBox[" ",
           FontSize->14], 
          RowBox[{
           StyleBox["(",
            FontSize->14], 
           RowBox[{
            StyleBox[
             RowBox[{"4", " ", 
              RowBox[{"v\[Mu]3", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}]}],
             FontSize->14], 
            StyleBox["-",
             FontSize->14], 
            RowBox[{
             RowBox[{
              StyleBox["(",
               FontSize->14], 
              RowBox[{
               StyleBox["4",
                FontSize->14], 
               StyleBox[" ",
                FontSize->14], 
               StyleBox[
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"4", " ", "t", " ", 
                   RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]],
                FontSize->14], 
               StyleBox[" ",
                FontSize->14], 
               StyleBox[
                RowBox[{"v\[Mu]3", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}],
                FontSize->14], 
               StyleBox[" ",
                FontSize->14], 
               RowBox[{
                StyleBox["(",
                 FontSize->14], 
                RowBox[{
                 RowBox[{
                  StyleBox["4",
                   FontSize->14], 
                  StyleBox[" ",
                   FontSize->14], 
                  SuperscriptBox[
                   RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["v",
                    FontSize->14], "wo"}]], "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], 
                  StyleBox[" ",
                   FontSize->14], 
                  StyleBox[
                   RowBox[{"v\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}],
                   FontSize->14]}], 
                 StyleBox["+",
                  FontSize->14], 
                 StyleBox[
                  RowBox[{"5", " ", 
                   RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}],
                  FontSize->14]}], 
                StyleBox[")",
                 FontSize->14]}]}], 
              StyleBox[")",
               FontSize->14]}], 
             StyleBox["/",
              FontSize->14], 
             RowBox[{
              StyleBox["(",
               FontSize->14], 
              RowBox[{
               RowBox[{
                StyleBox[
                 RowBox[{"-", "4"}],
                 FontSize->14], 
                StyleBox[" ",
                 FontSize->14], 
                SuperscriptBox[
                 RowBox[{
                  StyleBox[
                   RowBox[{
                    StyleBox["v",
                    FontSize->14], "wo"}]], "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}], "2"], 
                StyleBox[" ",
                 FontSize->14], 
                StyleBox[
                 RowBox[{"v\[Mu]2", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}],
                 FontSize->14]}], 
               StyleBox["+",
                FontSize->14], 
               RowBox[{
                StyleBox[
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"4", " ", "t", " ", 
                    RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}], "3"]],
                 FontSize->14], 
                StyleBox[" ",
                 FontSize->14], 
                RowBox[{
                 StyleBox["(",
                  FontSize->14], 
                 RowBox[{
                  RowBox[{
                   StyleBox["4",
                    FontSize->14], 
                   StyleBox[" ",
                    FontSize->14], 
                   SuperscriptBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["v",
                    FontSize->14], "wo"}]], "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}], "2"], 
                   StyleBox[" ",
                    FontSize->14], 
                   StyleBox[
                    RowBox[{"v\[Mu]2", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}],
                    FontSize->14]}], 
                  StyleBox["+",
                   FontSize->14], 
                  StyleBox[
                   RowBox[{"5", " ", 
                    RowBox[{"v\[Mu]3", "[", 
                    RowBox[{"pH", ",", "V0"}], "]"}]}],
                   FontSize->14]}], 
                 StyleBox[")",
                  FontSize->14]}]}]}], 
              StyleBox[")",
               FontSize->14]}]}]}], 
           StyleBox[")",
            FontSize->14]}]}], 
         StyleBox[")",
          FontSize->14]}], 
        StyleBox["/",
         FontSize->14], 
        StyleBox[
         RowBox[{"(", 
          RowBox[{"4", " ", 
           RowBox[{"v\[Mu]2", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}],
         FontSize->14]}], 
       StyleBox[")",
        FontSize->14]}]}]}], 
    StyleBox[")",
     FontSize->14]}]}], 
  StyleBox[";",
   FontSize->14]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vdecaytime", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"vdecaytime", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"w", "/.", " ", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v\[CapitalOmega]", "[", 
            RowBox[{"w", ",", "pH", ",", "V0"}], "]"}], "\[Equal]", 
           RowBox[{"0.1", "*", 
            RowBox[{"v\[CapitalOmega]", "[", 
             RowBox[{"0", ",", "pH", ",", "V0"}], "]"}]}]}], ",", "w"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vvavg", "[", 
    RowBox[{"pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"vvavg", "[", 
      RowBox[{"pH", ",", "V0"}], "]"}], "\[IndentingNewLine]", "=", " ", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"vvelocityprop", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"t", "/", 
                 RowBox[{"valfa", "[", 
                  RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
               ",", "V0"}], "]"}], "/", "24"}], "+", "1"}], ")"}], "/", 
          RowBox[{"valfa", "[", 
           RowBox[{"pH", ",", "V0"}], "]"}]}], "*", "vbeta"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"24", "*", 
           RowBox[{"vdecaytime", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}], "*", 
           RowBox[{"valfa", "[", 
            RowBox[{"pH", ",", "V0"}], "]"}]}]}], "}"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"24", "*", 
        RowBox[{"vdecaytime", "[", 
         RowBox[{"pH", ",", "V0"}], "]"}], "*", 
        RowBox[{"valfa", "[", 
         RowBox[{"pH", ",", "V0"}], "]"}]}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vWx", "[", 
    RowBox[{"x_", ",", "t_", ",", "pH_", ",", "V0_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"vWx", "[", 
      RowBox[{"x", ",", "t", ",", "pH", ",", "V0"}], "]"}], "=", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"v\[CapitalOmega]", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "/", 
            RowBox[{"valfa", "[", 
             RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", ",", 
          "V0"}], "]"}], ")"}], "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sech", "[", 
         RowBox[{
          RowBox[{"v\[CapitalOmega]", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"t", "/", 
              RowBox[{"valfa", "[", 
               RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
            ",", "V0"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "/", "vbeta"}], "-", 
              RowBox[{"t", "/", 
               RowBox[{"valfa", "[", 
                RowBox[{"pH", ",", "V0"}], "]"}]}]}], ")"}], "-", 
            RowBox[{"v\[Eta]", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "/", 
                RowBox[{"valfa", "[", 
                 RowBox[{"pH", ",", "V0"}], "]"}]}], "/", "24"}], ",", "pH", 
              ",", "V0"}], "]"}]}], ")"}]}], "]"}], ")"}], "^", "2"}]}]}], 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8317345323229027`*^9, 3.831734581420227*^9}, {
   3.8317352702798853`*^9, 3.831735329687085*^9}, 3.8317391695048404`*^9, {
   3.831743373426512*^9, 3.831743384156268*^9}, {3.8339496104746723`*^9, 
   3.833949629226898*^9}, {3.833949802101451*^9, 3.83395018097294*^9}, {
   3.834187363702841*^9, 3.8341873985466585`*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"704b105c-dc66-4c97-8062-30c1bfb7e24e"]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Results", "Chapter",
 CellChangeTimes->{{3.746126679262827*^9, 3.74612669240211*^9}, {
   3.8278303426667013`*^9, 3.8278303632218456`*^9}, 3.8331276098258667`*^9},
 FontWeight->"Bold",ExpressionUUID->"70629e49-3625-4c08-adc6-cf8db8534ac0"],

Cell[CellGroupData[{

Cell["3.1 Normalized filament electrical conductivity plots", "Subsection",
 CellChangeTimes->{{3.8360743533718243`*^9, 
  3.836074371970994*^9}},ExpressionUUID->"9d93d764-2aec-4026-b502-\
97c1f3949da0"],

Cell[CellGroupData[{

Cell["3.1.1 Longitudinal", "Subsubsection",
 CellChangeTimes->{{3.836074384235122*^9, 
  3.836074394107141*^9}},ExpressionUUID->"528717eb-72b1-4266-84a3-\
e9e2331727c4"],

Cell[CellGroupData[{

Cell["\<\
Manipulate[Labeled[ListLinePlot[
   {
    Table[{pH, Abs[(icckeff[pH] + iccG*((rzp^2*f\[Sigma][pH]^2)/(mu*((icclb + \
rzp)^2 - rzp^2))))]/icckinf}, {pH, 6, 8, 0.1}],
    Table[{pH, Abs[(ivckeff[pH] + ivcG*((rzp^2*f\[Sigma][pH]^2)/(mu*((ivclb + \
rzp)^2 - rzp^2))))]/ivckinf}, {pH, 6, 8, 0.1}]
    },
    PlotLabel->Style[\"Longitudinal\",Bold,18],
   AxesLabel -> \
{Style[\"pH\",Bold,18],Style[HoldForm[Superscript[k,eff]/Superscript[k,\
\[Infinity]]],Bold,20] }, AxesStyle ->Directive[Bold,18], ImageSize -> 500,
   PlotStyle -> {If[MemberQ[electrolyte, \"in vitro\"], {Blue, Dashed, \
Thickness[0.006]}, None], If[MemberQ[electrolyte, \"intracellular\"], \
{Orange, Thickness[0.006]}, None]}],
\"Plot-1: Filament electrical conductivity as functuion of pH.\", Bottom, \
LabelStyle -> Directive[Bold, 18]],
 {{electrolyte, {\"intracellular\"}}, {\"in vitro\", \"intracellular\"}, \
CheckboxBar} ,
 Delimiter,
  Text[Grid[{{\"in-vitro bulk conductivity\",ivckinf,\"  S/m\"},
  {\"intracellular bulk conductivity\",icckinf,\"  S/m\"}}]],
  SynchronousUpdating -> False, SaveDefinitions -> True, ContinuousAction -> \
False]\
\>", "Input",
 CellOpen->False,
 CellChangeTimes->{{3.83400227538955*^9, 3.8340023184875927`*^9}, 
   3.83400238670857*^9, {3.834002529829665*^9, 3.83400259750922*^9}, {
   3.834002753009746*^9, 3.834002813131983*^9}, {3.834002920535808*^9, 
   3.8340029368989267`*^9}, {3.834003209173777*^9, 3.8340032293296423`*^9}, {
   3.8340032599559183`*^9, 3.834003280092744*^9}, {3.834003328907845*^9, 
   3.834003338066011*^9}, {3.834003371265472*^9, 3.83400337852563*^9}, {
   3.83400344039855*^9, 3.834003443486486*^9}, {3.834003975461111*^9, 
   3.834003985535419*^9}, {3.834004097252225*^9, 3.834004162124411*^9}, {
   3.834062987839341*^9, 3.83406300222252*^9}, {3.8340633437690687`*^9, 
   3.8340633612930927`*^9}, 3.8340634529315853`*^9, {3.834063648390512*^9, 
   3.834063669993269*^9}, {3.834064669130418*^9, 3.8340647164098597`*^9}, 
   3.834065790007287*^9, {3.8340658219835577`*^9, 3.834065888917753*^9}, {
   3.834065949621545*^9, 3.8340659774087057`*^9}, {3.834066081654974*^9, 
   3.834066096060336*^9}, {3.8340661339882107`*^9, 3.834066201057993*^9}, {
   3.8341886381263623`*^9, 3.8341886883931475`*^9}, {3.8341887207831516`*^9, 
   3.834188774607693*^9}, {3.8341900818757668`*^9, 3.834190082353468*^9}, {
   3.8350363655795813`*^9, 3.835036453260261*^9}, {3.8350365357430058`*^9, 
   3.8350366421983147`*^9}, {3.8350367914739733`*^9, 3.835036847690961*^9}, {
   3.8350369987882605`*^9, 3.8350369991425285`*^9}, {3.83503705981015*^9, 
   3.835037063148105*^9}, {3.835037444849588*^9, 3.835037450737118*^9}, {
   3.8350397802623973`*^9, 3.8350397804928474`*^9}, {3.835039812390872*^9, 
   3.835039820040944*^9}, {3.8350398780743523`*^9, 3.835039943561028*^9}, {
   3.835045102847554*^9, 3.8350451034280214`*^9}, {3.8351049954317384`*^9, 
   3.835105008944332*^9}, {3.83581507367984*^9, 3.8358150898148556`*^9}, {
   3.8358151612853055`*^9, 3.8358152593509626`*^9}, {3.835816812778305*^9, 
   3.835816833745795*^9}, {3.835865542728354*^9, 3.83586564243856*^9}, {
   3.8358657012330923`*^9, 3.835865724688328*^9}, {3.835865759481216*^9, 
   3.8358657829985657`*^9}, 3.835865847137245*^9, 3.835865879866593*^9, 
   3.83587765122771*^9},
 CellLabel->
  "In[620]:=",ExpressionUUID->"49786c8e-5b06-41ec-8e02-0021f641a1d2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {"intracellular"}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {
      Hold[
       Text[
        Grid[{{"in-vitro bulk conductivity", 1.9314471153888395`, "  S/m"}, {
          "intracellular bulk conductivity", 2.5694562697192773`, 
           "  S/m"}}]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {789., {241., 218.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {"intracellular"}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          
          Table[{$CellContext`pH, 
            Abs[$CellContext`icckeff[$CellContext`pH] + $CellContext`iccG \
(($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2)))]/$CellContext`icckinf}, {$CellContext`pH, 6, 8, 0.1}], 
          
          Table[{$CellContext`pH, 
            Abs[$CellContext`ivckeff[$CellContext`pH] + $CellContext`ivcG \
(($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2)))]/$CellContext`ivckinf}, {$CellContext`pH, 6, 8, 0.1}]}, 
         PlotLabel -> Style["Longitudinal", Bold, 18], AxesLabel -> {
           Style["pH", Bold, 18], 
           Style[
            HoldForm[
            Superscript[$CellContext`k, $CellContext`eff]/
             Superscript[$CellContext`k, Infinity]], Bold, 20]}, AxesStyle -> 
         Directive[Bold, 18], ImageSize -> 500, PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-1: Filament electrical conductivity as functuion of pH.", 
        Bottom, LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, Delimiter, 
        Text[
         Grid[{{"in-vitro bulk conductivity", 1.9314471153888395`, "  S/m"}, {
           "intracellular bulk conductivity", 2.5694562697192773`, 
            "  S/m"}}]]}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{846., {300., 307.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((((((
                2 $CellContext`F) $CellContext`f\[Sigma][$CellContext`pH]) \
$CellContext`icclambda^2) $CellContext`CylRadd)/((($CellContext`iccepsilon \
$CellContext`R) $CellContext`iccT) (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
            Total[($CellContext`z^3 $CellContext`um) $CellContext`icccbulk]/
            Total[($CellContext`z^2 $CellContext`um) $CellContext`icccbulk])) \
(1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`iccT = 
       310, $CellContext`icclb = 
       6.737941407189008*^-10, $CellContext`z = {1, 
        1, -1, -2}, $CellContext`um = {9.236401606278588*^-13, 
        7.786293805158486*^-13, 1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`icccbulk = {140, 12, 4, 
        74}, $CellContext`iccG = 0.16270373975440133`, $CellContext`rzp = 
       7/2000000000, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((((((
                2 $CellContext`F) $CellContext`f\[Sigma][$CellContext`pH]) \
$CellContext`ivclambda^2) $CellContext`CylRadd)/((($CellContext`ivcepsilon \
$CellContext`R) $CellContext`ivcT) (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
            Total[($CellContext`z^3 $CellContext`um) $CellContext`ivccBulk]/
            Total[($CellContext`z^2 $CellContext`um) $CellContext`ivccBulk])) \
(1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`ivcT = 310, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.835865645069688*^9, 3.8358658807847013`*^9, 3.8358663898984003`*^9, 
   3.835866442465927*^9, 3.8358779823161297`*^9, 3.8360096248272276`*^9, 
   3.8360752125496387`*^9, 3.8360785207000694`*^9, 3.836765185175747*^9, 
   3.836765230299296*^9, {3.836765277959832*^9, 3.836765298651108*^9}, 
   3.836765331942563*^9, 3.8367655453284607`*^9, {3.836766678573444*^9, 
   3.836766703240878*^9}, 3.836767828978738*^9, {3.836767860691679*^9, 
   3.836767875180892*^9}, 3.836768131464088*^9, 3.8367684881070013`*^9, {
   3.8367686335108*^9, 3.8367686757986403`*^9}, 3.836769234483222*^9, 
   3.8367693454373817`*^9, 3.836831508611423*^9, {3.836831544111459*^9, 
   3.836831563248014*^9}, {3.8368316833641167`*^9, 3.836831701333569*^9}, {
   3.836831884081428*^9, 3.836831905181077*^9}, 3.8368319790458307`*^9, 
   3.836832134823635*^9, {3.836832269137912*^9, 3.836832281927062*^9}, {
   3.836832352268401*^9, 3.836832430747487*^9}, {3.836832541261697*^9, 
   3.836832555575676*^9}, {3.83683290167498*^9, 3.83683294964571*^9}, {
   3.836832981254421*^9, 3.836833009584869*^9}, 3.836833398046466*^9, {
   3.836833431195539*^9, 3.8368335163279047`*^9}, 3.8370061061543493`*^9, 
   3.837006198078958*^9, 3.837006245778431*^9, 3.837006291411075*^9, 
   3.8370077887445393`*^9, 3.8370079649613357`*^9, {3.837020705877677*^9, 
   3.8370207471341057`*^9}, {3.837020900252019*^9, 3.837020943829837*^9}, {
   3.837021035040855*^9, 3.83702105960784*^9}, 3.8370211424703083`*^9, 
   3.837110018321493*^9, 3.837110157682743*^9, 3.837110203547182*^9, 
   3.8371102625949802`*^9},
 CellLabel->
  "Out[620]=",ExpressionUUID->"7a7eb51b-7020-4af2-9f44-8058cd503138"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.1.2 Transversal", "Subsubsection",
 CellChangeTimes->{{3.836074415532307*^9, 
  3.836074421235196*^9}},ExpressionUUID->"62ce09ea-614f-48e4-bce6-\
1cff03f463a4"],

Cell[CellGroupData[{

Cell["\<\
Manipulate[Labeled[ListLinePlot[
   {
    Table[{pH, (icckinf + iccdeltak[pH])/icckinf}, {pH, 6, 8, 0.1}],
    Table[{pH, (ivckinf + ivcdeltak[pH])/ivckinf}, {pH, 6, 8, 0.1}]
    },
    PlotLabel->Style[\"Transversal\",Bold,18],
   AxesLabel -> {Style[\"pH\",Bold,18] \
,Style[HoldForm[Superscript[k,eff]/Superscript[k,\[Infinity]]],Bold,20]}, \
AxesStyle->Directive[Bold,18], ImageSize -> 500,
   PlotStyle -> {If[MemberQ[electrolyte, \"in vitro\"], {Blue, Dashed, \
Thickness[0.006]}, None], If[MemberQ[electrolyte, \"intracellular\"], \
{Orange, Thickness[0.006]}, None]}],
  \"Plot-2: Filament electrical conductivity as functuion of pH.\", Bottom, \
LabelStyle -> Directive[Bold, 18]],
 {{electrolyte, {\"intracellular\"}}, {\"in vitro\", \"intracellular\"}, \
CheckboxBar},
 Delimiter,
 Text[Grid[{{\"in-vitro bulk conductivity\",ivckinf,\"  S/m\"},
 {\"intracellular bulk conductivity\",icckinf,\"  S/m\"}}]], 
 SynchronousUpdating -> False, SaveDefinitions -> True, ContinuousAction -> \
False]\
\>", "Input",
 CellOpen->False,
 CellChangeTimes->{{3.834003499883707*^9, 3.834003558369379*^9}, {
   3.834003657191222*^9, 3.834003657716052*^9}, {3.834003751706223*^9, 
   3.834003780926241*^9}, {3.834003992962083*^9, 3.834004010287396*^9}, {
   3.834063407097151*^9, 3.83406343371336*^9}, 3.834063474524832*^9, {
   3.834063690827711*^9, 3.834063696461837*^9}, 3.834066247955654*^9, {
   3.8341888679674263`*^9, 3.834188895987694*^9}, {3.835036889945553*^9, 
   3.8350369298876643`*^9}, {3.835037460264431*^9, 3.835037461865243*^9}, 
   3.835039747473304*^9, {3.8350399559463797`*^9, 3.8350399699856606`*^9}, {
   3.8350451129878054`*^9, 3.8350451135473285`*^9}, {3.8351050281567354`*^9, 
   3.835105029802312*^9}, {3.8358153440466447`*^9, 3.8358154513695984`*^9}, {
   3.835815489782728*^9, 3.8358154918534107`*^9}, {3.8358155298559647`*^9, 
   3.835815540365266*^9}, 3.835865904625153*^9, {3.8358659630433826`*^9, 
   3.8358659643107147`*^9}, 3.835877683992909*^9},
 CellLabel->
  "In[621]:=",ExpressionUUID->"983793b6-2518-47d4-a236-9b5ae79d59d2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {"intracellular"}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {
      Hold[
       Text[
        Grid[{{"in-vitro bulk conductivity", 1.9314471153888395`, "  S/m"}, {
          "intracellular bulk conductivity", 2.5694562697192773`, 
           "  S/m"}}]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {789., {241., 218.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {"intracellular"}}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          
          Table[{$CellContext`pH, ($CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH])/$CellContext`icckinf}, \
{$CellContext`pH, 6, 8, 0.1}], 
          
          Table[{$CellContext`pH, ($CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH])/$CellContext`ivckinf}, \
{$CellContext`pH, 6, 8, 0.1}]}, PlotLabel -> Style["Transversal", Bold, 18], 
         AxesLabel -> {
           Style["pH", Bold, 18], 
           Style[
            HoldForm[
            Superscript[$CellContext`k, $CellContext`eff]/
             Superscript[$CellContext`k, Infinity]], Bold, 20]}, AxesStyle -> 
         Directive[Bold, 18], ImageSize -> 500, PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-2: Filament electrical conductivity as functuion of pH.", 
        Bottom, LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, Delimiter, 
        Text[
         Grid[{{"in-vitro bulk conductivity", 1.9314471153888395`, "  S/m"}, {
           "intracellular bulk conductivity", 2.5694562697192773`, 
            "  S/m"}}]]}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{846., {300., 307.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`icckinf = 
       2.5694562697192773`, $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`iccalfa2 = -45.80817013059013, \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[
           1, $CellContext`CylRadd/$CellContext`icclambda]))), $CellContext`f\
\[Sigma] = InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivckinf = 
       1.9314471153888395`, $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, \
$CellContext`ivclb = 6.879135666749031*^-10, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`ivclambda = 9.80026189765645*^-10, $CellContext`ivcepsilon = 
       6.937964486353825*^-10}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.835036919468608*^9, 3.835036965363776*^9}, 
   3.8350370777780113`*^9, {3.8350372019080625`*^9, 3.8350372026721745`*^9}, {
   3.83503746357111*^9, 3.8350374661015368`*^9}, {3.835038475646329*^9, 
   3.8350385207831745`*^9}, {3.835039731536827*^9, 3.8350397508083324`*^9}, {
   3.8350399711776323`*^9, 3.8350399907262106`*^9}, 3.835045116515625*^9, 
   3.8351043994814625`*^9, 3.8351047690019865`*^9, 3.8351050310054865`*^9, 
   3.835105095794387*^9, 3.835315887656159*^9, 3.8354436919236546`*^9, 
   3.835447995414841*^9, 3.8354619736437473`*^9, 3.835462307379797*^9, 
   3.8355255524283824`*^9, 3.835556410247947*^9, 3.8355614112498617`*^9, 
   3.8355739371264343`*^9, 3.8356414629213486`*^9, 3.835644314925015*^9, 
   3.835644508212859*^9, 3.835722630891161*^9, 3.835723370829256*^9, {
   3.8357234416758013`*^9, 3.8357234424886312`*^9}, {3.8357237430365305`*^9, 
   3.83572376844619*^9}, 3.8357238653201966`*^9, {3.8357238998170033`*^9, 
   3.835723900654811*^9}, 3.835724031694016*^9, 3.83578632043633*^9, 
   3.8357873681262083`*^9, 3.8357942282319775`*^9, 3.83581151031441*^9, 
   3.835811879720087*^9, 3.835812572738123*^9, 3.835815406514902*^9, 
   3.8358154557965765`*^9, 3.835815493110984*^9, 3.835815541702652*^9, 
   3.8358170655933847`*^9, 3.835826606942318*^9, 3.835865908862734*^9, 
   3.8358659652237253`*^9, 3.835866390042252*^9, 3.83586648388221*^9, 
   3.8358779824433203`*^9, 3.836009625068616*^9, 3.8360752126094804`*^9, 
   3.836078520762901*^9, 3.836765185228284*^9, 3.8367652303421707`*^9, {
   3.836765278004731*^9, 3.8367652986957417`*^9}, 3.836765331985362*^9, 
   3.8367655453827543`*^9, {3.836766678617167*^9, 3.8367667032860518`*^9}, 
   3.836767829012319*^9, {3.836767860728961*^9, 3.836767875208478*^9}, 
   3.8367681315525627`*^9, 3.8367684881370296`*^9, {3.8367686335392227`*^9, 
   3.836768675829739*^9}, 3.8367692345123587`*^9, 3.836769345465403*^9, 
   3.836831508686199*^9, {3.836831544151886*^9, 3.8368315632816067`*^9}, {
   3.836831683397718*^9, 3.836831701367483*^9}, {3.836831884111415*^9, 
   3.8368319052123547`*^9}, 3.836831979083255*^9, 3.836832134869096*^9, {
   3.836832269179352*^9, 3.836832281964601*^9}, {3.836832352305428*^9, 
   3.836832430784107*^9}, {3.83683254131503*^9, 3.836832555611095*^9}, {
   3.836832901713254*^9, 3.8368329496950006`*^9}, {3.8368329812887783`*^9, 
   3.836833009624758*^9}, 3.836833398076778*^9, {3.83683343123964*^9, 
   3.83683351635789*^9}, 3.83700610622991*^9, 3.837006198148282*^9, 
   3.8370062458328533`*^9, 3.8370062914573097`*^9, 3.8370077887914147`*^9, 
   3.837007965011176*^9, {3.837020705940422*^9, 3.837020747163624*^9}, {
   3.8370209002817698`*^9, 3.837020943863378*^9}, {3.837021035071854*^9, 
   3.837021059636806*^9}, 3.837021142503924*^9, 3.83711001835286*^9, 
   3.837110157712699*^9, 3.837110203578557*^9, 3.8371102626255836`*^9},
 CellLabel->
  "Out[621]=",ExpressionUUID->"252c32e6-01fd-40ea-b32a-d9745c0b887a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3.2 Linearized Poisson-Boltzmann radial electric potential plot\
\>", "Subsection",
 CellChangeTimes->{{3.836074552851425*^9, 3.8360745552039547`*^9}, 
   3.8360748585555096`*^9, {3.837111655769682*^9, 
   3.8371116773181467`*^9}},ExpressionUUID->"c4666743-8fed-4b65-9d4a-\
df5fd3c894a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"iccEP", "[", 
               RowBox[{"pH", ",", 
                RowBox[{"r", "*", 
                 RowBox[{
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "10"}], ")"}]}], "/", "icclambda"}]}]}], 
               "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"rzp", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ",", 
             RowBox[{"2", "*", 
              RowBox[{"rzp", "/", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "10"}], ")"}]}]}]}], ",", "0.1"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"ivcEp", "[", 
               RowBox[{"pH", ",", 
                RowBox[{"r", "*", 
                 RowBox[{
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "10"}], ")"}]}], "/", "ivclambda"}]}]}], 
               "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"rzp", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ",", 
             RowBox[{"2", "*", 
              RowBox[{"rzp", "/", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "10"}], ")"}]}]}]}], ",", "0.1"}], "}"}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r(\[Angstrom])\>\"", ",", "\"\<|\[Phi](V)|\>\""}], 
         "}"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     "\"\<Plot-3: Electric potential as function of the distance.\>\"", ",", 
     "Bottom", ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"electrolyte", ",", 
       RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], ",", 
     "CheckboxBar"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pH", ",", "7"}], "}"}], ",", "6", ",", "8", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.827545677890122*^9, 3.827545777504634*^9}, {
   3.827545815716917*^9, 3.8275458405385017`*^9}, {3.8275459071483383`*^9, 
   3.8275459135822763`*^9}, {3.827545945237362*^9, 3.827546153992543*^9}, {
   3.827546410762834*^9, 3.827546452826749*^9}, {3.827546484787508*^9, 
   3.827546523618882*^9}, {3.82754673935571*^9, 3.827546749102056*^9}, {
   3.827549748330501*^9, 3.827549748975326*^9}, {3.827832482597475*^9, 
   3.8278326146469736`*^9}, {3.8278326708580914`*^9, 
   3.8278328793289504`*^9}, {3.827832911301385*^9, 3.8278329127934656`*^9}, {
   3.831522674879528*^9, 3.8315226767826805`*^9}, {3.8317351560244613`*^9, 
   3.8317351590730352`*^9}, {3.8317428348687353`*^9, 3.83174293800959*^9}, {
   3.831742970714954*^9, 3.831742971958953*^9}, {3.831743031153859*^9, 
   3.8317430316994314`*^9}, {3.8317430625071125`*^9, 3.831743079265597*^9}, {
   3.8317431480515013`*^9, 3.831743152668185*^9}, {3.83174507646271*^9, 
   3.831745079503648*^9}, {3.831745662621972*^9, 3.8317456662877593`*^9}, {
   3.8317480390512967`*^9, 3.831748197737151*^9}, {3.831748262654934*^9, 
   3.8317482939403157`*^9}, {3.8317483467878275`*^9, 
   3.8317484369340086`*^9}, {3.8317487020700736`*^9, 
   3.8317487082728243`*^9}, {3.831771889518196*^9, 3.831771952065395*^9}, {
   3.8317724146417637`*^9, 3.8317724229793496`*^9}, {3.8323787672227736`*^9, 
   3.8323787727206774`*^9}, {3.833120178723198*^9, 3.8331201811845207`*^9}, {
   3.834004605847259*^9, 3.834004676820466*^9}, {3.834004734778119*^9, 
   3.8340048151966133`*^9}, 3.834004858396863*^9, {3.834004932403817*^9, 
   3.83400497429222*^9}, {3.834005033124296*^9, 3.834005061896634*^9}, 
   3.834005169037025*^9, {3.834005266139023*^9, 3.834005268017797*^9}, {
   3.834005312226424*^9, 3.834005412373357*^9}, {3.834005482593712*^9, 
   3.834005489906335*^9}, {3.8340055217673798`*^9, 3.834005542291773*^9}, {
   3.83400560850992*^9, 3.834005631111319*^9}, {3.8340056750768967`*^9, 
   3.834005681248296*^9}, 3.834005744736196*^9, {3.834062793673921*^9, 
   3.834062795501108*^9}, {3.834062827985215*^9, 3.834062829542509*^9}, {
   3.834063160109086*^9, 3.8340632210188513`*^9}, {3.834063259894454*^9, 
   3.83406326169847*^9}, 3.8340637379563007`*^9, {3.834066285557972*^9, 
   3.834066363329771*^9}, {3.834066393442046*^9, 3.8340664091779013`*^9}, {
   3.834066502495253*^9, 3.834066535079082*^9}, 3.834067026749205*^9, {
   3.834067095678203*^9, 3.83406709690757*^9}, {3.8341890061462703`*^9, 
   3.8341890164980063`*^9}, {3.834189053813117*^9, 3.834189065122965*^9}, {
   3.834189262330408*^9, 3.8341892707275133`*^9}, {3.834190091074671*^9, 
   3.8341900915224714`*^9}, {3.8350372381565223`*^9, 
   3.8350372493169413`*^9}, {3.835037293483953*^9, 3.8350373214167366`*^9}, {
   3.835037552948227*^9, 3.8350375944565897`*^9}, {3.8350376646287985`*^9, 
   3.8350376661989202`*^9}, {3.835038596010664*^9, 3.835038646737562*^9}, {
   3.8350387183553286`*^9, 3.835038762163583*^9}, {3.835039740371873*^9, 
   3.835039740595272*^9}, {3.8350434489001017`*^9, 3.83504344933816*^9}, 
   3.83504376308004*^9, {3.8350451256543016`*^9, 3.835045126221265*^9}, 
   3.8351052894312735`*^9, 3.8351054018744955`*^9, 3.8351138533719044`*^9, {
   3.835113894773058*^9, 3.8351139232570353`*^9}, {3.835815573528261*^9, 
   3.8358156234426885`*^9}, 3.835865996816354*^9, 3.835877718082326*^9},
 CellLabel->
  "In[622]:=",ExpressionUUID->"f7a764c2-dade-4815-8205-4d78f89561df"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular", "in vitro"}, $CellContext`pH$$ = 6.5, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {{
       Hold[$CellContext`pH$$], 7}, 6, 8}}, Typeset`size$$ = {
    725., {216., 194.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`pH$$ = 7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          Table[{$CellContext`r, 
            Abs[
             $CellContext`iccEP[$CellContext`pH$$, $CellContext`r (
               10^(-10)/$CellContext`icclambda)]]}, {$CellContext`r, \
$CellContext`rzp/10^(-10), 2 ($CellContext`rzp/10^(-10)), 0.1}], 
          Table[{$CellContext`r, 
            Abs[
             $CellContext`ivcEp[$CellContext`pH$$, $CellContext`r (
               10^(-10)/$CellContext`ivclambda)]]}, {$CellContext`r, \
$CellContext`rzp/10^(-10), 2 ($CellContext`rzp/10^(-10)), 0.1}]}, 
         AxesLabel -> {"r(\[Angstrom])", "|\[Phi](V)|"}, AxesStyle -> 
         Directive[Bold, 18], ImageSize -> 500, PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-3: Electric potential as function of the distance.", Bottom, 
        LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {{$CellContext`pH$$, 7}, 6, 8, Appearance -> "Labeled"}}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{782., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`rzp = 7/2000000000, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`ivclambda = 9.80026189765645*^-10, $CellContext`ivcepsilon = 
       6.937964486353825*^-10}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.834189117081196*^9, 3.8341891216172132`*^9}, 
   3.83418927196259*^9, 3.8341899509282093`*^9, {3.834189983898412*^9, 
   3.834189984752137*^9}, 3.8341900921687756`*^9, 3.8342235845485134`*^9, {
   3.8342237052812862`*^9, 3.834223712143627*^9}, 3.8349692890416393`*^9, {
   3.834969625724094*^9, 3.834969642435031*^9}, 3.8350360735324616`*^9, 
   3.8350372529663057`*^9, {3.8350373033870487`*^9, 3.8350373237525406`*^9}, {
   3.8350373618285637`*^9, 3.8350374109190626`*^9}, {3.8350375817925663`*^9, 
   3.835037630378662*^9}, 3.835037667311331*^9, {3.835037937763726*^9, 
   3.8350379511018243`*^9}, 3.835038537709634*^9, {3.8350385974581842`*^9, 
   3.8350386824529815`*^9}, 3.8350387288114753`*^9, {3.83503876408212*^9, 
   3.835038788787652*^9}, 3.835039742546228*^9, {3.8350424943045435`*^9, 
   3.8350425214273767`*^9}, {3.835043049887833*^9, 3.835043064113309*^9}, {
   3.835043175988064*^9, 3.835043191111292*^9}, {3.8350432841067133`*^9, 
   3.8350432885928745`*^9}, 3.8350433878869343`*^9, {3.83504344086829*^9, 
   3.8350434533594728`*^9}, {3.8350437652482996`*^9, 3.8350437707628098`*^9}, 
   3.835045129121251*^9, {3.8350453853946505`*^9, 3.8350453916585937`*^9}, 
   3.835104399980096*^9, 3.8351052903727455`*^9, {3.8351053759866676`*^9, 
   3.835105405739865*^9}, {3.83511385604541*^9, 3.835113860270276*^9}, {
   3.8351138963753624`*^9, 3.8351139244900904`*^9}, 3.8353158877868423`*^9, 
   3.835443692050315*^9, 3.8354479955494795`*^9, 3.8354619737855024`*^9, 
   3.8354623075014715`*^9, 3.835525552579974*^9, 3.835556410366598*^9, 
   3.8355614113885236`*^9, 3.83557393727003*^9, 3.8356414630570154`*^9, 
   3.835644315090604*^9, 3.835644508348503*^9, 3.835722631052727*^9, 
   3.8357233709688835`*^9, {3.8357234452659597`*^9, 3.835723446085739*^9}, {
   3.8357237432190447`*^9, 3.835723773638565*^9}, 3.8357238654525237`*^9, {
   3.8357239034964566`*^9, 3.8357239041676927`*^9}, 3.8357240318585854`*^9, 
   3.8357863205383167`*^9, 3.835786397894644*^9, 3.8357873682257757`*^9, 
   3.8357942283667564`*^9, 3.8358115105084667`*^9, 3.835811879887333*^9, 
   3.8358125728537836`*^9, {3.8358156104811563`*^9, 3.8358156248860035`*^9}, 
   3.835817065739032*^9, 3.835826607022299*^9, 3.835865997746725*^9, 
   3.8358663901801033`*^9, 3.835866505166337*^9, 3.8358667340227833`*^9, 
   3.835868453343691*^9, 3.835877982515785*^9, 3.8360096252281923`*^9, 
   3.8360752126593475`*^9, 3.8360785208047895`*^9, 3.8367651852764177`*^9, 
   3.836765230393355*^9, {3.8367652780502777`*^9, 3.8367652987518377`*^9}, 
   3.836765332037837*^9, 3.8367655454285727`*^9, {3.836766678670385*^9, 
   3.836766703338571*^9}, 3.8367678290555477`*^9, {3.836767860778055*^9, 
   3.8367678752443237`*^9}, 3.836768131577417*^9, 3.836768488181177*^9, {
   3.836768633594863*^9, 3.8367686758695602`*^9}, 3.836769234551113*^9, 
   3.83676934549219*^9, 3.836831508724276*^9, {3.836831544188548*^9, 
   3.836831563318317*^9}, {3.836831683439939*^9, 3.8368317014087267`*^9}, {
   3.836831884149776*^9, 3.836831905252952*^9}, 3.836831979128183*^9, 
   3.836832134908601*^9, {3.836832269225318*^9, 3.836832282002849*^9}, {
   3.836832352345693*^9, 3.83683243084767*^9}, {3.836832541357193*^9, 
   3.836832555648185*^9}, {3.8368329018149*^9, 3.8368329497392387`*^9}, {
   3.8368329813438168`*^9, 3.836833009681942*^9}, 3.8368333981216087`*^9, {
   3.836833431274117*^9, 3.836833516396306*^9}, 3.837006106307176*^9, 
   3.837006198207251*^9, 3.837006245868512*^9, 3.83700629154879*^9, 
   3.837007788843277*^9, 3.8370079650610685`*^9, {3.8370207060343323`*^9, 
   3.8370207471971283`*^9}, {3.837020900365405*^9, 3.8370209438957367`*^9}, {
   3.837021035107697*^9, 3.837021059666603*^9}, 3.837021142539352*^9, 
   3.8371100184302053`*^9, 3.837110157743252*^9, 3.8371102036116457`*^9, {
   3.83711026265874*^9, 3.837110273737739*^9}, 3.837111428024366*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"0406b991-8899-4e42-9b9f-c66ee7dd593b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3 Velocity plots", "Subsection",
 CellChangeTimes->{{3.8360745786769953`*^9, 
  3.836074583524198*^9}},ExpressionUUID->"fdf94739-d5c6-49be-9619-\
84e0f9f66c8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"inputvoltage", ",", 
             RowBox[{"vvavg", "[", 
              RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"inputvoltage", ",", "0.05", ",", "0.4", ",", "0.05"}], 
            "}"}]}], "]"}], ",", 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[0.94, 0.88, 0.94]], 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"inputvoltage", ",", 
             RowBox[{"cvavg", "[", 
              RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "}"}], 
           StyleBox[",",
            Background->RGBColor[1, 1, 0.85]], 
           RowBox[{"{", 
            RowBox[{"inputvoltage", ",", "0.05", ",", "0.4", ",", "0.05"}], 
            "}"}]}], 
          StyleBox["]",
           Background->RGBColor[1, 1, 0.85]]}]}], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[1, 1, 0.85]], 
        StyleBox["}",
         Background->RGBColor[1, 1, 0.85]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Volts\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<v(m/s)\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     "\"\<Plot-4: Average velocity as functuion of input voltage.\>\"", ",", 
     "Bottom", ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", "18"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"electrolyte", ",", 
       RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], ",", 
     "CheckboxBar"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pH", ",", "7"}], "}"}], ",", "6", ",", "8", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8317383710090647`*^9, 3.831738435814228*^9}, {
   3.8317385450986648`*^9, 3.831738597139838*^9}, {3.8317386842574277`*^9, 
   3.8317386849626055`*^9}, {3.831742920923294*^9, 3.8317429256217327`*^9}, {
   3.831743101268819*^9, 3.8317431164059153`*^9}, {3.8317450700738096`*^9, 
   3.8317450734434633`*^9}, {3.8317457595636883`*^9, 
   3.8317458492843647`*^9}, {3.8317459274083033`*^9, 
   3.8317460193271465`*^9}, {3.831746052287705*^9, 3.831746053086575*^9}, {
   3.8317461380658865`*^9, 3.8317461788933163`*^9}, {3.8317462611954184`*^9, 
   3.8317463900229497`*^9}, {3.8317464803173337`*^9, 3.83174652382205*^9}, {
   3.831746930353713*^9, 3.831746991824119*^9}, {3.831747081323124*^9, 
   3.8317471845006003`*^9}, {3.8317473449337163`*^9, 3.83174742260086*^9}, {
   3.831747612136247*^9, 3.8317476475589085`*^9}, {3.831747829079711*^9, 
   3.8317478486810217`*^9}, 3.831747979495051*^9, {3.831748052329522*^9, 
   3.831748056204274*^9}, {3.8317717090298347`*^9, 3.83177178810634*^9}, {
   3.8317724341769233`*^9, 3.831772442999869*^9}, {3.832378729470482*^9, 
   3.832378734007455*^9}, {3.833120173936661*^9, 3.833120175905122*^9}, {
   3.8339195935095806`*^9, 3.833919611635004*^9}, {3.834189157072892*^9, 
   3.8341892429319043`*^9}, 3.8341893028817806`*^9, {3.8341901011687136`*^9, 
   3.8341901017154045`*^9}, {3.835038866826231*^9, 3.8350388673309536`*^9}, {
   3.835039115694798*^9, 3.8350391177844343`*^9}, {3.8350451370474834`*^9, 
   3.8350451376240253`*^9}, {3.8358156582201986`*^9, 3.835815720851886*^9}, {
   3.835866028238247*^9, 3.835866059623846*^9}, 3.835877738674088*^9},
 CellLabel->
  "In[623]:=",ExpressionUUID->"0abf1b81-eab1-4f1a-a14e-9132b9ec55ff"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular"}, $CellContext`pH$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {{
       Hold[$CellContext`pH$$], 7}, 6, 8}}, Typeset`size$$ = {
    432., {125., 111.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`pH$$ = 7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          Table[{$CellContext`inputvoltage, 
            $CellContext`vvavg[$CellContext`pH$$, \
$CellContext`inputvoltage]}, {$CellContext`inputvoltage, 0.05, 0.4, 0.05}], 
          Table[{$CellContext`inputvoltage, 
            $CellContext`cvavg[$CellContext`pH$$, \
$CellContext`inputvoltage]}, {$CellContext`inputvoltage, 0.05, 0.4, 0.05}]}, 
         AxesLabel -> {
           Style["Volts", Bold, 18], 
           Style["v(m/s)", Bold, 18]}, PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}, AxesStyle -> Directive[Bold, 18], 
         ImageSize -> 500], 
        "Plot-4: Average velocity as functuion of input voltage.", Bottom, 
        LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {{$CellContext`pH$$, 7}, 6, 8, Appearance -> "Labeled"}}, 
      "Options" :> {ContinuousAction -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{469., {166., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`vvavg[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := ($CellContext`vvavg[$CellContext`pH, $CellContext`V0] = 
        NIntegrate[(($CellContext`vvelocityprop[($CellContext`t/$CellContext`\
valfa[$CellContext`pH, $CellContext`V0])/
                24, $CellContext`pH, $CellContext`V0]/24 + 
             1)/$CellContext`valfa[$CellContext`pH, $CellContext`V0]) \
$CellContext`vbeta, {$CellContext`t, 0, 
            24 $CellContext`vdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`valfa[$CellContext`pH, $CellContext`V0]}]/(
         24 $CellContext`vdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`valfa[$CellContext`pH, $CellContext`V0])), \
$CellContext`vvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] (
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`v\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRl[$CellContext`pH] (
          24/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`ivcRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`ivckeff[$CellContext`pH] + \
$CellContext`ivcG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`uLm = 5.4*^-9, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`ivclambda^2 $CellContext`CylRadd)/($CellContext`ivcepsilon \
$CellContext`R $CellContext`ivcT (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`ivccBulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`ivccBulk]) (
           1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[
            1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`ivcT = 
       310, $CellContext`z = {1, 1, -1, -2}, $CellContext`um = {
        9.236401606278588*^-13, 7.786293805158486*^-13, 
        1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivcZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`ivcZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 + 
            80 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`ivcRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`ivcRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 - 18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`ivcb 
              
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`ivcb^2 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`ivcb^3 
              Pi^8 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`ivcb^4 
              Pi^8 $CellContext`ivcRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`ivcb = 
       0.4275963332672946, $CellContext`ivcRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRt[$CellContext`pH] = \
$CellContext`ivclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH]])), $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`vwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`vgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`ivcZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`vgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`vgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`ivcb $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`ivcCo))), $CellContext`ivcCo = 
       6.299542694592175*^-17, $CellContext`v\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRt[$CellContext`pH] (
          6/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`valfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`valfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`vbeta = 1.08*^-8, $CellContext`vdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`v\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`v\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`v\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`v\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`vwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`vwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`cvavg[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := ($CellContext`cvavg[$CellContext`pH, $CellContext`V0] = 
        NIntegrate[(($CellContext`cvelocityprop[($CellContext`t/$CellContext`\
calfa[$CellContext`pH, $CellContext`V0])/
                24, $CellContext`pH, $CellContext`V0]/24 + 
             1)/$CellContext`calfa[$CellContext`pH, $CellContext`V0]) \
$CellContext`cbeta, {$CellContext`t, 0, 
            24 $CellContext`cdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`calfa[$CellContext`pH, $CellContext`V0]}]/(
         24 $CellContext`cdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`calfa[$CellContext`pH, $CellContext`V0])), \
$CellContext`cvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`c\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRl[$CellContext`pH] (
          24/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`iccRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`icckeff[$CellContext`pH] + \
$CellContext`iccG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`icclambda^2 $CellContext`CylRadd)/($CellContext`iccepsilon \
$CellContext`R $CellContext`iccT (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`icccbulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`icccbulk]) (
           1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`iccT = 
       310, $CellContext`icccbulk = {140, 12, 4, 74}, $CellContext`iccG = 
       0.16270373975440133`, $CellContext`iccZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`iccZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`iccRl[$CellContext`pH]^2 + 
            80 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`iccRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`iccRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 - 18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`iccb 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`iccb^2 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`iccb^3 
              Pi^8 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`iccb^4 
              Pi^8 $CellContext`iccRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`iccb = -6.168064974156344, \
$CellContext`iccRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRt[$CellContext`pH] = \
$CellContext`icclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH]])), $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`iccalfa2 = -45.80817013059013, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`cwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`cgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`iccZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`cgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`cgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`iccCo $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`iccb $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`iccCo))), $CellContext`iccCo = 
       9.699130134892227*^-17, $CellContext`c\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRt[$CellContext`pH] (
          6/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`calfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`calfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`iccCo $CellContext`iccZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`cbeta = 1.08*^-8, $CellContext`cdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`c\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`c\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`c\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`c\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`cwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`cwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))])}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.833120308338009*^9, 3.833120325151559*^9}, 
   3.833123208945304*^9, 3.833123309631318*^9, 3.8331235746661654`*^9, 
   3.833123612766114*^9, 3.833123838565757*^9, 3.833124515112455*^9, 
   3.833124917788199*^9, 3.8331269102958097`*^9, 3.833127740635768*^9, 
   3.8332815822029147`*^9, {3.833282906210983*^9, 3.833282912143451*^9}, 
   3.8332829441909113`*^9, 3.8332843049287825`*^9, 3.8332860278208013`*^9, 
   3.8336715130179033`*^9, 3.8336731158253937`*^9, 3.8336737404666195`*^9, 
   3.833675175994342*^9, 3.833675628804101*^9, 3.8336768606906776`*^9, 
   3.8336771173325896`*^9, 3.8336783662351513`*^9, 3.833678635825633*^9, 
   3.833679955963184*^9, 3.833950450143179*^9, {3.83395068985608*^9, 
   3.8339507135256133`*^9}, 3.8339526698091784`*^9, 3.83418428213654*^9, 
   3.8341880408101673`*^9, {3.8341892107607393`*^9, 3.8341892443910747`*^9}, 
   3.8341893044376397`*^9, 3.8341899511157074`*^9, {3.8341899876243773`*^9, 
   3.8341899884142675`*^9}, 3.8341901025324197`*^9, 3.8342235852133675`*^9, {
   3.834223719575735*^9, 3.834223720667448*^9}, 3.8349692892171946`*^9, {
   3.8349696258826723`*^9, 3.834969646459956*^9}, 3.8350360737458587`*^9, {
   3.8350379554311533`*^9, 3.8350379561994705`*^9}, {3.8350387932857456`*^9, 
   3.8350388026472473`*^9}, {3.8350388688958626`*^9, 3.835038893799242*^9}, {
   3.835039036572566*^9, 3.8350390431848416`*^9}, {3.835039086617772*^9, 
   3.83503911965165*^9}, {3.835044640922981*^9, 3.835044666411096*^9}, 
   3.8350451415635633`*^9, 3.835045394218434*^9, {3.835045488796236*^9, 
   3.8350454911213913`*^9}, 3.835104400630388*^9, 3.8351054876611032`*^9, 
   3.8353158879494085`*^9, 3.8354436922138786`*^9, 3.8354479957539635`*^9, 
   3.8354619739868293`*^9, 3.8354623076695504`*^9, 3.835525552801388*^9, 
   3.8355564105271688`*^9, 3.8355614115690393`*^9, 3.835573937482461*^9, 
   3.83564146322955*^9, 3.8356443152950563`*^9, 3.8356445085190477`*^9, 
   3.8357226312472095`*^9, 3.8357233711695027`*^9, {3.8357234542269926`*^9, 
   3.8357234555344996`*^9}, 3.835723743384597*^9, 3.8357237761193094`*^9, 
   3.8357238656180744`*^9, {3.8357239067522345`*^9, 3.8357239104122314`*^9}, 
   3.835724032037066*^9, 3.835786320668913*^9, {3.835786417726038*^9, 
   3.835786419700776*^9}, 3.835787368354137*^9, 3.8357942285573*^9, 
   3.835811510674057*^9, 3.8358118801513004`*^9, 3.8358125730113955`*^9, 
   3.8358156782179956`*^9, 3.8358157335302873`*^9, 3.8358170659035892`*^9, {
   3.8358171087198524`*^9, 3.83581711726972*^9}, 3.8358266072321*^9, 
   3.835866029465317*^9, 3.835866061417843*^9, 3.8358663903413773`*^9, 
   3.835866777580254*^9, 3.835868544838743*^9, 3.8358779827052937`*^9, 
   3.8360096254056816`*^9, 3.8360752127376184`*^9, 3.8360785208696404`*^9, 
   3.8367651853871803`*^9, 3.83676523050248*^9, {3.836765278158258*^9, 
   3.8367652988646097`*^9}, 3.836765332154428*^9, 3.836765545538151*^9, {
   3.836766678792736*^9, 3.8367667034601088`*^9}, 3.836767829319202*^9, {
   3.836767860873658*^9, 3.836767875337943*^9}, 3.836768131807641*^9, 
   3.8367684884437227`*^9, {3.836768633844153*^9, 3.836768675967287*^9}, 
   3.836769234795588*^9, 3.8367693455849237`*^9, 3.83683150897174*^9, {
   3.8368315442892857`*^9, 3.836831563417232*^9}, {3.836831683540531*^9, 
   3.836831701509685*^9}, {3.8368318843722763`*^9, 3.836831905350696*^9}, 
   3.83683197923059*^9, 3.836832135195966*^9, {3.836832269336241*^9, 
   3.836832282108596*^9}, {3.836832352620256*^9, 3.8368324309489603`*^9}, {
   3.836832541477436*^9, 3.8368325557515783`*^9}, {3.8368329020539703`*^9, 
   3.836832949850177*^9}, {3.8368329814530888`*^9, 3.83683300980116*^9}, 
   3.836833398371729*^9, {3.836833431374062*^9, 3.8368335164976597`*^9}, 
   3.8370061065760717`*^9, 3.8370061983610773`*^9, 3.837006245984907*^9, 
   3.837006291765271*^9, 3.837007789146432*^9, 3.837007965361272*^9, {
   3.8370207062937107`*^9, 3.837020747290618*^9}, {3.837020900718615*^9, 
   3.837020943994644*^9}, {3.8370210353321047`*^9, 3.83702105976714*^9}, 
   3.837021142649694*^9, 3.8371100186551113`*^9, 3.8371101578348494`*^9, 
   3.837110203704653*^9, 3.837110262752492*^9},
 CellLabel->
  "Out[623]=",ExpressionUUID->"ea75a569-d711-4999-a3f0-838334e81d00"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pH", ",", 
             RowBox[{"vvavg", "[", 
              RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pH", ",", "6", ",", "8", ",", "0.1"}], "}"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pH", ",", 
             RowBox[{"cvavg", "[", 
              RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pH", ",", "6", ",", "8", ",", "0.1"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<pH\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<v(m/s)\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            "None"}], "]"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     "\"\<Plot-5: Average velocity as functuion of pH.\>\"", ",", "Bottom", 
     ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", "18"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"electrolyte", ",", 
       RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], ",", 
     "CheckboxBar"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"inputvoltage", ",", "0.05", ",", "0.4", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.827545677890122*^9, 3.827545777504634*^9}, {
   3.827545815716917*^9, 3.8275458405385017`*^9}, {3.8275459071483383`*^9, 
   3.8275459135822763`*^9}, {3.827545945237362*^9, 3.827546153992543*^9}, {
   3.827546410762834*^9, 3.827546452826749*^9}, {3.827546484787508*^9, 
   3.827546523618882*^9}, {3.82754673935571*^9, 3.827546749102056*^9}, {
   3.827549748330501*^9, 3.827549748975326*^9}, {3.827832482597475*^9, 
   3.8278326146469736`*^9}, {3.8278326708580914`*^9, 
   3.8278328793289504`*^9}, {3.827832911301385*^9, 3.8278329127934656`*^9}, {
   3.831522674879528*^9, 3.8315226767826805`*^9}, {3.8317351560244613`*^9, 
   3.8317351590730352`*^9}, {3.8317428348687353`*^9, 3.83174293800959*^9}, {
   3.831742970714954*^9, 3.831742971958953*^9}, {3.831743031153859*^9, 
   3.8317430316994314`*^9}, {3.8317430625071125`*^9, 3.831743079265597*^9}, {
   3.8317431480515013`*^9, 3.831743152668185*^9}, {3.83174507646271*^9, 
   3.831745079503648*^9}, {3.831745662621972*^9, 3.8317456662877593`*^9}, {
   3.8317480390512967`*^9, 3.831748197737151*^9}, {3.831748262654934*^9, 
   3.8317482939403157`*^9}, {3.8317483467878275`*^9, 
   3.8317484369340086`*^9}, {3.8317487020700736`*^9, 
   3.8317487082728243`*^9}, {3.831771889518196*^9, 3.831771952065395*^9}, {
   3.8317724146417637`*^9, 3.8317724229793496`*^9}, {3.8323787672227736`*^9, 
   3.8323787727206774`*^9}, {3.833120178723198*^9, 3.8331201811845207`*^9}, 
   3.8339201453144846`*^9, {3.834189310337159*^9, 3.8341893417922363`*^9}, {
   3.8341901084408913`*^9, 3.834190109153987*^9}, {3.835038922860554*^9, 
   3.8350389508444614`*^9}, {3.8350389916558933`*^9, 
   3.8350389982685814`*^9}, {3.8350451507197886`*^9, 3.835045151277362*^9}, {
   3.835815756537589*^9, 3.835815794019517*^9}, {3.83581689663208*^9, 
   3.8358168998042383`*^9}, 3.8358660891623363`*^9, 3.8358777592288847`*^9},
 CellLabel->
  "In[624]:=",ExpressionUUID->"bee1135c-38b5-47a8-9144-8a50f2e80369"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular"}, $CellContext`inputvoltage$$ = 0.05, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {
      Hold[$CellContext`inputvoltage$$], 0.05, 0.4}}, Typeset`size$$ = {
    625., {215., 192.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`inputvoltage$$ = 0.05}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          Table[{$CellContext`pH, 
            $CellContext`vvavg[$CellContext`pH, \
$CellContext`inputvoltage$$]}, {$CellContext`pH, 6, 8, 0.1}], 
          Table[{$CellContext`pH, 
            $CellContext`cvavg[$CellContext`pH, \
$CellContext`inputvoltage$$]}, {$CellContext`pH, 6, 8, 0.1}]}, AxesLabel -> {
           Style["pH", Bold, 18], 
           Style["v(m/s)", Bold, 18]}, AxesStyle -> Directive[Bold, 18], 
         ImageSize -> 500, PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-5: Average velocity as functuion of pH.", Bottom, LabelStyle -> 
        Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {$CellContext`inputvoltage$$, 0.05, 0.4, Appearance -> 
         "Labeled"}}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{682., {270., 277.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`vvavg[7, 0.05] = 
       0.04228238730609436, $CellContext`vvavg[7, 0.1] = 
       0.042383259333478814`, $CellContext`vvavg[7, 0.15000000000000002`] = 
       0.04248397220083196, $CellContext`vvavg[7, 0.2] = 
       0.04258452624013276, $CellContext`vvavg[7, 0.25] = 
       0.042684921782462804`, $CellContext`vvavg[7, 0.3] = 
       0.04278515915801046, $CellContext`vvavg[7, 0.35000000000000003`] = 
       0.04288523869607375, $CellContext`vvavg[7, 0.4] = 
       0.042985160725062144`, $CellContext`vvavg[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := ($CellContext`vvavg[$CellContext`pH, $CellContext`V0] = 
        NIntegrate[(($CellContext`vvelocityprop[($CellContext`t/$CellContext`\
valfa[$CellContext`pH, $CellContext`V0])/
                24, $CellContext`pH, $CellContext`V0]/24 + 
             1)/$CellContext`valfa[$CellContext`pH, $CellContext`V0]) \
$CellContext`vbeta, {$CellContext`t, 0, 
            24 $CellContext`vdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`valfa[$CellContext`pH, $CellContext`V0]}]/(
         24 $CellContext`vdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`valfa[$CellContext`pH, $CellContext`V0])), \
$CellContext`vvelocityprop[3.787007288822752, 7, 0.05] = 
       0.0034207706663649928`, $CellContext`vvelocityprop[
        3.7892604803807766`, 7, 0.1] = 
       0.006841541332468912, $CellContext`vvelocityprop[
        3.7915133993113734`, 7, 0.15000000000000002`] = 
       0.010262311998123526`, $CellContext`vvelocityprop[
        3.7937660457415916`, 7, 0.2] = 
       0.013683082664532834`, $CellContext`vvelocityprop[
        3.796018419798366, 7, 0.25] = 
       0.017103853330831174`, $CellContext`vvelocityprop[
        3.798270521608512, 7, 0.3] = 
       0.020524623997006785`, $CellContext`vvelocityprop[
        3.800522351298734, 7, 0.35000000000000003`] = 
       0.023945394662945263`, $CellContext`vvelocityprop[
        3.802773908995617, 7, 0.4] = 
       0.02736616532910269, $CellContext`vvelocityprop[
        161872.92057587206` $CellContext`t, 7, 0.4] = (-282.90690871403024`) (
         3.6309307634443417` - (16.523476183322085` 
          E^(195916.4556958388 $CellContext`t))/(-0.01209150628978157 + 
         4.550754960595208 
          E^(195916.4556958388 $CellContext`t))), $CellContext`vvelocityprop[
        161980.39233535161` $CellContext`t, 7, 
         0.35000000000000003`] = (-282.719203876364) (
         3.6333414354474636` - (16.539929004648705` 
          E^(196176.6904006899 $CellContext`t))/(-0.010587092393553882` + 
         4.5522638867028835` 
          E^(196176.6904006899 $CellContext`t))), $CellContext`vvelocityprop[
        162088.00700362353` $CellContext`t, 7, 0.3] = (-282.5314988517809) (
         3.6357553130017584` - (16.556410998890527` 
          E^(196437.44421243016` $CellContext`t))/(-0.009080679534955845 + 
         4.5537748207871545` 
          E^(196437.44421243016` $CellContext`t))), \
$CellContext`vvelocityprop[
        162195.76486613846` $CellContext`t, 7, 
         0.25] = (-282.34379363990604`) (
         3.6381724025100994` - (16.5729222388886 
          E^(196698.71851333405` $CellContext`t))/(-0.007572263724214173 + 
         4.555287766861839 
          E^(196698.71851333405` $CellContext`t))), \
$CellContext`vvelocityprop[
        162303.6662091087 $CellContext`t, 7, 0.2] = (-282.15608824036315`) (
         3.640592710392442 - (16.58946279771713 
          E^(196960.51469028305` $CellContext`t))/(-0.006061840960922792 + 
         4.556802728951475 
          E^(196960.51469028305` $CellContext`t))), \
$CellContext`vvelocityprop[
        162411.71131951013` $CellContext`t, 7, 
         0.15000000000000002`] = (-281.9683826527753) (
         3.6430162430858704` - (16.60603274868426 
          E^(197222.8341347829 $CellContext`t))/(-0.004549407234007335 + 
         4.558319711091345 
          E^(197222.8341347829 $CellContext`t))), $CellContext`vvelocityprop[
        162519.90048508515` $CellContext`t, 7, 0.1] = (-281.7806768767645) (
         3.6454430070446615` - (16.622632165333094` 
          E^(197485.67824298263` $CellContext`t))/(-0.0030349585216895617` + 
         4.5598387173275166` 
          E^(197485.67824298263` $CellContext`t))), \
$CellContext`vvelocityprop[
        162628.23399434512` $CellContext`t, 7, 
         0.05] = (-281.59297091195174`) (
         3.6478730087403406` - (16.63926112144254 
          E^(197749.04841569328` $CellContext`t))/(-0.0015184907914515915` + 
         4.561359751716878 
          E^(197749.04841569328` $CellContext`t))), $CellContext`vvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] (
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`v\[Mu]3[7, 0.05] = 
       0.9119682521850851, $CellContext`v\[Mu]3[7, 0.1] = 
       0.9113607517611654, $CellContext`v\[Mu]3[7, 0.15000000000000002`] = 
       0.9107540607714676, $CellContext`v\[Mu]3[7, 0.2] = 
       0.9101481775981105, $CellContext`v\[Mu]3[7, 0.25] = 
       0.9095431006275249, $CellContext`v\[Mu]3[7, 0.3] = 
       0.9089388282504396, $CellContext`v\[Mu]3[7, 0.35000000000000003`] = 
       0.9083353588618659, $CellContext`v\[Mu]3[7, 0.4] = 
       0.9077326908610854, $CellContext`v\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRl[$CellContext`pH] (
          24/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`ivcRl[7] = 1.5454404198356032`*^8, $CellContext`ivcRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`ivckeff[$CellContext`pH] + \
$CellContext`ivcG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`uLm = 5.4*^-9, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`ivckeff[7] = 
       1.7681844474093507`, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`ivclambda^2 $CellContext`CylRadd)/($CellContext`ivcepsilon \
$CellContext`R $CellContext`ivcT (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`ivccBulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`ivccBulk]) (
           1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[
            1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`ivcT = 
       310, $CellContext`z = {1, 1, -1, -2}, $CellContext`um = {
        9.236401606278588*^-13, 7.786293805158486*^-13, 
        1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivcZe[7, 0.05] = 
       4.0670900535391555`*^9, $CellContext`ivcZe[7, 0.1] = 
       4.06980111930194*^9, $CellContext`ivcZe[7, 0.15000000000000002`] = 
       4.072512182337827*^9, $CellContext`ivcZe[7, 0.2] = 
       4.0752232426522937`*^9, $CellContext`ivcZe[7, 0.25] = 
       4.077934300250798*^9, $CellContext`ivcZe[7, 0.3] = 
       4.080645355138787*^9, $CellContext`ivcZe[7, 0.35000000000000003`] = 
       4.083356407321691*^9, $CellContext`ivcZe[7, 0.4] = 
       4.0860674568049264`*^9, $CellContext`ivcZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`ivcZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 + 
            80 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) 
           Sqrt[(-5625) Pi^4 $CellContext`ivcRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`ivcRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 - 18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`ivcb 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`ivcb^2 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`ivcb^3 
              Pi^8 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`ivcb^4 
              Pi^8 $CellContext`ivcRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`ivcb = 
       0.4275963332672946, $CellContext`ivcRt[7] = 
       3.0089899796738666`*^6, $CellContext`ivcRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRt[$CellContext`pH] = \
$CellContext`ivclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH]])), $CellContext`ivcdeltak[
        7] = -0.006266587220405351, $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, \
$CellContext`ivcEp[
        7, 3.571333130226815] = -0.030141710811672343`, $CellContext`ivcEp[
        7, 4.273266990626408] = -0.01372097395564544, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`vwo[7, 0.05] = 0.2924367737707741, $CellContext`vwo[7, 0.1] = 
       0.4135680516032614, $CellContext`vwo[7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`vwo[7, 0.2] = 
       0.5848735475415483, $CellContext`vwo[7, 0.25] = 
       0.6539085052721784, $CellContext`vwo[7, 0.3] = 
       0.7163208777641159, $CellContext`vwo[7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`vwo[7, 0.4] = 
       0.8271361032065228, $CellContext`vwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`vgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`ivcZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`vgamma[7, 0.05] = 
       0.00011001334961716237`, $CellContext`vgamma[7, 0.1] = 
       0.0001099767012523908, $CellContext`vgamma[7, 0.15000000000000002`] = 
       0.00010994008952566853`, $CellContext`vgamma[7, 0.2] = 
       0.00010990351437592842`, $CellContext`vgamma[7, 0.25] = 
       0.00010986697574224596`, $CellContext`vgamma[7, 0.3] = 
       0.00010983047356383867`, $CellContext`vgamma[7, 0.35000000000000003`] = 
       0.00010979400778006591`, $CellContext`vgamma[7, 0.4] = 
       0.00010975757833042813`, $CellContext`vgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`vgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`ivcb $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`ivcCo))), $CellContext`ivcCo = 
       6.299542694592175*^-17, $CellContext`v\[Mu]2[7, 0.05] = 
       0.0044390312583152125`, $CellContext`v\[Mu]2[7, 0.1] = 
       0.004436074232821443, $CellContext`v\[Mu]2[7, 0.15000000000000002`] = 
       0.00443312114727164, $CellContext`v\[Mu]2[7, 0.2] = 
       0.004430171993790721, $CellContext`v\[Mu]2[7, 0.25] = 
       0.0044272267645245915`, $CellContext`v\[Mu]2[7, 0.3] = 
       0.0044242854516400795`, $CellContext`v\[Mu]2[7, 0.35000000000000003`] = 
       0.004421348047324856, $CellContext`v\[Mu]2[7, 0.4] = 
       0.00441841454378738, $CellContext`v\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRt[$CellContext`pH] (
          6/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`valfa[7, 0.05] = 
       2.5620807435021085`*^-7, $CellContext`valfa[7, 0.1] = 
       2.5637885909541595`*^-7, $CellContext`valfa[7, 0.15000000000000002`] = 
       2.5654964366883895`*^-7, $CellContext`valfa[7, 0.2] = 
       2.5672042807082493`*^-7, $CellContext`valfa[7, 0.25] = 
       2.568912123017177*^-7, $CellContext`valfa[7, 0.3] = 
       2.5706199636186035`*^-7, $CellContext`valfa[7, 0.35000000000000003`] = 
       2.572327802515951*^-7, $CellContext`valfa[7, 0.4] = 
       2.57403563971263*^-7, $CellContext`valfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`valfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`vbeta = 1.08*^-8, $CellContext`vdecaytime[7, 0.05] = 
       3.787007288822752, $CellContext`vdecaytime[7, 0.1] = 
       3.789260480380777, $CellContext`vdecaytime[7, 0.15000000000000002`] = 
       3.7915133993113734`, $CellContext`vdecaytime[7, 0.2] = 
       3.7937660457415916`, $CellContext`vdecaytime[7, 0.25] = 
       3.796018419798366, $CellContext`vdecaytime[7, 0.3] = 
       3.7982705216085124`, $CellContext`vdecaytime[7, 0.35000000000000003`] = 
       3.8005223512987345`, $CellContext`vdecaytime[7, 0.4] = 
       3.802773908995617, $CellContext`vdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`v\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`v\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`v\[CapitalOmega][0, 7, 0.05] = 
       0.2924367737707741, $CellContext`v\[CapitalOmega][0, 7, 0.1] = 
       0.4135680516032614, $CellContext`v\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`v\[CapitalOmega][0, 7, 0.2] = 
       0.5848735475415483, $CellContext`v\[CapitalOmega][0, 7, 0.25] = 
       0.6539085052721784, $CellContext`v\[CapitalOmega][0, 7, 0.3] = 
       0.7163208777641159, $CellContext`v\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`v\[CapitalOmega][0, 7, 0.4] = 
       0.8271361032065228, $CellContext`v\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 0.2924367737707741 
        Sqrt[1/(E^(1.2159576695801135` $CellContext`w) (1 + 
           0.00033301395916212484` (1 - 
             E^((-1.2159576695801135`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       0.4135680516032614 
        Sqrt[1/(E^(1.215147669014887 $CellContext`w) (1 + 
           0.0006660279183242498 (1 - 
             E^((-1.215147669014887) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       0.5065153501725065 
        Sqrt[1/(E^(1.21433874769529 $CellContext`w) (1 + 
           0.000999041877486375 (1 - 
             E^((-1.21433874769529) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       0.5848735475415483 
        Sqrt[1/(E^(1.2135309034641473` $CellContext`w) (1 + 
           0.0013320558366484998` (1 - 
             E^((-1.2135309034641473`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       0.6539085052721784 
        Sqrt[1/(E^(1.212724134170033 $CellContext`w) (1 + 
           0.001665069795810624 (1 - 
             E^((-1.212724134170033) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       0.7163208777641159 
        Sqrt[1/(E^(1.2119184376672527` $CellContext`w) (1 + 
           0.0019980837549727487` (1 - 
             E^((-1.2119184376672527`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       0.7737149776075247 
        Sqrt[1/(E^(1.2111138118158211` $CellContext`w) (1 + 
           0.0023310977141348744` (1 - 
             E^((-1.2111138118158211`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       0.8271361032065228 
        Sqrt[1/(E^(1.2103102544814472` $CellContext`w) (1 + 
           0.0026641116732969996` (1 - 
             E^((-1.2103102544814472`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`v\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`vwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`vwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`cvavg[7, 0.05] = 
       0.030535658285810608`, $CellContext`cvavg[7, 0.1] = 
       0.0321162031881666, $CellContext`cvavg[7, 0.15000000000000002`] = 
       0.03372273223808049, $CellContext`cvavg[7, 0.2] = 
       0.03535600350184367, $CellContext`cvavg[7, 0.25] = 
       0.03701680349156999, $CellContext`cvavg[7, 0.3] = 
       0.038705948533786616`, $CellContext`cvavg[7, 0.35000000000000003`] = 
       0.04042428621744064, $CellContext`cvavg[7, 0.4] = 
       0.04217269692685021, $CellContext`cvavg[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := ($CellContext`cvavg[$CellContext`pH, $CellContext`V0] = 
        NIntegrate[(($CellContext`cvelocityprop[($CellContext`t/$CellContext`\
calfa[$CellContext`pH, $CellContext`V0])/
                24, $CellContext`pH, $CellContext`V0]/24 + 
             1)/$CellContext`calfa[$CellContext`pH, $CellContext`V0]) \
$CellContext`cbeta, {$CellContext`t, 0, 
            24 $CellContext`cdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`calfa[$CellContext`pH, $CellContext`V0]}]/(
         24 $CellContext`cdecaytime[$CellContext`pH, $CellContext`V0] \
$CellContext`calfa[$CellContext`pH, $CellContext`V0])), \
$CellContext`cvelocityprop[3.4842608378422733`, 7, 0.4] = 
       0.39475615834593086`, $CellContext`cvelocityprop[
        3.5215444119524197`, 7, 0.35000000000000003`] = 
       0.3454116385527492, $CellContext`cvelocityprop[
        3.5589065009731584`, 7, 0.3] = 
       0.29606711875952163`, $CellContext`cvelocityprop[
        3.596347678418094, 7, 0.25] = 
       0.24672259896618062`, $CellContext`cvelocityprop[
        3.633868524017766, 7, 0.2] = 
       0.19737807917298386`, $CellContext`cvelocityprop[
        3.6714696238609497`, 7, 0.15000000000000002`] = 
       0.14803355937974372`, $CellContext`cvelocityprop[
        3.7091515705369424`, 7, 0.1] = 
       0.09868903958657457, $CellContext`cvelocityprop[
        3.746914963279047, 7, 0.05] = 
       0.0493445197932297, $CellContext`cvelocityprop[
        112826.94188503677` $CellContext`t, 7, 
         0.05] = (-296.80867822197786`) (
         3.683600184740566 - (17.037687837128203` 
          E^(138536.4479904782 $CellContext`t))/(-0.02078128244465737 + 
         4.625281513370365 
          E^(138536.4479904782 $CellContext`t))), $CellContext`cvelocityprop[
        113865.70946632024` $CellContext`t, 7, 0.1] = (-294.1009689895351) (
         3.717514109822549 - (17.430820894388983` 
          E^(141099.1271886668 $CellContext`t))/(-0.04194522034625339 + 
         4.688837857624439 
          E^(141099.1271886668 $CellContext`t))), $CellContext`cvelocityprop[
        114923.7975052713 $CellContext`t, 7, 
         0.15000000000000002`] = (-291.39322068773134`) (
         3.7520588136905597` - (17.835696751972716` 
          E^(143733.61577748077` $CellContext`t))/(-0.06350248944981075 + 
         4.75357600656301 
          E^(143733.61577748077` $CellContext`t))), \
$CellContext`cvelocityprop[
        116001.75052942368` $CellContext`t, 7, 0.2] = (-288.685432210193) (
         3.787252074205901 - (18.25277218450188 
          E^(146442.62343469175` $CellContext`t))/(-0.08546416668043506 + 
         4.819529259437811 
          E^(146442.62343469175` $CellContext`t))), \
$CellContext`cvelocityprop[
        117100.13374024625` $CellContext`t, 7, 0.25] = (-285.9776024082895) (
         3.8231123441973063` - (18.68252611796245 
          E^(149228.98893649696` $CellContext`t))/(-0.10784174918268974` + 
         4.886732179429322 
          E^(149228.98893649696` $CellContext`t))), \
$CellContext`cvelocityprop[
        118219.53400454563` $CellContext`t, 7, 0.3] = (-283.2697300890903) (
         3.8596587838284835` - (19.12546092395036 
          E^(152095.68761358486` $CellContext`t))/(-0.13064717445559282` + 
         4.955220654241197 
          E^(152095.68761358486` $CellContext`t))), \
$CellContext`cvelocityprop[
        119360.56090352143` $CellContext`t, 7, 
         0.35000000000000003`] = (-280.5618140132055) (
         3.896911294847916 - (19.582103802743198` 
          E^(155045.83931477173` $CellContext`t))/(-0.1538928416575685 + 
         5.025031960217464 
          E^(155045.83931477173` $CellContext`t))), \
$CellContext`cvelocityprop[
        120523.84784342874` $CellContext`t, 7, 0.4] = (-277.8538528924964) (
         3.934890556850027 - (20.053008262222097` 
          E^(158082.71691811242` $CellContext`t))/(-0.17759163416151183` + 
         5.096204830224046 
          E^(158082.71691811242` $CellContext`t))), $CellContext`cvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`c\[Mu]3[7, 0.05] = 
       0.9209000461851415, $CellContext`c\[Mu]3[7, 0.1] = 
       0.9293785274556372, $CellContext`c\[Mu]3[7, 0.15000000000000002`] = 
       0.9380147034226399, $CellContext`c\[Mu]3[7, 0.2] = 
       0.9468130185514753, $CellContext`c\[Mu]3[7, 0.25] = 
       0.9557780860493266, $CellContext`c\[Mu]3[7, 0.3] = 
       0.9649146959571209, $CellContext`c\[Mu]3[7, 0.35000000000000003`] = 
       0.974227823711979, $CellContext`c\[Mu]3[7, 0.4] = 
       0.9837226392125068, $CellContext`c\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRl[$CellContext`pH] (
          24/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`iccRl[7] = 1.460980461711672*^8, $CellContext`iccRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`icckeff[$CellContext`pH] + \
$CellContext`iccG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`icckeff[7] = 
       2.0085564758994368`, $CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`icclambda^2 $CellContext`CylRadd)/($CellContext`iccepsilon \
$CellContext`R $CellContext`iccT (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`icccbulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`icccbulk]) (
           1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[
             1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`iccT = 
       310, $CellContext`icccbulk = {140, 12, 4, 74}, $CellContext`iccG = 
       0.16270373975440133`, $CellContext`iccZe[7, 0.05] = 
       3.8075284311616607`*^9, $CellContext`iccZe[7, 0.1] = 
       3.772793328577719*^9, $CellContext`iccZe[7, 0.15000000000000002`] = 
       3.7380577248032327`*^9, $CellContext`iccZe[7, 0.2] = 
       3.7033216056453953`*^9, $CellContext`iccZe[7, 0.25] = 
       3.668584956369312*^9, $CellContext`iccZe[7, 0.3] = 
       3.633847761671804*^9, $CellContext`iccZe[7, 0.35000000000000003`] = 
       3.5991100056537004`*^9, $CellContext`iccZe[7, 0.4] = 
       3.5643716717904663`*^9, $CellContext`iccZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`iccZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`iccRl[$CellContext`pH]^2 + 
            80 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`iccRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`iccRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 - 18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`iccb 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`iccb 
             
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`iccb^2 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`iccb^3 
              Pi^8 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`iccb^4 
              Pi^8 $CellContext`iccRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`iccb = -6.168064974156344, \
$CellContext`iccRt[7] = 2.672546822340888*^6, $CellContext`iccRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRt[$CellContext`pH] = \
$CellContext`icclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH]])), $CellContext`iccdeltak[
        7] = -0.44640620869034486`, $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           
           1)), $CellContext`iccalfa2 = -45.80817013059013, \
$CellContext`iccEP[
        7, 5.313507035908096] = -0.020604582068995035`, $CellContext`iccEP[
        7, 6.336424152326247] = -0.006806232005309268, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`cwo[7, 0.05] = 1.110681320105488, $CellContext`cwo[7, 0.1] = 
       1.5707405863676336`, $CellContext`cwo[7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`cwo[7, 0.2] = 
       2.2213626402109754`, $CellContext`cwo[7, 0.25] = 
       2.4835589330950745`, $CellContext`cwo[7, 0.3] = 
       2.720602501099272, $CellContext`cwo[7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`cwo[7, 0.4] = 
       3.141481172735267, $CellContext`cwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`cgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`iccZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`cgamma[
        7, 0.05] = -7.88225965828913*^-6, $CellContext`cgamma[
        7, 0.1] = -7.918461456000264*^-6, $CellContext`cgamma[
        7, 0.15000000000000002`] = -7.955167218132837*^-6, \
$CellContext`cgamma[7, 0.2] = -7.992388759854252*^-6, $CellContext`cgamma[
        7, 0.25] = -8.030138288239181*^-6, $CellContext`cgamma[
        7, 0.3] = -8.068428419162388*^-6, $CellContext`cgamma[
        7, 0.35000000000000003`] = -8.10727219509115*^-6, $CellContext`cgamma[
        7, 0.4] = -8.146683103834562*^-6, $CellContext`cgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`cgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`iccCo $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`iccb $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`iccCo))), $CellContext`iccCo = 
       9.699130134892227*^-17, $CellContext`c\[Mu]2[7, 0.05] = 
       0.004211467156176436, $CellContext`c\[Mu]2[7, 0.1] = 
       0.004250241011767895, $CellContext`c\[Mu]2[7, 0.15000000000000002`] = 
       0.004289736037955221, $CellContext`c\[Mu]2[7, 0.2] = 
       0.00432997256020134, $CellContext`c\[Mu]2[7, 0.25] = 
       0.0043709716756607335`, $CellContext`c\[Mu]2[7, 0.3] = 
       0.004412755290185318, $CellContext`c\[Mu]2[7, 0.35000000000000003`] = 
       0.004455346157482305, $CellContext`c\[Mu]2[7, 0.4] = 
       0.0044987679205716604`, $CellContext`c\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRt[$CellContext`pH] (
          6/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`calfa[7, 0.05] = 
       3.6929713746138985`*^-7, $CellContext`calfa[7, 0.1] = 
       3.659281346592851*^-7, $CellContext`calfa[7, 0.15000000000000002`] = 
       3.625590832460571*^-7, $CellContext`calfa[7, 0.2] = 
       3.591899818451272*^-7, $CellContext`calfa[7, 0.25] = 
       3.558208290273388*^-7, $CellContext`calfa[7, 0.3] = 
       3.5245162330841663`*^-7, $CellContext`calfa[7, 0.35000000000000003`] = 
       3.490823631462794*^-7, $CellContext`calfa[7, 0.4] = 
       3.45713046938191*^-7, $CellContext`calfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`calfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`iccCo $CellContext`iccZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`cbeta = 1.08*^-8, $CellContext`cdecaytime[7, 0.05] = 
       3.7469149632790475`, $CellContext`cdecaytime[7, 0.1] = 
       3.7091515705369424`, $CellContext`cdecaytime[7, 0.15000000000000002`] = 
       3.67146962386095, $CellContext`cdecaytime[7, 0.2] = 
       3.6338685240177666`, $CellContext`cdecaytime[7, 0.25] = 
       3.5963476784180934`, $CellContext`cdecaytime[7, 0.3] = 
       3.5589065009731584`, $CellContext`cdecaytime[7, 0.35000000000000003`] = 
       3.5215444119524197`, $CellContext`cdecaytime[7, 0.4] = 
       3.4842608378422733`, $CellContext`cdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`c\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`c\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`c\[CapitalOmega][0, 7, 0.05] = 
       1.110681320105488, $CellContext`c\[CapitalOmega][0, 7, 0.1] = 
       1.5707405863676336`, $CellContext`c\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`c\[CapitalOmega][0, 7, 0.2] = 
       2.2213626402109754`, $CellContext`c\[CapitalOmega][0, 7, 0.25] = 
       2.4835589330950745`, $CellContext`c\[CapitalOmega][0, 7, 0.3] = 
       2.720602501099272, $CellContext`c\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`c\[CapitalOmega][0, 7, 0.4] = 
       3.141481172735267, $CellContext`c\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 1.110681320105488 
        Sqrt[1/(E^(1.2278667282468554` $CellContext`w) (1 + 
           0.004513254729597313 (1 - 
             E^((-1.2278667282468554`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       1.5707405863676336` 
        Sqrt[1/(E^(1.2391713699408495` $CellContext`w) (1 + 
           0.009026509459194622 (1 - 
             E^((-1.2391713699408495`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       1.9237564774403768` 
        Sqrt[1/(E^(1.2506862712301865` $CellContext`w) (1 + 
           0.013539764188791938` (1 - 
             E^((-1.2506862712301865`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       2.2213626402109754` 
        Sqrt[1/(E^(1.2624173580686335` $CellContext`w) (1 + 
           0.01805301891838925 (1 - 
             E^((-1.2624173580686335`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       2.4835589330950745` 
        Sqrt[1/(E^(1.274370781399102 $CellContext`w) (1 + 
           0.02256627364798656 (1 - 
             E^((-1.274370781399102) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       2.720602501099272 
        Sqrt[1/(E^(1.2865529279428278` $CellContext`w) (1 + 
           0.027079528377583865` (1 - 
             E^((-1.2865529279428278`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       2.9385865588440443` 
        Sqrt[1/(E^(1.298970431615972 $CellContext`w) (1 + 
           0.03159278310718118 (1 - 
             E^((-1.298970431615972) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       3.141481172735267 
        Sqrt[1/(E^(1.3116301856166757` $CellContext`w) (1 + 
           0.036106037836778494` (1 - 
             E^((-1.3116301856166757`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`c\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`cwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`cwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))])}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8350455683239365`*^9, 3.8350455906666417`*^9}, {
   3.8350463796259956`*^9, 3.8350463802932415`*^9}, 3.835104405869277*^9, 
   3.835105514705654*^9, 3.83531589030812*^9, 3.8354436997244873`*^9, 
   3.835447996421183*^9, 3.835461974940279*^9, 3.8354623083656883`*^9, 
   3.8355255540361004`*^9, 3.8355564114198246`*^9, 3.8355614121953654`*^9, 
   3.8355739382285204`*^9, 3.8356414657422323`*^9, 3.8356443159752398`*^9, 
   3.8356445090556064`*^9, 3.8357226318565807`*^9, 3.835723371679109*^9, {
   3.8357234629210596`*^9, 3.835723463899471*^9}, 3.835723743891239*^9, 
   3.835723781427001*^9, 3.8357238662134523`*^9, {3.8357239137384195`*^9, 
   3.835723914684348*^9}, 3.8357240326205387`*^9, 3.835786321233698*^9, 
   3.8357864265520287`*^9, 3.835787368957518*^9, {3.835787403202119*^9, 
   3.8357874206978483`*^9}, 3.835794229264616*^9, 3.8358115113315725`*^9, 
   3.8358118809238205`*^9, 3.835812573777501*^9, 3.8358157950045304`*^9, 
   3.8358169024150133`*^9, 3.8358170663444147`*^9, 3.835826607629137*^9, 
   3.83586609003397*^9, 3.835866390815506*^9, 3.835866838774308*^9, 
   3.835868568034824*^9, 3.835877983110176*^9, 3.8360096260710435`*^9, 
   3.8360752128234243`*^9, 3.836078520935459*^9, 3.836765185442624*^9, 
   3.8367652305539293`*^9, {3.836765278212635*^9, 3.836765298920022*^9}, 
   3.836765332209744*^9, 3.8367655455953007`*^9, {3.8367666788470592`*^9, 
   3.836766703515737*^9}, 3.8367678300845137`*^9, 3.836767861297916*^9, {
   3.836768634612698*^9, 3.8367686764089003`*^9}, 3.8367692355709867`*^9, 
   3.8367693459650393`*^9, 3.836831509657147*^9, {3.836831544674613*^9, 
   3.8368315638132687`*^9}, 3.836831683883028*^9, {3.836831884827958*^9, 
   3.836831905765935*^9}, 3.836832135678039*^9, 3.8368322697311287`*^9, {
   3.8368323530243273`*^9, 3.836832431410467*^9}, {3.836832541818668*^9, 
   3.836832556116654*^9}, {3.836832902716201*^9, 3.836832950188551*^9}, {
   3.83683298184198*^9, 3.836833010237528*^9}, 3.836833399148806*^9, {
   3.836833431790017*^9, 3.836833516830969*^9}, 3.837006107507991*^9, 
   3.8370061987757874`*^9, 3.8370062464693213`*^9, 3.837006292223732*^9, 
   3.837007790057158*^9, 3.837007966230914*^9, {3.837020707077389*^9, 
   3.837020729439398*^9}, {3.837020901462489*^9, 3.837020924112097*^9}, {
   3.83702103581277*^9, 3.837021060261958*^9}, 3.8370211430280848`*^9, 
   3.837110019127351*^9, 3.837110158229477*^9, 3.837110204097905*^9, 
   3.8371102631392403`*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"713f66c5-3b83-4a29-8df8-4d961de5a0e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             StyleBox["{",
              Background->RGBColor[1, 1, 0.85]], 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"vdecaytime", "[", 
                RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
               RowBox[{"valfa", "[", 
                RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"vvelocityprop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"vdecaytime", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ")"}], "/", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "/", "24"}],
                     "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", "pH", ",", "inputvoltage"}], 
                    "]"}], "/", "24"}], "+", "1"}], ")"}], "/", 
                RowBox[{"valfa", "[", 
                 RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "*", 
               "vbeta"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"cdecaytime", "[", 
                RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
               RowBox[{"calfa", "[", 
                RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cvelocityprop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"cdecaytime", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ")"}], "/", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "/", "24"}],
                     "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", "pH", ",", "inputvoltage"}], 
                    "]"}], "/", "24"}], "+", "1"}], ")"}], "/", 
                RowBox[{"calfa", "[", 
                 RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "*", 
               "cbeta"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<t(\[Mu]s)\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<v(m/s)\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Bold", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Dashed", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Orange", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      "\"\<Plot-6: Soliton propagation velocity as function of time.\>\"", 
      ",", "Bottom", ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"electrolyte", ",", 
        RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], ",",
       "CheckboxBar"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pH", ",", "7"}], "}"}], ",", "6", ",", "8", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"inputvoltage", ",", "0.05", ",", "0.4", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.748824654898789*^9, 3.748824680966621*^9}, {
   3.7488321708159447`*^9, 3.7488322344407377`*^9}, 3.748832517647225*^9, 
   3.748832573669717*^9, {3.748833705164372*^9, 3.748833726789785*^9}, {
   3.7495592816229477`*^9, 3.7495592846921797`*^9}, {3.749559336706027*^9, 
   3.74955935059945*^9}, {3.749562454002803*^9, 3.7495624562632303`*^9}, {
   3.7495644967448597`*^9, 3.749564498904087*^9}, {3.749564728823124*^9, 
   3.749564736084845*^9}, {3.749604321067005*^9, 3.749604342693465*^9}, {
   3.749604718010721*^9, 3.749604735430194*^9}, {3.749855258236084*^9, 
   3.749855260594097*^9}, 3.7498572500459137`*^9, {3.7506926984301033`*^9, 
   3.750692727373818*^9}, {3.750695368179131*^9, 3.7506953701129923`*^9}, {
   3.826918426670405*^9, 3.826918427333725*^9}, {3.826933736180458*^9, 
   3.826933748953475*^9}, {3.827532366699237*^9, 3.8275323696609497`*^9}, {
   3.82753279435012*^9, 3.827532797113705*^9}, {3.827533310808897*^9, 
   3.827533400960047*^9}, {3.827533448028886*^9, 3.82753347201412*^9}, 
   3.827533538560639*^9, 3.827533581476437*^9, {3.827533746665225*^9, 
   3.8275339065203085`*^9}, {3.827546869550803*^9, 3.827546934201997*^9}, 
   3.827546995962942*^9, {3.827547069970522*^9, 3.827547129619396*^9}, {
   3.827547191352332*^9, 3.827547340712393*^9}, {3.827547399739236*^9, 
   3.827547438357624*^9}, {3.827547484736396*^9, 3.8275474917769012`*^9}, {
   3.8275475858600597`*^9, 3.827547679241955*^9}, {3.82754974238725*^9, 
   3.827549743140373*^9}, {3.827833177186914*^9, 3.8278332326878347`*^9}, {
   3.8278332637159567`*^9, 3.8278333529496098`*^9}, {3.827833391717603*^9, 
   3.827833401156827*^9}, {3.831522718847476*^9, 3.8315227205531354`*^9}, {
   3.83173516817052*^9, 3.8317351716851006`*^9}, {3.8317431662336435`*^9, 
   3.8317431707000465`*^9}, {3.831743247800027*^9, 3.8317433212669315`*^9}, {
   3.8317434020750427`*^9, 3.831743454066427*^9}, {3.8317435183339567`*^9, 
   3.831743615136506*^9}, {3.831743662835169*^9, 3.8317436647616515`*^9}, {
   3.831743737631897*^9, 3.8317437519038396`*^9}, {3.831743798559973*^9, 
   3.831743799854515*^9}, {3.831743855905405*^9, 3.83174386117436*^9}, {
   3.8317450854295025`*^9, 3.8317450907198353`*^9}, {3.831745649027628*^9, 
   3.83174565456089*^9}, {3.831748842831341*^9, 3.831748846022908*^9}, {
   3.8317489227319202`*^9, 3.831748963793816*^9}, {3.8317490235198803`*^9, 
   3.8317490240214877`*^9}, 3.8317490552168927`*^9, {3.831749114323254*^9, 
   3.8317491155569773`*^9}, {3.831749147470908*^9, 3.8317491487454653`*^9}, {
   3.831749248809582*^9, 3.831749271119276*^9}, {3.8317658077963185`*^9, 
   3.831765814782776*^9}, 3.831765946494006*^9, {3.8317719685293846`*^9, 
   3.83177201421047*^9}, {3.8317723886182485`*^9, 3.831772398868069*^9}, {
   3.832378777327148*^9, 3.8323787818655577`*^9}, {3.833120184203867*^9, 
   3.833120188824181*^9}, {3.8336712750276194`*^9, 3.833671279026219*^9}, 
   3.833920223088279*^9, {3.834189399189427*^9, 3.8341894282398367`*^9}, {
   3.834189465738778*^9, 3.834189485457656*^9}, {3.834190118609582*^9, 
   3.834190119216137*^9}, {3.835039290072844*^9, 3.8350393336844068`*^9}, {
   3.8350447669102783`*^9, 3.835044771484032*^9}, {3.8350451626706905`*^9, 
   3.8350451631888924`*^9}, {3.835815845394758*^9, 3.835815896483061*^9}, {
   3.8358169262942705`*^9, 3.835816929794391*^9}, 3.835866116295684*^9, 
   3.8358777869188623`*^9},
 CellLabel->
  "In[625]:=",ExpressionUUID->"05979366-87fd-4089-bd72-529cbd176afd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular"}, $CellContext`inputvoltage$$ = 0.05, $CellContext`pH$$ = 
    7, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {{
       Hold[$CellContext`pH$$], 7}, 6, 8}, {
      Hold[$CellContext`inputvoltage$$], 0.05, 0.4}}, Typeset`size$$ = {
    750., {209., 187.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`inputvoltage$$ = 
        0.05, $CellContext`pH$$ = 7}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          
          Table[{24 $CellContext`vdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
            10^6 (($CellContext`n - 1)/
             20), (($CellContext`vvelocityprop[(((
                    24 $CellContext`vdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
                    10^6 (($CellContext`n - 1)/
                    20))/$CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$])/24) 
                 10^(-6), $CellContext`pH$$, $CellContext`inputvoltage$$]/24 + 
              1)/$CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$]) $CellContext`vbeta}, {$CellContext`n, 1, 20}], 
          
          Table[{24 $CellContext`cdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
            10^6 (($CellContext`n - 1)/
             20), (($CellContext`cvelocityprop[(((
                    24 $CellContext`cdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
                    10^6 (($CellContext`n - 1)/
                    20))/$CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$])/24) 
                 10^(-6), $CellContext`pH$$, $CellContext`inputvoltage$$]/24 + 
              1)/$CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$]) $CellContext`cbeta}, {$CellContext`n, 1, 20}]}, 
         ImageSize -> 500, AxesLabel -> {
           Style["t(\[Mu]s)", Bold, 18], 
           Style["v(m/s)", Bold, 18]}, AxesStyle -> Directive[Bold, 18], 
         PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-6: Soliton propagation velocity as function of time.", Bottom, 
        LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {{$CellContext`pH$$, 7}, 6, 8, Appearance -> 
         "Labeled"}, {$CellContext`inputvoltage$$, 0.05, 0.4, Appearance -> 
         "Labeled"}}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{807., {277., 284.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`vdecaytime[7, 0.05] = 
       3.787007288822752, $CellContext`vdecaytime[7, 0.1] = 
       3.789260480380777, $CellContext`vdecaytime[7, 0.15000000000000002`] = 
       3.7915133993113734`, $CellContext`vdecaytime[7, 0.2] = 
       3.7937660457415916`, $CellContext`vdecaytime[7, 0.25] = 
       3.796018419798366, $CellContext`vdecaytime[7, 0.3] = 
       3.7982705216085124`, $CellContext`vdecaytime[7, 0.35000000000000003`] = 
       3.8005223512987345`, $CellContext`vdecaytime[7, 0.4] = 
       3.802773908995617, $CellContext`vdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`v\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`v\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`v\[CapitalOmega][0, 7, 0.05] = 
       0.2924367737707741, $CellContext`v\[CapitalOmega][0, 7, 0.1] = 
       0.4135680516032614, $CellContext`v\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`v\[CapitalOmega][0, 7, 0.2] = 
       0.5848735475415483, $CellContext`v\[CapitalOmega][0, 7, 0.25] = 
       0.6539085052721784, $CellContext`v\[CapitalOmega][0, 7, 0.3] = 
       0.7163208777641159, $CellContext`v\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`v\[CapitalOmega][0, 7, 0.4] = 
       0.8271361032065228, $CellContext`v\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 0.2924367737707741 
        Sqrt[1/(E^(1.2159576695801135` $CellContext`w) (1 + 
           0.00033301395916212484` (1 - 
             E^((-1.2159576695801135`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       0.4135680516032614 
        Sqrt[1/(E^(1.215147669014887 $CellContext`w) (1 + 
           0.0006660279183242498 (1 - 
             E^((-1.215147669014887) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       0.5065153501725065 
        Sqrt[1/(E^(1.21433874769529 $CellContext`w) (1 + 
           0.000999041877486375 (1 - 
             E^((-1.21433874769529) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       0.5848735475415483 
        Sqrt[1/(E^(1.2135309034641473` $CellContext`w) (1 + 
           0.0013320558366484998` (1 - 
             E^((-1.2135309034641473`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       0.6539085052721784 
        Sqrt[1/(E^(1.212724134170033 $CellContext`w) (1 + 
           0.001665069795810624 (1 - 
             E^((-1.212724134170033) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       0.7163208777641159 
        Sqrt[1/(E^(1.2119184376672527` $CellContext`w) (1 + 
           0.0019980837549727487` (1 - 
             E^((-1.2119184376672527`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       0.7737149776075247 
        Sqrt[1/(E^(1.2111138118158211` $CellContext`w) (1 + 
           0.0023310977141348744` (1 - 
             E^((-1.2111138118158211`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       0.8271361032065228 
        Sqrt[1/(E^(1.2103102544814472` $CellContext`w) (1 + 
           0.0026641116732969996` (1 - 
             E^((-1.2103102544814472`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`v\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`vwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`vwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`vwo[7, 0.05] = 
       0.2924367737707741, $CellContext`vwo[7, 0.1] = 
       0.4135680516032614, $CellContext`vwo[7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`vwo[7, 0.2] = 
       0.5848735475415483, $CellContext`vwo[7, 0.25] = 
       0.6539085052721784, $CellContext`vwo[7, 0.3] = 
       0.7163208777641159, $CellContext`vwo[7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`vwo[7, 0.4] = 
       0.8271361032065228, $CellContext`vwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`vgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`ivcZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`vgamma[7, 0.05] = 
       0.00011001334961716237`, $CellContext`vgamma[7, 0.1] = 
       0.0001099767012523908, $CellContext`vgamma[7, 0.15000000000000002`] = 
       0.00010994008952566853`, $CellContext`vgamma[7, 0.2] = 
       0.00010990351437592842`, $CellContext`vgamma[7, 0.25] = 
       0.00010986697574224596`, $CellContext`vgamma[7, 0.3] = 
       0.00010983047356383867`, $CellContext`vgamma[7, 0.35000000000000003`] = 
       0.00010979400778006591`, $CellContext`vgamma[7, 0.4] = 
       0.00010975757833042813`, $CellContext`vgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`vgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`ivcb $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`ivcCo))), $CellContext`ivcCo = 
       6.299542694592175*^-17, $CellContext`ivcZe[7, 0.05] = 
       4.0670900535391555`*^9, $CellContext`ivcZe[7, 0.1] = 
       4.06980111930194*^9, $CellContext`ivcZe[7, 0.15000000000000002`] = 
       4.072512182337827*^9, $CellContext`ivcZe[7, 0.2] = 
       4.0752232426522937`*^9, $CellContext`ivcZe[7, 0.25] = 
       4.077934300250798*^9, $CellContext`ivcZe[7, 0.3] = 
       4.080645355138787*^9, $CellContext`ivcZe[7, 0.35000000000000003`] = 
       4.083356407321691*^9, $CellContext`ivcZe[7, 0.4] = 
       4.0860674568049264`*^9, $CellContext`ivcZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`ivcZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 + 
            80 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`ivcRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`ivcRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 - 18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`ivcb 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`ivcb^2 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`ivcb^3 
              Pi^8 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`ivcb^4 
              Pi^8 $CellContext`ivcRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`ivcRl[7] = 
       1.5454404198356032`*^8, $CellContext`ivcRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`ivckeff[$CellContext`pH] + \
$CellContext`ivcG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`uLm = 5.4*^-9, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`ivckeff[7] = 
       1.7681844474093507`, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`ivclambda^2 $CellContext`CylRadd)/($CellContext`ivcepsilon \
$CellContext`R $CellContext`ivcT (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`ivccBulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`ivccBulk]) (
           1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`ivcT = 
       310, $CellContext`z = {1, 1, -1, -2}, $CellContext`um = {
        9.236401606278588*^-13, 7.786293805158486*^-13, 
        1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivcb = 
       0.4275963332672946, $CellContext`ivcRt[7] = 
       3.0089899796738666`*^6, $CellContext`ivcRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRt[$CellContext`pH] = \
$CellContext`ivclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH]])), $CellContext`ivcdeltak[
        7] = -0.006266587220405351, $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, \
$CellContext`ivcEp[
        7, 3.571333130226815] = -0.030141710811672343`, $CellContext`ivcEp[
        7, 4.273266990626408] = -0.01372097395564544, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`v\[Mu]3[7, 0.05] = 
       0.9119682521850851, $CellContext`v\[Mu]3[7, 0.1] = 
       0.9113607517611654, $CellContext`v\[Mu]3[7, 0.15000000000000002`] = 
       0.9107540607714676, $CellContext`v\[Mu]3[7, 0.2] = 
       0.9101481775981105, $CellContext`v\[Mu]3[7, 0.25] = 
       0.9095431006275249, $CellContext`v\[Mu]3[7, 0.3] = 
       0.9089388282504396, $CellContext`v\[Mu]3[7, 0.35000000000000003`] = 
       0.9083353588618659, $CellContext`v\[Mu]3[7, 0.4] = 
       0.9077326908610854, $CellContext`v\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRl[$CellContext`pH] (
          24/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`v\[Mu]2[7, 0.05] = 
       0.0044390312583152125`, $CellContext`v\[Mu]2[7, 0.1] = 
       0.004436074232821443, $CellContext`v\[Mu]2[7, 0.15000000000000002`] = 
       0.00443312114727164, $CellContext`v\[Mu]2[7, 0.2] = 
       0.004430171993790721, $CellContext`v\[Mu]2[7, 0.25] = 
       0.0044272267645245915`, $CellContext`v\[Mu]2[7, 0.3] = 
       0.0044242854516400795`, $CellContext`v\[Mu]2[7, 0.35000000000000003`] = 
       0.004421348047324856, $CellContext`v\[Mu]2[7, 0.4] = 
       0.00441841454378738, $CellContext`v\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRt[$CellContext`pH] (
          6/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`valfa[7, 0.05] = 
       2.5620807435021085`*^-7, $CellContext`valfa[7, 0.1] = 
       2.5637885909541595`*^-7, $CellContext`valfa[7, 0.15000000000000002`] = 
       2.5654964366883895`*^-7, $CellContext`valfa[7, 0.2] = 
       2.5672042807082493`*^-7, $CellContext`valfa[7, 0.25] = 
       2.568912123017177*^-7, $CellContext`valfa[7, 0.3] = 
       2.5706199636186035`*^-7, $CellContext`valfa[7, 0.35000000000000003`] = 
       2.572327802515951*^-7, $CellContext`valfa[7, 0.4] = 
       2.57403563971263*^-7, $CellContext`valfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`valfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`vvelocityprop[3.787007288822752, 7, 0.05] = 
       0.0034207706663649928`, $CellContext`vvelocityprop[
        3.7892604803807766`, 7, 0.1] = 
       0.006841541332468912, $CellContext`vvelocityprop[
        3.7915133993113734`, 7, 0.15000000000000002`] = 
       0.010262311998123526`, $CellContext`vvelocityprop[
        3.7937660457415916`, 7, 0.2] = 
       0.013683082664532834`, $CellContext`vvelocityprop[
        3.796018419798366, 7, 0.25] = 
       0.017103853330831174`, $CellContext`vvelocityprop[
        3.798270521608512, 7, 0.3] = 
       0.020524623997006785`, $CellContext`vvelocityprop[
        3.800522351298734, 7, 0.35000000000000003`] = 
       0.023945394662945263`, $CellContext`vvelocityprop[
        3.802773908995617, 7, 0.4] = 
       0.02736616532910269, $CellContext`vvelocityprop[
        161872.92057587206` $CellContext`t, 7, 0.4] = (-282.90690871403024`) (
         3.6309307634443417` - (16.523476183322085` 
          E^(195916.4556958388 $CellContext`t))/(-0.01209150628978157 + 
         4.550754960595208 
          E^(195916.4556958388 $CellContext`t))), $CellContext`vvelocityprop[
        161980.39233535161` $CellContext`t, 7, 
         0.35000000000000003`] = (-282.719203876364) (
         3.6333414354474636` - (16.539929004648705` 
          E^(196176.6904006899 $CellContext`t))/(-0.010587092393553882` + 
         4.5522638867028835` 
          E^(196176.6904006899 $CellContext`t))), $CellContext`vvelocityprop[
        162088.00700362353` $CellContext`t, 7, 0.3] = (-282.5314988517809) (
         3.6357553130017584` - (16.556410998890527` 
          E^(196437.44421243016` $CellContext`t))/(-0.009080679534955845 + 
         4.5537748207871545` 
          E^(196437.44421243016` $CellContext`t))), \
$CellContext`vvelocityprop[
        162195.76486613846` $CellContext`t, 7, 
         0.25] = (-282.34379363990604`) (
         3.6381724025100994` - (16.5729222388886 
          E^(196698.71851333405` $CellContext`t))/(-0.007572263724214173 + 
         4.555287766861839 
          E^(196698.71851333405` $CellContext`t))), \
$CellContext`vvelocityprop[
        162303.6662091087 $CellContext`t, 7, 0.2] = (-282.15608824036315`) (
         3.640592710392442 - (16.58946279771713 
          E^(196960.51469028305` $CellContext`t))/(-0.006061840960922792 + 
         4.556802728951475 
          E^(196960.51469028305` $CellContext`t))), \
$CellContext`vvelocityprop[
        162411.71131951013` $CellContext`t, 7, 
         0.15000000000000002`] = (-281.9683826527753) (
         3.6430162430858704` - (16.60603274868426 
          E^(197222.8341347829 $CellContext`t))/(-0.004549407234007335 + 
         4.558319711091345 
          E^(197222.8341347829 $CellContext`t))), $CellContext`vvelocityprop[
        162519.90048508515` $CellContext`t, 7, 0.1] = (-281.7806768767645) (
         3.6454430070446615` - (16.622632165333094` 
          E^(197485.67824298263` $CellContext`t))/(-0.0030349585216895617` + 
         4.5598387173275166` 
          E^(197485.67824298263` $CellContext`t))), \
$CellContext`vvelocityprop[
        162628.23399434512` $CellContext`t, 7, 
         0.05] = (-281.59297091195174`) (
         3.6478730087403406` - (16.63926112144254 
          E^(197749.04841569328` $CellContext`t))/(-0.0015184907914515915` + 
         4.561359751716878 
          E^(197749.04841569328` $CellContext`t))), $CellContext`vvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0] (
              
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`vwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`vbeta = 1.08*^-8, $CellContext`cdecaytime[7, 0.05] = 
       3.7469149632790475`, $CellContext`cdecaytime[7, 0.1] = 
       3.7091515705369424`, $CellContext`cdecaytime[7, 0.15000000000000002`] = 
       3.67146962386095, $CellContext`cdecaytime[7, 0.2] = 
       3.6338685240177666`, $CellContext`cdecaytime[7, 0.25] = 
       3.5963476784180934`, $CellContext`cdecaytime[7, 0.3] = 
       3.5589065009731584`, $CellContext`cdecaytime[7, 0.35000000000000003`] = 
       3.5215444119524197`, $CellContext`cdecaytime[7, 0.4] = 
       3.4842608378422733`, $CellContext`cdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`c\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`c\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`c\[CapitalOmega][0, 7, 0.05] = 
       1.110681320105488, $CellContext`c\[CapitalOmega][0, 7, 0.1] = 
       1.5707405863676336`, $CellContext`c\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`c\[CapitalOmega][0, 7, 0.2] = 
       2.2213626402109754`, $CellContext`c\[CapitalOmega][0, 7, 0.25] = 
       2.4835589330950745`, $CellContext`c\[CapitalOmega][0, 7, 0.3] = 
       2.720602501099272, $CellContext`c\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`c\[CapitalOmega][0, 7, 0.4] = 
       3.141481172735267, $CellContext`c\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 1.110681320105488 
        Sqrt[1/(E^(1.2278667282468554` $CellContext`w) (1 + 
           0.004513254729597313 (1 - 
             E^((-1.2278667282468554`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       1.5707405863676336` 
        Sqrt[1/(E^(1.2391713699408495` $CellContext`w) (1 + 
           0.009026509459194622 (1 - 
             E^((-1.2391713699408495`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       1.9237564774403768` 
        Sqrt[1/(E^(1.2506862712301865` $CellContext`w) (1 + 
           0.013539764188791938` (1 - 
             E^((-1.2506862712301865`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       2.2213626402109754` 
        Sqrt[1/(E^(1.2624173580686335` $CellContext`w) (1 + 
           0.01805301891838925 (1 - 
             E^((-1.2624173580686335`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       2.4835589330950745` 
        Sqrt[1/(E^(1.274370781399102 $CellContext`w) (1 + 
           0.02256627364798656 (1 - 
             E^((-1.274370781399102) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       2.720602501099272 
        Sqrt[1/(E^(1.2865529279428278` $CellContext`w) (1 + 
           0.027079528377583865` (1 - 
             E^((-1.2865529279428278`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       2.9385865588440443` 
        Sqrt[1/(E^(1.298970431615972 $CellContext`w) (1 + 
           0.03159278310718118 (1 - 
             E^((-1.298970431615972) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       3.141481172735267 
        Sqrt[1/(E^(1.3116301856166757` $CellContext`w) (1 + 
           0.036106037836778494` (1 - 
             E^((-1.3116301856166757`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`c\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`cwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`cwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`cwo[7, 0.05] = 
       1.110681320105488, $CellContext`cwo[7, 0.1] = 
       1.5707405863676336`, $CellContext`cwo[7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`cwo[7, 0.2] = 
       2.2213626402109754`, $CellContext`cwo[7, 0.25] = 
       2.4835589330950745`, $CellContext`cwo[7, 0.3] = 
       2.720602501099272, $CellContext`cwo[7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`cwo[7, 0.4] = 
       3.141481172735267, $CellContext`cwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`cgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`iccZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`cgamma[
        7, 0.05] = -7.88225965828913*^-6, $CellContext`cgamma[
        7, 0.1] = -7.918461456000264*^-6, $CellContext`cgamma[
        7, 0.15000000000000002`] = -7.955167218132837*^-6, \
$CellContext`cgamma[7, 0.2] = -7.992388759854252*^-6, $CellContext`cgamma[
        7, 0.25] = -8.030138288239181*^-6, $CellContext`cgamma[
        7, 0.3] = -8.068428419162388*^-6, $CellContext`cgamma[
        7, 0.35000000000000003`] = -8.10727219509115*^-6, $CellContext`cgamma[
        7, 0.4] = -8.146683103834562*^-6, $CellContext`cgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`cgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`iccCo $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`iccb $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`iccCo))), $CellContext`iccCo = 
       9.699130134892227*^-17, $CellContext`iccZe[7, 0.05] = 
       3.8075284311616607`*^9, $CellContext`iccZe[7, 0.1] = 
       3.772793328577719*^9, $CellContext`iccZe[7, 0.15000000000000002`] = 
       3.7380577248032327`*^9, $CellContext`iccZe[7, 0.2] = 
       3.7033216056453953`*^9, $CellContext`iccZe[7, 0.25] = 
       3.668584956369312*^9, $CellContext`iccZe[7, 0.3] = 
       3.633847761671804*^9, $CellContext`iccZe[7, 0.35000000000000003`] = 
       3.5991100056537004`*^9, $CellContext`iccZe[7, 0.4] = 
       3.5643716717904663`*^9, $CellContext`iccZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`iccZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`iccRl[$CellContext`pH]^2 + 
            80 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`iccRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`iccRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 - 18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`iccb 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`iccb^2 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`iccb^3 
              Pi^8 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`iccb^4 
              Pi^8 $CellContext`iccRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`iccRl[7] = 
       1.460980461711672*^8, $CellContext`iccRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`icckeff[$CellContext`pH] + \
$CellContext`iccG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`icckeff[7] = 
       2.0085564758994368`, $CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`icclambda^2 $CellContext`CylRadd)/($CellContext`iccepsilon \
$CellContext`R $CellContext`iccT (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`icccbulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`icccbulk]) (
           1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`iccT = 
       310, $CellContext`icccbulk = {140, 12, 4, 74}, $CellContext`iccG = 
       0.16270373975440133`, $CellContext`iccb = -6.168064974156344, \
$CellContext`iccRt[7] = 2.672546822340888*^6, $CellContext`iccRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRt[$CellContext`pH] = \
$CellContext`icclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH]])), $CellContext`iccdeltak[
        7] = -0.44640620869034486`, $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`iccalfa2 = -45.80817013059013, \
$CellContext`iccEP[
        7, 5.313507035908096] = -0.020604582068995035`, $CellContext`iccEP[
        7, 6.336424152326247] = -0.006806232005309268, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`c\[Mu]3[7, 0.05] = 
       0.9209000461851415, $CellContext`c\[Mu]3[7, 0.1] = 
       0.9293785274556372, $CellContext`c\[Mu]3[7, 0.15000000000000002`] = 
       0.9380147034226399, $CellContext`c\[Mu]3[7, 0.2] = 
       0.9468130185514753, $CellContext`c\[Mu]3[7, 0.25] = 
       0.9557780860493266, $CellContext`c\[Mu]3[7, 0.3] = 
       0.9649146959571209, $CellContext`c\[Mu]3[7, 0.35000000000000003`] = 
       0.974227823711979, $CellContext`c\[Mu]3[7, 0.4] = 
       0.9837226392125068, $CellContext`c\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRl[$CellContext`pH] (
          24/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`c\[Mu]2[7, 0.05] = 
       0.004211467156176436, $CellContext`c\[Mu]2[7, 0.1] = 
       0.004250241011767895, $CellContext`c\[Mu]2[7, 0.15000000000000002`] = 
       0.004289736037955221, $CellContext`c\[Mu]2[7, 0.2] = 
       0.00432997256020134, $CellContext`c\[Mu]2[7, 0.25] = 
       0.0043709716756607335`, $CellContext`c\[Mu]2[7, 0.3] = 
       0.004412755290185318, $CellContext`c\[Mu]2[7, 0.35000000000000003`] = 
       0.004455346157482305, $CellContext`c\[Mu]2[7, 0.4] = 
       0.0044987679205716604`, $CellContext`c\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRt[$CellContext`pH] (
          6/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`calfa[7, 0.05] = 
       3.6929713746138985`*^-7, $CellContext`calfa[7, 0.1] = 
       3.659281346592851*^-7, $CellContext`calfa[7, 0.15000000000000002`] = 
       3.625590832460571*^-7, $CellContext`calfa[7, 0.2] = 
       3.591899818451272*^-7, $CellContext`calfa[7, 0.25] = 
       3.558208290273388*^-7, $CellContext`calfa[7, 0.3] = 
       3.5245162330841663`*^-7, $CellContext`calfa[7, 0.35000000000000003`] = 
       3.490823631462794*^-7, $CellContext`calfa[7, 0.4] = 
       3.45713046938191*^-7, $CellContext`calfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`calfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`iccCo $CellContext`iccZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`cvelocityprop[3.4842608378422733`, 7, 0.4] = 
       0.39475615834593086`, $CellContext`cvelocityprop[
        3.5215444119524197`, 7, 0.35000000000000003`] = 
       0.3454116385527492, $CellContext`cvelocityprop[
        3.5589065009731584`, 7, 0.3] = 
       0.29606711875952163`, $CellContext`cvelocityprop[
        3.596347678418094, 7, 0.25] = 
       0.24672259896618062`, $CellContext`cvelocityprop[
        3.633868524017766, 7, 0.2] = 
       0.19737807917298386`, $CellContext`cvelocityprop[
        3.6714696238609497`, 7, 0.15000000000000002`] = 
       0.14803355937974372`, $CellContext`cvelocityprop[
        3.7091515705369424`, 7, 0.1] = 
       0.09868903958657457, $CellContext`cvelocityprop[
        3.746914963279047, 7, 0.05] = 
       0.0493445197932297, $CellContext`cvelocityprop[
        112826.94188503677` $CellContext`t, 7, 
         0.05] = (-296.80867822197786`) (
         3.683600184740566 - (17.037687837128203` 
          E^(138536.4479904782 $CellContext`t))/(-0.02078128244465737 + 
         4.625281513370365 
          E^(138536.4479904782 $CellContext`t))), $CellContext`cvelocityprop[
        113865.70946632024` $CellContext`t, 7, 0.1] = (-294.1009689895351) (
         3.717514109822549 - (17.430820894388983` 
          E^(141099.1271886668 $CellContext`t))/(-0.04194522034625339 + 
         4.688837857624439 
          E^(141099.1271886668 $CellContext`t))), $CellContext`cvelocityprop[
        114923.7975052713 $CellContext`t, 7, 
         0.15000000000000002`] = (-291.39322068773134`) (
         3.7520588136905597` - (17.835696751972716` 
          E^(143733.61577748077` $CellContext`t))/(-0.06350248944981075 + 
         4.75357600656301 
          E^(143733.61577748077` $CellContext`t))), \
$CellContext`cvelocityprop[
        116001.75052942368` $CellContext`t, 7, 0.2] = (-288.685432210193) (
         3.787252074205901 - (18.25277218450188 
          E^(146442.62343469175` $CellContext`t))/(-0.08546416668043506 + 
         4.819529259437811 
          E^(146442.62343469175` $CellContext`t))), \
$CellContext`cvelocityprop[
        117100.13374024625` $CellContext`t, 7, 0.25] = (-285.9776024082895) (
         3.8231123441973063` - (18.68252611796245 
          E^(149228.98893649696` $CellContext`t))/(-0.10784174918268974` + 
         4.886732179429322 
          E^(149228.98893649696` $CellContext`t))), \
$CellContext`cvelocityprop[
        118219.53400454563` $CellContext`t, 7, 0.3] = (-283.2697300890903) (
         3.8596587838284835` - (19.12546092395036 
          E^(152095.68761358486` $CellContext`t))/(-0.13064717445559282` + 
         4.955220654241197 
          E^(152095.68761358486` $CellContext`t))), \
$CellContext`cvelocityprop[
        119360.56090352143` $CellContext`t, 7, 
         0.35000000000000003`] = (-280.5618140132055) (
         3.896911294847916 - (19.582103802743198` 
          E^(155045.83931477173` $CellContext`t))/(-0.1538928416575685 + 
         5.025031960217464 
          E^(155045.83931477173` $CellContext`t))), \
$CellContext`cvelocityprop[
        120523.84784342874` $CellContext`t, 7, 0.4] = (-277.8538528924964) (
         3.934890556850027 - (20.053008262222097` 
          E^(158082.71691811242` $CellContext`t))/(-0.17759163416151183` + 
         5.096204830224046 
          E^(158082.71691811242` $CellContext`t))), $CellContext`cvelocityprop[
         Pattern[$CellContext`t, 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cvelocityprop[$CellContext`t, \
$CellContext`pH, $CellContext`V0] = -((
           5 (4 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] - (4 
             E^((
                4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0] (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0]))/((-4) $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
            E^((4 $CellContext`t $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3) (
              4 $CellContext`cwo[$CellContext`pH, $CellContext`V0]^2 \
$CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] + 
              5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0]))))/(
          4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0]))), \
$CellContext`cbeta = 1.08*^-8}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.833120397419684*^9, 3.833120410425509*^9}, {
   3.833123390559215*^9, 3.833123420469994*^9}, 3.833123841262286*^9, 
   3.833124527662212*^9, 3.833124920337981*^9, 3.833126912771532*^9, 
   3.8331277432163143`*^9, 3.833281585917988*^9, 3.83328294745319*^9, 
   3.833284308157754*^9, 3.83328595472415*^9, 3.833286032174655*^9, 
   3.8336715164207897`*^9, 3.8336729742504234`*^9, 3.833673744267456*^9, 
   3.833675233697254*^9, 3.8336756324832497`*^9, 3.833676938505721*^9, 
   3.833677121090891*^9, 3.8336783999540977`*^9, 3.8336786398860455`*^9, 
   3.833680105250725*^9, 3.8339504509490232`*^9, 3.8339506904465017`*^9, 
   3.8339507480434675`*^9, 3.8339526706040497`*^9, 3.8341842835577493`*^9, 
   3.834188050109147*^9, {3.834189432503522*^9, 3.834189487575324*^9}, 
   3.834189952261643*^9, {3.8341899957414627`*^9, 3.8341899965796137`*^9}, 
   3.83419011998512*^9, 3.83422358660824*^9, {3.8342237374325304`*^9, 
   3.834223738413268*^9}, 3.8349692904808064`*^9, {3.8349696266775875`*^9, 
   3.834969653104158*^9}, 3.835036074829994*^9, {3.835039246410819*^9, 
   3.835039256006301*^9}, {3.8350393133510756`*^9, 3.835039339717577*^9}, {
   3.835044714808531*^9, 3.835044715721192*^9}, {3.8350447763055058`*^9, 
   3.835044821735736*^9}, 3.8350451668162336`*^9, {3.8350454493251543`*^9, 
   3.835045461779805*^9}, 3.8351044066362286`*^9, 3.835315890498611*^9, 
   3.8354436999768114`*^9, 3.835447996628624*^9, 3.8354619752554364`*^9, 
   3.8354623085671496`*^9, 3.835525554241544*^9, 3.835556411615299*^9, 
   3.835561412511526*^9, 3.8355739384578757`*^9, 3.835641465952703*^9, 
   3.8356443162903957`*^9, 3.8356445092939787`*^9, 3.835722632090947*^9, 
   3.8357233718786077`*^9, {3.835723471490074*^9, 3.835723472229807*^9}, 
   3.8357237440837255`*^9, 3.835723786546896*^9, 3.835723866414955*^9, {
   3.8357239223100758`*^9, 3.835723923144208*^9}, 3.8357240329446754`*^9, 
   3.835786321376975*^9, 3.8357873690931253`*^9, 3.8357942295159454`*^9, 
   3.8358115116825247`*^9, 3.8358118812277007`*^9, 3.8358125739719863`*^9, 
   3.8358159035062675`*^9, 3.8358169316238923`*^9, 3.8358170665822563`*^9, 
   3.8358266077338333`*^9, 3.835866116969206*^9, 3.835866390990909*^9, 
   3.8358668816889057`*^9, {3.835868606242496*^9, 3.8358686075178328`*^9}, 
   3.835877983224511*^9, 3.836009626386196*^9, 3.836075212904173*^9, 
   3.8360785210032587`*^9, 3.83676518554354*^9, 3.8367652306096478`*^9, {
   3.836765278268433*^9, 3.836765299013789*^9}, 3.83676533226985*^9, 
   3.836765545650816*^9, {3.8367666789045687`*^9, 3.836766703574733*^9}, 
   3.83676783019592*^9, 3.836767861402939*^9, {3.8367686347282333`*^9, 
   3.83676867651433*^9}, 3.836769235686466*^9, 3.836769346092045*^9, 
   3.8368315098585463`*^9, {3.836831544804832*^9, 3.836831563923558*^9}, 
   3.836831684032173*^9, {3.83683188493335*^9, 3.836831905872815*^9}, 
   3.83683213578489*^9, 3.836832269840042*^9, {3.836832353132388*^9, 
   3.836832431527722*^9}, {3.836832541970311*^9, 3.836832556260549*^9}, {
   3.836832902924176*^9, 3.836832950334564*^9}, {3.8368329819602537`*^9, 
   3.836833010357011*^9}, 3.836833399264439*^9, {3.836833431896716*^9, 
   3.836833516974387*^9}, 3.837006107670074*^9, 3.837006198911772*^9, 
   3.8370062465883713`*^9, 3.83700629237994*^9, 3.8370077902595863`*^9, 
   3.8370079664154563`*^9, {3.837020707194633*^9, 3.837020729550495*^9}, {
   3.837020901600663*^9, 3.837020924221409*^9}, {3.837021035968814*^9, 
   3.837021060397993*^9}, 3.837021143182263*^9, 3.8371100192429113`*^9, 
   3.8371101583731327`*^9, 3.83711020423914*^9, 3.837110263280435*^9},
 CellLabel->
  "Out[625]=",ExpressionUUID->"73542fe4-33dd-4745-8d2f-2bc3e7992735"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.4 amplitude Attenuation Plots", "Subsection",
 CellChangeTimes->{{3.8360746024039063`*^9, 
  3.836074604475917*^9}},ExpressionUUID->"8d797eb9-a480-4c50-a4a2-\
bc6c8545eb63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], 
               ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"v\[CapitalOmega]", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"vdecaytime", "[", 
                    RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], 
                    ")"}], "/", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}]}], "/", 
                    "24"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", " ", "pH", ",", " ", 
                   "inputvoltage"}], "]"}], "^", "2"}], "*", 
                RowBox[{"vgamma", "[", 
                 RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ivcZe", "[", 
                   RowBox[{"pH", ",", " ", "inputvoltage"}], "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"c\[CapitalOmega]", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"cdecaytime", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ")"}], "/", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "inputvoltage"}], "]"}]}], "/", "24"}],
                     "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", "pH", ",", "inputvoltage"}], 
                   "]"}], "^", "2"}]}], "*", 
                RowBox[{"cgamma", "[", 
                 RowBox[{"pH", ",", "inputvoltage"}], "]"}], "*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"iccZe", "[", 
                   RowBox[{"pH", ",", "inputvoltage"}], "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<t(\[Mu]s)\>\"", ",", "Bold", ",", "18"}], "]"}], 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Volts\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Dashed", ",", 
                RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
              "None"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"Orange", ",", 
                RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
              "None"}], "]"}]}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       "\"\<Plot-7: Fall of voltage as function of time.\>\"", ",", "Bottom", 
       ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"electrolyte", ",", 
         RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], 
       ",", "CheckboxBar"}], "}"}], ",", "Delimiter", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pH", ",", "7"}], "}"}], ",", "6", ",", "8", ",", 
       RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"inputvoltage", ",", "0.05", ",", "0.4", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.74882480029732*^9, 3.748824832602949*^9}, {
   3.748824884724287*^9, 3.748824890826042*^9}, {3.748831507882897*^9, 
   3.748831564330168*^9}, 3.748832381963283*^9, 3.749389963998872*^9, {
   3.749559368004821*^9, 3.749559376059609*^9}, {3.74956250626178*^9, 
   3.7495625098184357`*^9}, {3.749593458357428*^9, 3.749593460304079*^9}, 
   3.749594422737823*^9, {3.749594475952174*^9, 3.7495945487964687`*^9}, {
   3.7496036226473*^9, 3.7496036257182837`*^9}, {3.74960366916889*^9, 
   3.7496036954421577`*^9}, 3.7496037562369223`*^9, {3.749603793757903*^9, 
   3.7496038340083447`*^9}, {3.749603868985042*^9, 3.7496038726990423`*^9}, {
   3.7496039442129908`*^9, 3.749603947220923*^9}, {3.7496039813931227`*^9, 
   3.749603985830366*^9}, {3.749604032830989*^9, 3.7496041052210083`*^9}, {
   3.749604185260653*^9, 3.749604204819018*^9}, {3.7496042368834057`*^9, 
   3.7496042728485527`*^9}, {3.749604400650709*^9, 3.74960445858179*^9}, {
   3.749604750884851*^9, 3.7496047609684677`*^9}, {3.74985529781411*^9, 
   3.7498552983306217`*^9}, 3.7498572438245487`*^9, {3.750692767516807*^9, 
   3.75069281103554*^9}, {3.7506954243912487`*^9, 3.750695425335215*^9}, {
   3.7507808083648367`*^9, 3.750780850703774*^9}, {3.7550519687857113`*^9, 
   3.755051968792741*^9}, {3.826933776572969*^9, 3.8269337819155493`*^9}, {
   3.827530783726937*^9, 3.827530788920081*^9}, {3.8275313370469303`*^9, 
   3.82753133951931*^9}, 3.827532372381037*^9, {3.827532583858672*^9, 
   3.827532597334776*^9}, {3.8275339294351425`*^9, 3.827534012336362*^9}, {
   3.8275340539579763`*^9, 3.827534079441613*^9}, {3.827537898353177*^9, 
   3.827537898533574*^9}, {3.827547720472598*^9, 3.8275478856422873`*^9}, {
   3.827547929924821*^9, 3.827547935633872*^9}, {3.827547970761174*^9, 
   3.827547998725281*^9}, {3.82754973713278*^9, 3.827549737915843*^9}, {
   3.8275722008926787`*^9, 3.827572221309321*^9}, {3.827833117953334*^9, 
   3.827833152808683*^9}, {3.8278336222945337`*^9, 3.8278336582107525`*^9}, {
   3.827833734572117*^9, 3.827833750323436*^9}, {3.827833782411313*^9, 
   3.8278337940106688`*^9}, 3.8315227542105613`*^9, {3.831735180216411*^9, 
   3.8317351829241476`*^9}, {3.831743910963718*^9, 3.83174413213934*^9}, {
   3.8317442286844177`*^9, 3.8317442336528835`*^9}, {3.831744447497349*^9, 
   3.831744467467163*^9}, {3.831744530513706*^9, 3.8317445316470475`*^9}, {
   3.831744586680818*^9, 3.831744634739402*^9}, {3.831745096803428*^9, 
   3.8317451002865424`*^9}, {3.831745635357218*^9, 3.831745640991273*^9}, {
   3.8317487265562325`*^9, 3.831748729967801*^9}, {3.8317487672606397`*^9, 
   3.8317487680455627`*^9}, {3.8317488299930973`*^9, 
   3.8317488335899467`*^9}, {3.8317658362264132`*^9, 3.8317659336988745`*^9}, 
   3.8317659820088177`*^9, {3.8317660199332314`*^9, 3.8317660204258685`*^9}, {
   3.8317660823129425`*^9, 3.8317660852263703`*^9}, {3.8317661686597195`*^9, 
   3.831766172791544*^9}, {3.831772061280061*^9, 3.831772117050598*^9}, {
   3.831772335541521*^9, 3.8317723466684647`*^9}, {3.8323787908912554`*^9, 
   3.832378794822715*^9}, {3.8331204238247023`*^9, 3.833120428534607*^9}, 
   3.833920249790197*^9, {3.8339506633226833`*^9, 3.8339506649535217`*^9}, 
   3.8339522345433273`*^9, {3.834188089516102*^9, 3.834188140374196*^9}, {
   3.8341895167112617`*^9, 3.8341895206422987`*^9}, {3.8341901324612412`*^9, 
   3.834190132918019*^9}, {3.835046860844882*^9, 3.8350468615162745`*^9}, {
   3.8358159517554855`*^9, 3.835816009179903*^9}, 3.835866143875002*^9, 
   3.835877809322961*^9},
 CellLabel->
  "In[626]:=",ExpressionUUID->"ac8330fb-a258-43c8-b887-e260f981b0f6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular"}, $CellContext`inputvoltage$$ = 0.05, $CellContext`pH$$ = 
    7, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {{
       Hold[$CellContext`pH$$], 7}, 6, 8}, {
      Hold[$CellContext`inputvoltage$$], 0.05, 0.4}}, Typeset`size$$ = {
    625., {218., 195.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`inputvoltage$$ = 
        0.05, $CellContext`pH$$ = 7}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          
          Table[{24 $CellContext`vdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
            10^6 (($CellContext`n - 1)/
             20), $CellContext`v\[CapitalOmega][(((
                  24 $CellContext`vdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
                  10^6 (($CellContext`n - 1)/
                   20))/$CellContext`valfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$])/24) 
               10^(-6), $CellContext`pH$$, $CellContext`inputvoltage$$]^2 \
$CellContext`vgamma[$CellContext`pH$$, $CellContext`inputvoltage$$] \
($CellContext`ivcZe[$CellContext`pH$$, $CellContext`inputvoltage$$]^(1/2)/
             12)}, {$CellContext`n, 1, 20}], 
          Table[{
           24 $CellContext`cdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
            10^6 (($CellContext`n - 1)/
             20), (-$CellContext`c\[CapitalOmega][(((
                   24 $CellContext`cdecaytime[$CellContext`pH$$, \
$CellContext`inputvoltage$$] $CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$] 
                   10^6 (($CellContext`n - 1)/
                    20))/$CellContext`calfa[$CellContext`pH$$, \
$CellContext`inputvoltage$$])/24) 
                10^(-6), $CellContext`pH$$, $CellContext`inputvoltage$$]^2) \
$CellContext`cgamma[$CellContext`pH$$, $CellContext`inputvoltage$$] \
($CellContext`iccZe[$CellContext`pH$$, $CellContext`inputvoltage$$]^(1/2)/
             12)}, {$CellContext`n, 1, 20}]}, ImageSize -> 500, AxesLabel -> {
           Style["t(\[Mu]s)", Bold, 18], 
           Style["Volts", Bold, 18]}, AxesStyle -> Directive[Bold, 18], 
         PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-7: Fall of voltage as function of time.", Bottom, LabelStyle -> 
        Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {{$CellContext`pH$$, 7}, 6, 8, Appearance -> 
         "Labeled"}, {$CellContext`inputvoltage$$, 0.05, 0.4, Appearance -> 
         "Labeled"}}, "Options" :> {ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{682., {286., 293.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`vdecaytime[7, 0.05] = 
       3.787007288822752, $CellContext`vdecaytime[7, 0.1] = 
       3.789260480380777, $CellContext`vdecaytime[7, 0.15000000000000002`] = 
       3.7915133993113734`, $CellContext`vdecaytime[7, 0.2] = 
       3.7937660457415916`, $CellContext`vdecaytime[7, 0.25] = 
       3.796018419798366, $CellContext`vdecaytime[7, 0.3] = 
       3.7982705216085124`, $CellContext`vdecaytime[7, 0.35000000000000003`] = 
       3.8005223512987345`, $CellContext`vdecaytime[7, 0.4] = 
       3.802773908995617, $CellContext`vdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`v\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`v\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`v\[CapitalOmega][0, 7, 0.05] = 
       0.2924367737707741, $CellContext`v\[CapitalOmega][0, 7, 0.1] = 
       0.4135680516032614, $CellContext`v\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`v\[CapitalOmega][0, 7, 0.2] = 
       0.5848735475415483, $CellContext`v\[CapitalOmega][0, 7, 0.25] = 
       0.6539085052721784, $CellContext`v\[CapitalOmega][0, 7, 0.3] = 
       0.7163208777641159, $CellContext`v\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`v\[CapitalOmega][0, 7, 0.4] = 
       0.8271361032065228, $CellContext`v\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 0.2924367737707741 
        Sqrt[1/(E^(1.2159576695801135` $CellContext`w) (1 + 
           0.00033301395916212484` (1 - 
             E^((-1.2159576695801135`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       0.4135680516032614 
        Sqrt[1/(E^(1.215147669014887 $CellContext`w) (1 + 
           0.0006660279183242498 (1 - 
             E^((-1.215147669014887) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       0.5065153501725065 
        Sqrt[1/(E^(1.21433874769529 $CellContext`w) (1 + 
           0.000999041877486375 (1 - 
             E^((-1.21433874769529) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       0.5848735475415483 
        Sqrt[1/(E^(1.2135309034641473` $CellContext`w) (1 + 
           0.0013320558366484998` (1 - 
             E^((-1.2135309034641473`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       0.6539085052721784 
        Sqrt[1/(E^(1.212724134170033 $CellContext`w) (1 + 
           0.001665069795810624 (1 - 
             E^((-1.212724134170033) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       0.7163208777641159 
        Sqrt[1/(E^(1.2119184376672527` $CellContext`w) (1 + 
           0.0019980837549727487` (1 - 
             E^((-1.2119184376672527`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       0.7737149776075247 
        Sqrt[1/(E^(1.2111138118158211` $CellContext`w) (1 + 
           0.0023310977141348744` (1 - 
             E^((-1.2111138118158211`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       0.8271361032065228 
        Sqrt[1/(E^(1.2103102544814472` $CellContext`w) (1 + 
           0.0026641116732969996` (1 - 
             E^((-1.2103102544814472`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`v\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`vwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`vwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`vwo[7, 0.05] = 
       0.2924367737707741, $CellContext`vwo[7, 0.1] = 
       0.4135680516032614, $CellContext`vwo[7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`vwo[7, 0.2] = 
       0.5848735475415483, $CellContext`vwo[7, 0.25] = 
       0.6539085052721784, $CellContext`vwo[7, 0.3] = 
       0.7163208777641159, $CellContext`vwo[7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`vwo[7, 0.4] = 
       0.8271361032065228, $CellContext`vwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`vgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`ivcZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`vgamma[7, 0.05] = 
       0.00011001334961716237`, $CellContext`vgamma[7, 0.1] = 
       0.0001099767012523908, $CellContext`vgamma[7, 0.15000000000000002`] = 
       0.00010994008952566853`, $CellContext`vgamma[7, 0.2] = 
       0.00010990351437592842`, $CellContext`vgamma[7, 0.25] = 
       0.00010986697574224596`, $CellContext`vgamma[7, 0.3] = 
       0.00010983047356383867`, $CellContext`vgamma[7, 0.35000000000000003`] = 
       0.00010979400778006591`, $CellContext`vgamma[7, 0.4] = 
       0.00010975757833042813`, $CellContext`vgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`vgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`ivcb $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`ivcCo))), $CellContext`ivcCo = 
       6.299542694592175*^-17, $CellContext`ivcZe[7, 0.05] = 
       4.0670900535391555`*^9, $CellContext`ivcZe[7, 0.1] = 
       4.06980111930194*^9, $CellContext`ivcZe[7, 0.15000000000000002`] = 
       4.072512182337827*^9, $CellContext`ivcZe[7, 0.2] = 
       4.0752232426522937`*^9, $CellContext`ivcZe[7, 0.25] = 
       4.077934300250798*^9, $CellContext`ivcZe[7, 0.3] = 
       4.080645355138787*^9, $CellContext`ivcZe[7, 0.35000000000000003`] = 
       4.083356407321691*^9, $CellContext`ivcZe[7, 0.4] = 
       4.0860674568049264`*^9, $CellContext`ivcZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`ivcZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 + 
            80 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`ivcRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`ivcRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 - 18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`ivcb 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`ivcb^2 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`ivcb^3 
              
              Pi^8 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`ivcb^4 
              Pi^8 $CellContext`ivcRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`ivcRl[7] = 
       1.5454404198356032`*^8, $CellContext`ivcRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`ivckeff[$CellContext`pH] + \
$CellContext`ivcG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`uLm = 5.4*^-9, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`ivckeff[7] = 
       1.7681844474093507`, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`ivclambda^2 $CellContext`CylRadd)/($CellContext`ivcepsilon \
$CellContext`R $CellContext`ivcT (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`ivccBulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`ivccBulk]) (
           1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`ivcT = 
       310, $CellContext`z = {1, 1, -1, -2}, $CellContext`um = {
        9.236401606278588*^-13, 7.786293805158486*^-13, 
        1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivcb = 
       0.4275963332672946, $CellContext`ivcRt[7] = 
       3.0089899796738666`*^6, $CellContext`ivcRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRt[$CellContext`pH] = \
$CellContext`ivclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH]])), $CellContext`ivcdeltak[
        7] = -0.006266587220405351, $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, \
$CellContext`ivcEp[
        7, 3.571333130226815] = -0.030141710811672343`, $CellContext`ivcEp[
        7, 4.273266990626408] = -0.01372097395564544, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`v\[Mu]3[7, 0.05] = 
       0.9119682521850851, $CellContext`v\[Mu]3[7, 0.1] = 
       0.9113607517611654, $CellContext`v\[Mu]3[7, 0.15000000000000002`] = 
       0.9107540607714676, $CellContext`v\[Mu]3[7, 0.2] = 
       0.9101481775981105, $CellContext`v\[Mu]3[7, 0.25] = 
       0.9095431006275249, $CellContext`v\[Mu]3[7, 0.3] = 
       0.9089388282504396, $CellContext`v\[Mu]3[7, 0.35000000000000003`] = 
       0.9083353588618659, $CellContext`v\[Mu]3[7, 0.4] = 
       0.9077326908610854, $CellContext`v\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRl[$CellContext`pH] (
          24/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`v\[Mu]2[7, 0.05] = 
       0.0044390312583152125`, $CellContext`v\[Mu]2[7, 0.1] = 
       0.004436074232821443, $CellContext`v\[Mu]2[7, 0.15000000000000002`] = 
       0.00443312114727164, $CellContext`v\[Mu]2[7, 0.2] = 
       0.004430171993790721, $CellContext`v\[Mu]2[7, 0.25] = 
       0.0044272267645245915`, $CellContext`v\[Mu]2[7, 0.3] = 
       0.0044242854516400795`, $CellContext`v\[Mu]2[7, 0.35000000000000003`] = 
       0.004421348047324856, $CellContext`v\[Mu]2[7, 0.4] = 
       0.00441841454378738, $CellContext`v\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRt[$CellContext`pH] (
          6/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`valfa[7, 0.05] = 
       2.5620807435021085`*^-7, $CellContext`valfa[7, 0.1] = 
       2.5637885909541595`*^-7, $CellContext`valfa[7, 0.15000000000000002`] = 
       2.5654964366883895`*^-7, $CellContext`valfa[7, 0.2] = 
       2.5672042807082493`*^-7, $CellContext`valfa[7, 0.25] = 
       2.568912123017177*^-7, $CellContext`valfa[7, 0.3] = 
       2.5706199636186035`*^-7, $CellContext`valfa[7, 0.35000000000000003`] = 
       2.572327802515951*^-7, $CellContext`valfa[7, 0.4] = 
       2.57403563971263*^-7, $CellContext`valfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`valfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`cdecaytime[7, 0.05] = 
       3.7469149632790475`, $CellContext`cdecaytime[7, 0.1] = 
       3.7091515705369424`, $CellContext`cdecaytime[7, 0.15000000000000002`] = 
       3.67146962386095, $CellContext`cdecaytime[7, 0.2] = 
       3.6338685240177666`, $CellContext`cdecaytime[7, 0.25] = 
       3.5963476784180934`, $CellContext`cdecaytime[7, 0.3] = 
       3.5589065009731584`, $CellContext`cdecaytime[7, 0.35000000000000003`] = 
       3.5215444119524197`, $CellContext`cdecaytime[7, 0.4] = 
       3.4842608378422733`, $CellContext`cdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`c\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`c\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`c\[CapitalOmega][0, 7, 0.05] = 
       1.110681320105488, $CellContext`c\[CapitalOmega][0, 7, 0.1] = 
       1.5707405863676336`, $CellContext`c\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`c\[CapitalOmega][0, 7, 0.2] = 
       2.2213626402109754`, $CellContext`c\[CapitalOmega][0, 7, 0.25] = 
       2.4835589330950745`, $CellContext`c\[CapitalOmega][0, 7, 0.3] = 
       2.720602501099272, $CellContext`c\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`c\[CapitalOmega][0, 7, 0.4] = 
       3.141481172735267, $CellContext`c\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 1.110681320105488 
        Sqrt[1/(E^(1.2278667282468554` $CellContext`w) (1 + 
           0.004513254729597313 (1 - 
             E^((-1.2278667282468554`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       1.5707405863676336` 
        Sqrt[1/(E^(1.2391713699408495` $CellContext`w) (1 + 
           0.009026509459194622 (1 - 
             E^((-1.2391713699408495`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       1.9237564774403768` 
        Sqrt[1/(E^(1.2506862712301865` $CellContext`w) (1 + 
           0.013539764188791938` (1 - 
             E^((-1.2506862712301865`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       2.2213626402109754` 
        Sqrt[1/(E^(1.2624173580686335` $CellContext`w) (1 + 
           0.01805301891838925 (1 - 
             E^((-1.2624173580686335`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       2.4835589330950745` 
        Sqrt[1/(E^(1.274370781399102 $CellContext`w) (1 + 
           0.02256627364798656 (1 - 
             E^((-1.274370781399102) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       2.720602501099272 
        Sqrt[1/(E^(1.2865529279428278` $CellContext`w) (1 + 
           0.027079528377583865` (1 - 
             E^((-1.2865529279428278`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       2.9385865588440443` 
        Sqrt[1/(E^(1.298970431615972 $CellContext`w) (1 + 
           0.03159278310718118 (1 - 
             E^((-1.298970431615972) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       3.141481172735267 
        Sqrt[1/(E^(1.3116301856166757` $CellContext`w) (1 + 
           0.036106037836778494` (1 - 
             E^((-1.3116301856166757`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`c\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`cwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`cwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`cwo[7, 0.05] = 
       1.110681320105488, $CellContext`cwo[7, 0.1] = 
       1.5707405863676336`, $CellContext`cwo[7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`cwo[7, 0.2] = 
       2.2213626402109754`, $CellContext`cwo[7, 0.25] = 
       2.4835589330950745`, $CellContext`cwo[7, 0.3] = 
       2.720602501099272, $CellContext`cwo[7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`cwo[7, 0.4] = 
       3.141481172735267, $CellContext`cwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`cgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`iccZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`cgamma[
        7, 0.05] = -7.88225965828913*^-6, $CellContext`cgamma[
        7, 0.1] = -7.918461456000264*^-6, $CellContext`cgamma[
        7, 0.15000000000000002`] = -7.955167218132837*^-6, \
$CellContext`cgamma[7, 0.2] = -7.992388759854252*^-6, $CellContext`cgamma[
        7, 0.25] = -8.030138288239181*^-6, $CellContext`cgamma[
        7, 0.3] = -8.068428419162388*^-6, $CellContext`cgamma[
        7, 0.35000000000000003`] = -8.10727219509115*^-6, $CellContext`cgamma[
        7, 0.4] = -8.146683103834562*^-6, $CellContext`cgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`cgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`iccCo $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`iccb $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`iccCo))), $CellContext`iccCo = 
       9.699130134892227*^-17, $CellContext`iccZe[7, 0.05] = 
       3.8075284311616607`*^9, $CellContext`iccZe[7, 0.1] = 
       3.772793328577719*^9, $CellContext`iccZe[7, 0.15000000000000002`] = 
       3.7380577248032327`*^9, $CellContext`iccZe[7, 0.2] = 
       3.7033216056453953`*^9, $CellContext`iccZe[7, 0.25] = 
       3.668584956369312*^9, $CellContext`iccZe[7, 0.3] = 
       3.633847761671804*^9, $CellContext`iccZe[7, 0.35000000000000003`] = 
       3.5991100056537004`*^9, $CellContext`iccZe[7, 0.4] = 
       3.5643716717904663`*^9, $CellContext`iccZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`iccZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`iccRl[$CellContext`pH]^2 + 
            80 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`iccRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`iccRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 - 18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`iccb 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`iccb 
             
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`iccb^2 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`iccb^3 
              Pi^8 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`iccb^4 
              Pi^8 $CellContext`iccRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`iccRl[7] = 
       1.460980461711672*^8, $CellContext`iccRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`icckeff[$CellContext`pH] + \
$CellContext`iccG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`icckeff[7] = 
       2.0085564758994368`, $CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`icclambda^2 $CellContext`CylRadd)/($CellContext`iccepsilon \
$CellContext`R $CellContext`iccT (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`icccbulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`icccbulk]) (
           1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`iccT = 
       310, $CellContext`icccbulk = {140, 12, 4, 74}, $CellContext`iccG = 
       0.16270373975440133`, $CellContext`iccb = -6.168064974156344, \
$CellContext`iccRt[7] = 2.672546822340888*^6, $CellContext`iccRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRt[$CellContext`pH] = \
$CellContext`icclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH]])), $CellContext`iccdeltak[
        7] = -0.44640620869034486`, $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`iccalfa2 = -45.80817013059013, \
$CellContext`iccEP[
        7, 5.313507035908096] = -0.020604582068995035`, $CellContext`iccEP[
        7, 6.336424152326247] = -0.006806232005309268, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`c\[Mu]3[7, 0.05] = 
       0.9209000461851415, $CellContext`c\[Mu]3[7, 0.1] = 
       0.9293785274556372, $CellContext`c\[Mu]3[7, 0.15000000000000002`] = 
       0.9380147034226399, $CellContext`c\[Mu]3[7, 0.2] = 
       0.9468130185514753, $CellContext`c\[Mu]3[7, 0.25] = 
       0.9557780860493266, $CellContext`c\[Mu]3[7, 0.3] = 
       0.9649146959571209, $CellContext`c\[Mu]3[7, 0.35000000000000003`] = 
       0.974227823711979, $CellContext`c\[Mu]3[7, 0.4] = 
       0.9837226392125068, $CellContext`c\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRl[$CellContext`pH] (
          24/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`c\[Mu]2[7, 0.05] = 
       0.004211467156176436, $CellContext`c\[Mu]2[7, 0.1] = 
       0.004250241011767895, $CellContext`c\[Mu]2[7, 0.15000000000000002`] = 
       0.004289736037955221, $CellContext`c\[Mu]2[7, 0.2] = 
       0.00432997256020134, $CellContext`c\[Mu]2[7, 0.25] = 
       0.0043709716756607335`, $CellContext`c\[Mu]2[7, 0.3] = 
       0.004412755290185318, $CellContext`c\[Mu]2[7, 0.35000000000000003`] = 
       0.004455346157482305, $CellContext`c\[Mu]2[7, 0.4] = 
       0.0044987679205716604`, $CellContext`c\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRt[$CellContext`pH] (
          6/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`calfa[7, 0.05] = 
       3.6929713746138985`*^-7, $CellContext`calfa[7, 0.1] = 
       3.659281346592851*^-7, $CellContext`calfa[7, 0.15000000000000002`] = 
       3.625590832460571*^-7, $CellContext`calfa[7, 0.2] = 
       3.591899818451272*^-7, $CellContext`calfa[7, 0.25] = 
       3.558208290273388*^-7, $CellContext`calfa[7, 0.3] = 
       3.5245162330841663`*^-7, $CellContext`calfa[7, 0.35000000000000003`] = 
       3.490823631462794*^-7, $CellContext`calfa[7, 0.4] = 
       3.45713046938191*^-7, $CellContext`calfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`calfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`iccCo $CellContext`iccZe[$CellContext`pH, $CellContext`V1])}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.833120448949697*^9, 3.833120454941825*^9}, {
   3.8331234391288977`*^9, 3.833123456173408*^9}, 3.833123841418751*^9, 
   3.833124535381819*^9, 3.833124920432816*^9, 3.8331269128895073`*^9, 
   3.833127743326366*^9, 3.833281586069581*^9, 3.833282947615799*^9, 
   3.8332843083083496`*^9, 3.833285946800295*^9, 3.833286032328267*^9, 
   3.8336715165883713`*^9, 3.833672956135586*^9, 3.8336737444479733`*^9, 
   3.8336756326717463`*^9, 3.8336769672361174`*^9, 3.833677121285671*^9, 
   3.8336784322520313`*^9, 3.8336786400775332`*^9, 3.833680156299034*^9, 
   3.833950451130539*^9, 3.833950690659932*^9, 3.8339507766464615`*^9, {
   3.8339522374500465`*^9, 3.8339522470734644`*^9}, 3.8339526707815742`*^9, 
   3.8341842837651625`*^9, 3.8341880604149733`*^9, 3.834188093714729*^9, 
   3.8341881418663025`*^9, 3.83418952226609*^9, 3.8341899524920244`*^9, {
   3.834190000375592*^9, 3.8341900016912184`*^9}, 3.834190133564317*^9, 
   3.8342235868433037`*^9, {3.834223746746813*^9, 3.8342237479524994`*^9}, 
   3.834969290752089*^9, {3.834969626878053*^9, 3.8349696565945415`*^9}, 
   3.8350360750663595`*^9, 3.8350468656591887`*^9, 3.835104407257806*^9, {
   3.8351059411415854`*^9, 3.835105944941989*^9}, 3.835315890705059*^9, 
   3.8354437002221923`*^9, 3.835447996986723*^9, 3.835461975482828*^9, 
   3.835462308781576*^9, 3.835525554462947*^9, 3.835556411827731*^9, 
   3.8355614127399096`*^9, 3.835573938791016*^9, 3.8356414661780963`*^9, 
   3.83564431652876*^9, 3.835644509512392*^9, 3.8357226324330378`*^9, 
   3.8357233720880184`*^9, {3.8357234763452053`*^9, 3.8357234770593023`*^9}, 
   3.83572374432109*^9, {3.835723797972968*^9, 3.835723798716386*^9}, 
   3.8357238666303635`*^9, {3.835723925891579*^9, 3.8357239269458375`*^9}, 
   3.8357240332129555`*^9, 3.835786321530398*^9, 3.8357873692469*^9, 
   3.835794229751316*^9, 3.8358115119188695`*^9, 3.835811881545539*^9, 
   3.835812574176404*^9, 3.8358160107586827`*^9, 3.8358170668445845`*^9, 
   3.835826607852086*^9, 3.835866144598921*^9, 3.8358663911724043`*^9, 
   3.835867032325782*^9, 3.835867085319916*^9, {3.835867123447221*^9, 
   3.8358671484738607`*^9}, 3.835877983377989*^9, 3.8360096266125917`*^9, 
   3.836075212992935*^9, 3.836078521067088*^9, 3.836151899897149*^9, 
   3.836765185600883*^9, 3.836765230663715*^9, {3.836765278323419*^9, 
   3.836765299069734*^9}, 3.836765332326374*^9, 3.836765545704178*^9, {
   3.8367666789937143`*^9, 3.836766703664256*^9}, 3.836767830320874*^9, 
   3.836767861517939*^9, {3.836768634856634*^9, 3.836768676631816*^9}, 
   3.836769235814825*^9, 3.8367693462050734`*^9, 3.836831509985971*^9, {
   3.83683154492067*^9, 3.836831564080923*^9}, 3.836831684151471*^9, {
   3.8368318850984898`*^9, 3.836831905989785*^9}, 3.83683213590464*^9, 
   3.836832269959394*^9, {3.836832353251812*^9, 3.836832431663784*^9}, {
   3.83683254209587*^9, 3.836832556392508*^9}, {3.836832903056425*^9, 
   3.836832950468794*^9}, {3.836832982092228*^9, 3.836833010491548*^9}, 
   3.836833399393239*^9, {3.8368334320249777`*^9, 3.836833517098978*^9}, 
   3.8370061078327913`*^9, 3.837006199061983*^9, 3.8370062467493*^9, 
   3.837006292535182*^9, 3.83700779047501*^9, 3.8370079666130357`*^9, {
   3.8370207073244133`*^9, 3.837020729695984*^9}, {3.837020901845067*^9, 
   3.837020924341134*^9}, {3.837021036105297*^9, 3.8370210605441103`*^9}, 
   3.83702114331155*^9, 3.8371100193697844`*^9, 3.837110158485896*^9, 
   3.837110204353754*^9, 3.837110263395177*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"2ba536f6-5548-4e23-ac17-3ae0de731ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"vdecaytime", "[", 
                RowBox[{"pH", ",", " ", "0.05"}], "]"}], "*", 
               RowBox[{"valfa", "[", 
                RowBox[{"pH", ",", " ", "0.05"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], ",",
               " ", 
              RowBox[{
               RowBox[{
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"vdecaytime", "[", 
                    RowBox[{"pH", ",", " ", "0.05"}], "]"}], "*", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "0.05"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], 
                    ")"}], "/", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "0.05"}], "]"}]}], "/", "24"}], 
                   "*", 
                   RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", " ", "pH", ",", " ", 
                  "0.05"}], "]"}], "^", "2"}], "*", 
               RowBox[{"vgamma", "[", 
                RowBox[{"pH", ",", " ", "0.05"}], "]"}], "*", 
               RowBox[{
                RowBox[{
                 RowBox[{"ivcZe", "[", 
                  RowBox[{"pH", ",", " ", "0.05"}], "]"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"vdecaytime", "[", 
                RowBox[{"pH", ",", " ", "0.15"}], "]"}], "*", 
               RowBox[{"valfa", "[", 
                RowBox[{"pH", ",", " ", "0.15"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], ",",
               " ", 
              RowBox[{
               RowBox[{
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"vdecaytime", "[", 
                    RowBox[{"pH", ",", " ", "0.15"}], "]"}], "*", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "0.15"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "20"}]}], 
                    ")"}], "/", 
                    RowBox[{"valfa", "[", 
                    RowBox[{"pH", ",", " ", "0.15"}], "]"}]}], "/", "24"}], 
                   "*", 
                   RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", " ", "pH", ",", " ", 
                  "0.15"}], "]"}], "^", "2"}], "*", 
               RowBox[{"vgamma", "[", 
                RowBox[{"pH", ",", " ", "0.15"}], "]"}], "*", 
               RowBox[{
                RowBox[{
                 RowBox[{"ivcZe", "[", 
                  RowBox[{"pH", ",", " ", "0.15"}], "]"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"cdecaytime", "[", 
                RowBox[{"pH", ",", "0.05"}], "]"}], "*", 
               RowBox[{"calfa", "[", 
                RowBox[{"pH", ",", "0.05"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"c\[CapitalOmega]", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"cdecaytime", "[", 
                    RowBox[{"pH", ",", "0.05"}], "]"}], "*", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "0.05"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ")"}], "/", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "0.05"}], "]"}]}], "/", "24"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", "pH", ",", "0.05"}], "]"}], 
                 "^", "2"}]}], "*", 
               RowBox[{"cgamma", "[", 
                RowBox[{"pH", ",", "0.05"}], "]"}], "*", 
               RowBox[{
                RowBox[{
                 RowBox[{"iccZe", "[", 
                  RowBox[{"pH", ",", "0.05"}], "]"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
            StyleBox[",",
             Background->RGBColor[1, 0.9, 1]], 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}], 
          StyleBox[",",
           Background->RGBColor[1, 0.9, 1]], 
          StyleBox["\[IndentingNewLine]",
           Background->RGBColor[1, 0.9, 1]], "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"24", "*", 
               RowBox[{"cdecaytime", "[", 
                RowBox[{"pH", ",", "0.15"}], "]"}], "*", 
               RowBox[{"calfa", "[", 
                RowBox[{"pH", ",", "0.15"}], "]"}], "*", 
               RowBox[{"10", "^", "6"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"c\[CapitalOmega]", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"24", "*", 
                    RowBox[{"cdecaytime", "[", 
                    RowBox[{"pH", ",", "0.15"}], "]"}], "*", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "0.15"}], "]"}], "*", 
                    RowBox[{"10", "^", "6"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "20"}]}], ")"}], "/", 
                    RowBox[{"calfa", "[", 
                    RowBox[{"pH", ",", "0.15"}], "]"}]}], "/", "24"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], ",", "pH", ",", "0.15"}], "]"}], 
                 "^", "2"}]}], "*", 
               RowBox[{"cgamma", "[", 
                RowBox[{"pH", ",", "0.15"}], "]"}], "*", 
               RowBox[{
                RowBox[{
                 RowBox[{"iccZe", "[", 
                  RowBox[{"pH", ",", "0.15"}], "]"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}], "/", "12"}]}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], 
           StyleBox["]",
            Background->RGBColor[1, 0.925, 0.925]]}]}], "\[IndentingNewLine]",
          "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<t(\[Mu]s)\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Volts\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Bold", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Dashed", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<in vitro\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Orange", ",", "Dashed", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"electrolyte", ",", "\"\<intracellular\>\""}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Orange", ",", 
               RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
             "None"}], "]"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      "\"\<Plot-8: Fall of voltage as function of time for input voltages \
0.05V and 0.15V.\>\"", ",", "Bottom", ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"electrolyte", ",", 
        RowBox[{"{", "\"\<intracellular\>\"", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<in vitro\>\"", ",", "\"\<intracellular\>\""}], "}"}], ",",
       "CheckboxBar"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pH", ",", "7"}], "}"}], ",", "6", ",", "8", ",", 
      RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8275481956478252`*^9, 3.827548333929298*^9}, {
   3.8275484185901423`*^9, 3.8275484238246727`*^9}, {3.827549398259506*^9, 
   3.827549405403124*^9}, {3.8275496631258497`*^9, 3.827549673571116*^9}, {
   3.827572181704358*^9, 3.8275721881925488`*^9}, {3.8275722261197324`*^9, 
   3.827572229559683*^9}, {3.827833937961677*^9, 3.827834103691618*^9}, {
   3.8278341485304103`*^9, 3.8278342310676317`*^9}, {3.8278343208987164`*^9, 
   3.827834323437561*^9}, {3.8278343685235505`*^9, 3.827834375146633*^9}, {
   3.827834472245885*^9, 3.827834508326207*^9}, {3.8278347029916105`*^9, 
   3.8278347078479347`*^9}, {3.8278347455366964`*^9, 3.827834747107483*^9}, {
   3.8278348644065847`*^9, 3.827834899359195*^9}, {3.82783494469096*^9, 
   3.8278349698264985`*^9}, {3.8278350152334013`*^9, 3.827835134269457*^9}, 
   3.83152277179473*^9, {3.831735193344984*^9, 3.8317351966871696`*^9}, {
   3.8317446413135247`*^9, 3.8317446444664755`*^9}, {3.8317447058845577`*^9, 
   3.831744745684001*^9}, {3.831744791497981*^9, 3.8317447936551332`*^9}, {
   3.8317448240800543`*^9, 3.8317448278817186`*^9}, {3.8317448858726225`*^9, 
   3.8317449600368805`*^9}, {3.8317449955516324`*^9, 3.831744996665638*^9}, {
   3.8317456237840614`*^9, 3.8317456278798246`*^9}, {3.831766181541244*^9, 
   3.8317662067356977`*^9}, {3.8317662890331373`*^9, 
   3.8317664119002485`*^9}, {3.831766465276833*^9, 3.8317665002510624`*^9}, {
   3.831766539563315*^9, 3.831766714482947*^9}, {3.831766785734331*^9, 
   3.831766802655225*^9}, {3.831766835304449*^9, 3.831766838501505*^9}, {
   3.8317668825225153`*^9, 3.831766939140979*^9}, {3.831767096787646*^9, 
   3.831767129341649*^9}, {3.831767222309332*^9, 3.8317672433809366`*^9}, {
   3.831767333207548*^9, 3.8317673826445045`*^9}, {3.8317674425666*^9, 
   3.8317675107039194`*^9}, {3.8317675759911213`*^9, 
   3.8317675763574133`*^9}, {3.8317676147077284`*^9, 3.831767658241737*^9}, {
   3.831768083516697*^9, 3.8317680903982396`*^9}, {3.8317681983353453`*^9, 
   3.831768275214133*^9}, {3.8317683302313166`*^9, 3.8317684154858866`*^9}, {
   3.831768470572115*^9, 3.831768557070712*^9}, {3.831768659381728*^9, 
   3.8317686797973595`*^9}, {3.8317687419053173`*^9, 
   3.8317688041645384`*^9}, {3.8317688721038866`*^9, 3.831768964440292*^9}, {
   3.831769029843504*^9, 3.8317690967479734`*^9}, {3.831770020460309*^9, 
   3.831770021723096*^9}, {3.8317701879240623`*^9, 3.8317702326844993`*^9}, {
   3.831770282501418*^9, 3.831770361008363*^9}, 3.8317704234918137`*^9, {
   3.831770484253719*^9, 3.8317705291640773`*^9}, {3.831770635346342*^9, 
   3.8317706624929657`*^9}, {3.831770692720023*^9, 3.831770802460472*^9}, {
   3.831770925322854*^9, 3.8317709331037436`*^9}, {3.83177096531085*^9, 
   3.831770966291791*^9}, {3.831770997305682*^9, 3.831771070179183*^9}, {
   3.831771116647766*^9, 3.831771156012477*^9}, {3.8317711886826057`*^9, 
   3.8317712011632667`*^9}, {3.8317712446802416`*^9, 
   3.8317712455277405`*^9}, {3.8317712967233953`*^9, 3.831771324572055*^9}, {
   3.8317713560800085`*^9, 3.831771512482967*^9}, {3.8323787999469404`*^9, 
   3.8323788052847385`*^9}, {3.833120431802185*^9, 3.8331204400634193`*^9}, 
   3.8339202761270027`*^9, 3.833950641395626*^9, {3.833951995179822*^9, 
   3.8339519998083305`*^9}, {3.833952038083107*^9, 3.8339521365519094`*^9}, {
   3.834189545635045*^9, 3.834189556526395*^9}, {3.834190140341177*^9, 
   3.834190149384305*^9}, {3.835046873511832*^9, 3.8350468741941175`*^9}, {
   3.835816064429928*^9, 3.8358160811160326`*^9}, 3.8358161171569996`*^9, 
   3.835866166908367*^9, 3.8358778345712843`*^9},
 CellLabel->
  "In[627]:=",ExpressionUUID->"960b1621-be05-4cf4-b851-fb0ba06423df"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`electrolyte$$ = {
    "intracellular"}, $CellContext`pH$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`electrolyte$$], {"intracellular"}}, {
      "in vitro", "intracellular"}}, {{
       Hold[$CellContext`pH$$], 7}, 6, 8}}, Typeset`size$$ = {
    1040., {218., 195.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`electrolyte$$ = {
         "intracellular"}, $CellContext`pH$$ = 7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        ListLinePlot[{
          
          Table[{24 $CellContext`vdecaytime[$CellContext`pH$$, 
              0.05] $CellContext`valfa[$CellContext`pH$$, 0.05] 
            10^6 (($CellContext`n - 1)/
             20), $CellContext`v\[CapitalOmega][(((
                  24 $CellContext`vdecaytime[$CellContext`pH$$, 
                    0.05] $CellContext`valfa[$CellContext`pH$$, 0.05] 
                  10^6 (($CellContext`n - 1)/
                   20))/$CellContext`valfa[$CellContext`pH$$, 0.05])/24) 
               10^(-6), $CellContext`pH$$, 
               0.05]^2 $CellContext`vgamma[$CellContext`pH$$, 
              0.05] ($CellContext`ivcZe[$CellContext`pH$$, 0.05]^(1/2)/
             12)}, {$CellContext`n, 1, 20}], 
          
          Table[{24 $CellContext`vdecaytime[$CellContext`pH$$, 
              0.15] $CellContext`valfa[$CellContext`pH$$, 0.15] 
            10^6 (($CellContext`n - 1)/
             20), $CellContext`v\[CapitalOmega][(((
                  24 $CellContext`vdecaytime[$CellContext`pH$$, 
                    0.15] $CellContext`valfa[$CellContext`pH$$, 0.15] 
                  10^6 (($CellContext`n - 1)/
                   20))/$CellContext`valfa[$CellContext`pH$$, 0.15])/24) 
               10^(-6), $CellContext`pH$$, 
               0.15]^2 $CellContext`vgamma[$CellContext`pH$$, 
              0.15] ($CellContext`ivcZe[$CellContext`pH$$, 0.15]^(1/2)/
             12)}, {$CellContext`n, 1, 20}], 
          
          Table[{24 $CellContext`cdecaytime[$CellContext`pH$$, 
              0.05] $CellContext`calfa[$CellContext`pH$$, 0.05] 
            10^6 (($CellContext`n - 1)/
             20), (-$CellContext`c\[CapitalOmega][(((
                   24 $CellContext`cdecaytime[$CellContext`pH$$, 
                    0.05] $CellContext`calfa[$CellContext`pH$$, 0.05] 
                   10^6 (($CellContext`n - 1)/
                    20))/$CellContext`calfa[$CellContext`pH$$, 0.05])/24) 
                10^(-6), $CellContext`pH$$, 
                0.05]^2) $CellContext`cgamma[$CellContext`pH$$, 
              0.05] ($CellContext`iccZe[$CellContext`pH$$, 0.05]^(1/2)/
             12)}, {$CellContext`n, 1, 20}], 
          
          Table[{24 $CellContext`cdecaytime[$CellContext`pH$$, 
              0.15] $CellContext`calfa[$CellContext`pH$$, 0.15] 
            10^6 (($CellContext`n - 1)/
             20), (-$CellContext`c\[CapitalOmega][(((
                   24 $CellContext`cdecaytime[$CellContext`pH$$, 
                    0.15] $CellContext`calfa[$CellContext`pH$$, 0.15] 
                   10^6 (($CellContext`n - 1)/
                    20))/$CellContext`calfa[$CellContext`pH$$, 0.15])/24) 
                10^(-6), $CellContext`pH$$, 
                0.15]^2) $CellContext`cgamma[$CellContext`pH$$, 
              0.15] ($CellContext`iccZe[$CellContext`pH$$, 0.15]^(1/2)/
             12)}, {$CellContext`n, 1, 20}]}, PlotRange -> Full, ImageSize -> 
         500, AxesLabel -> {
           Style["t(\[Mu]s)", Bold, 18], 
           Style["Volts", Bold, 18]}, AxesStyle -> Directive[Bold, 18], 
         PlotStyle -> {
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "in vitro"], {Blue, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {
            Orange, Dashed, 
             Thickness[0.006]}, None], 
           If[
            MemberQ[$CellContext`electrolyte$$, "intracellular"], {Orange, 
             Thickness[0.006]}, None]}], 
        "Plot-8: Fall of voltage as function of time for input voltages 0.05V \
and 0.15V.", Bottom, LabelStyle -> Directive[Bold, 18]], 
      "Specifications" :> {{{$CellContext`electrolyte$$, {"intracellular"}}, {
         "in vitro", "intracellular"}, ControlType -> CheckboxBar}, 
        Delimiter, {{$CellContext`pH$$, 7}, 6, 8, Appearance -> "Labeled"}}, 
      "Options" :> {SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1097., {273., 280.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`vdecaytime[7, 0.05] = 
       3.787007288822752, $CellContext`vdecaytime[7, 0.1] = 
       3.789260480380777, $CellContext`vdecaytime[7, 0.15000000000000002`] = 
       3.7915133993113734`, $CellContext`vdecaytime[7, 0.2] = 
       3.7937660457415916`, $CellContext`vdecaytime[7, 0.25] = 
       3.796018419798366, $CellContext`vdecaytime[7, 0.3] = 
       3.7982705216085124`, $CellContext`vdecaytime[7, 0.35000000000000003`] = 
       3.8005223512987345`, $CellContext`vdecaytime[7, 0.4] = 
       3.802773908995617, $CellContext`vdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`v\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`v\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`v\[CapitalOmega][0, 7, 0.05] = 
       0.2924367737707741, $CellContext`v\[CapitalOmega][0, 7, 0.1] = 
       0.4135680516032614, $CellContext`v\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`v\[CapitalOmega][0, 7, 0.2] = 
       0.5848735475415483, $CellContext`v\[CapitalOmega][0, 7, 0.25] = 
       0.6539085052721784, $CellContext`v\[CapitalOmega][0, 7, 0.3] = 
       0.7163208777641159, $CellContext`v\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`v\[CapitalOmega][0, 7, 0.4] = 
       0.8271361032065228, $CellContext`v\[CapitalOmega][0., 7, 0.05] = 
       0.2924367737707741, $CellContext`v\[CapitalOmega][
        0.18935036444113756`, 7, 0.05] = 
       0.26062777210895666`, $CellContext`v\[CapitalOmega][
        0.37870072888227513`, 7, 0.05] = 
       0.23228034283026, $CellContext`v\[CapitalOmega][
        0.5680510933234127, 7, 0.05] = 
       0.2070173070388692, $CellContext`v\[CapitalOmega][
        0.7574014577645503, 7, 0.05] = 
       0.1845027234378906, $CellContext`v\[CapitalOmega][
        0.946751822205688, 7, 0.05] = 
       0.16443733904974492`, $CellContext`v\[CapitalOmega][
        1.1361021866468255`, 7, 0.05] = 
       0.14655455364623343`, $CellContext`v\[CapitalOmega][
        1.3254525510879633`, 7, 0.05] = 
       0.13061683646469108`, $CellContext`v\[CapitalOmega][
        1.5148029155291005`, 7, 0.05] = 
       0.11641254209433174`, $CellContext`v\[CapitalOmega][
        1.7041532799702381`, 7, 0.05] = 
       0.10375307934384048`, $CellContext`v\[CapitalOmega][
        1.893503644411376, 7, 0.05] = 
       0.0924703927378208, $CellContext`v\[CapitalOmega][
        2.0828540088525136`, 7, 0.05] = 
       0.0824147212533237, $CellContext`v\[CapitalOmega][
        2.272204373293651, 7, 0.05] = 
       0.07345260316313255, $CellContext`v\[CapitalOmega][
        2.4615547377347884`, 7, 0.05] = 
       0.06546509952607692, $CellContext`v\[CapitalOmega][
        2.6509051021759267`, 7, 0.05] = 
       0.05834621205453746, $CellContext`v\[CapitalOmega][
        2.8402554666170636`, 7, 0.05] = 
       0.052001473872723906`, $CellContext`v\[CapitalOmega][
        3.029605831058201, 7, 0.05] = 
       0.04634669411788734, $CellContext`v\[CapitalOmega][
        3.2189561954993384`, 7, 0.05] = 
       0.04130683948019694, $CellContext`v\[CapitalOmega][
        3.4083065599404763`, 7, 0.05] = 
       0.03681503766636517, $CellContext`v\[CapitalOmega][
        3.597656924381614, 7, 0.05] = 
       0.03281168944106495, $CellContext`v\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 
       0.2924367737707741 
        Sqrt[1/(E^(1.2159576695801135` $CellContext`w) (1 + 
           0.00033301395916212484` (1 - 
             E^((-1.2159576695801135`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       0.4135680516032614 
        Sqrt[1/(E^(1.215147669014887 $CellContext`w) (1 + 
           0.0006660279183242498 (1 - 
             E^((-1.215147669014887) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       0.5065153501725065 
        Sqrt[1/(E^(1.21433874769529 $CellContext`w) (1 + 
           0.000999041877486375 (1 - 
             E^((-1.21433874769529) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       0.5848735475415483 
        Sqrt[1/(E^(1.2135309034641473` $CellContext`w) (1 + 
           0.0013320558366484998` (1 - 
             E^((-1.2135309034641473`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       0.6539085052721784 
        Sqrt[1/(E^(1.212724134170033 $CellContext`w) (1 + 
           0.001665069795810624 (1 - 
             E^((-1.212724134170033) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       0.7163208777641159 
        Sqrt[1/(E^(1.2119184376672527` $CellContext`w) (1 + 
           0.0019980837549727487` (1 - 
             E^((-1.2119184376672527`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       0.7737149776075247 
        Sqrt[1/(E^(1.2111138118158211` $CellContext`w) (1 + 
           0.0023310977141348744` (1 - 
             E^((-1.2111138118158211`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       0.8271361032065228 
        Sqrt[1/(E^(1.2103102544814472` $CellContext`w) (1 + 
           0.0026641116732969996` (1 - 
             E^((-1.2103102544814472`) $CellContext`w))))], $CellContext`v\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`v\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`vwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`v\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`vwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`v\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`vwo[7, 0.05] = 
       0.2924367737707741, $CellContext`vwo[7, 0.1] = 
       0.4135680516032614, $CellContext`vwo[7, 0.15000000000000002`] = 
       0.5065153501725065, $CellContext`vwo[7, 0.2] = 
       0.5848735475415483, $CellContext`vwo[7, 0.25] = 
       0.6539085052721784, $CellContext`vwo[7, 0.3] = 
       0.7163208777641159, $CellContext`vwo[7, 0.35000000000000003`] = 
       0.7737149776075247, $CellContext`vwo[7, 0.4] = 
       0.8271361032065228, $CellContext`vwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`vwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`vgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`ivcZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`vgamma[7, 0.05] = 
       0.00011001334961716237`, $CellContext`vgamma[7, 0.1] = 
       0.0001099767012523908, $CellContext`vgamma[7, 0.15000000000000002`] = 
       0.00010994008952566853`, $CellContext`vgamma[7, 0.2] = 
       0.00010990351437592842`, $CellContext`vgamma[7, 0.25] = 
       0.00010986697574224596`, $CellContext`vgamma[7, 0.3] = 
       0.00010983047356383867`, $CellContext`vgamma[7, 0.35000000000000003`] = 
       0.00010979400778006591`, $CellContext`vgamma[7, 0.4] = 
       0.00010975757833042813`, $CellContext`vgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`vgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`ivcb $CellContext`ivcZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`ivcCo))), $CellContext`ivcCo = 
       6.299542694592175*^-17, $CellContext`ivcZe[7, 0.05] = 
       4.0670900535391555`*^9, $CellContext`ivcZe[7, 0.1] = 
       4.06980111930194*^9, $CellContext`ivcZe[7, 0.15000000000000002`] = 
       4.072512182337827*^9, $CellContext`ivcZe[7, 0.2] = 
       4.0752232426522937`*^9, $CellContext`ivcZe[7, 0.25] = 
       4.077934300250798*^9, $CellContext`ivcZe[7, 0.3] = 
       4.080645355138787*^9, $CellContext`ivcZe[7, 0.35000000000000003`] = 
       4.083356407321691*^9, $CellContext`ivcZe[7, 0.4] = 
       4.0860674568049264`*^9, $CellContext`ivcZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`ivcZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 + 
            80 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`ivcRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`ivcRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 - 18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`ivcb 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^3 \
$CellContext`ivcRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`ivcb 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`ivcb^2 
              Pi^8 $CellContext`ivcRl[$CellContext`pH]^2 \
$CellContext`ivcRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`ivcb^2 
             Pi^4 $CellContext`ivcRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`ivcb^3 
              Pi^8 $CellContext`ivcRl[$CellContext`pH] \
$CellContext`ivcRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`ivcb^4 
              Pi^8 $CellContext`ivcRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`ivcRl[7] = 
       1.5454404198356032`*^8, $CellContext`ivcRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`ivclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`ivckeff[$CellContext`pH] + \
$CellContext`ivcG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`ivclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`uLm = 5.4*^-9, $CellContext`ivclb = 
       6.879135666749031*^-10, $CellContext`rzp = 
       7/2000000000, $CellContext`ivckeff[7] = 
       1.7681844474093507`, $CellContext`ivckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivckeff[$CellContext`pH] = \
$CellContext`ivckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`ivclambda^2 $CellContext`CylRadd)/($CellContext`ivcepsilon \
$CellContext`R $CellContext`ivcT (($CellContext`ivclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`ivccBulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`ivccBulk]) (
           1 - (($CellContext`ivclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`ivclb + \
$CellContext`CylRadd)/$CellContext`ivclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda])))), \
$CellContext`ivckinf = 1.9314471153888395`, $CellContext`F = 
       120606665154137523/1250000000000, $CellContext`f\[Sigma] = 
       InterpolatingFunction[{{5., 9.}}, {
         5, 7, 0, {5}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5., 6., 
         7., 8., 9.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5}, {
          0.006384780569313849, -0.011734191316576804`, \
-0.024158629181187535`, -0.029335478291442008`, -0.03589282049776434}}, {
         Automatic}], $CellContext`ivclambda = 
       9.80026189765645*^-10, $CellContext`CylRadd = 
       7/2000000000, $CellContext`ivcepsilon = 
       6.937964486353825*^-10, $CellContext`R = 
       207861565453831/25000000000000, $CellContext`ivcT = 
       310, $CellContext`z = {1, 1, -1, -2}, $CellContext`um = {
        9.236401606278588*^-13, 7.786293805158486*^-13, 
        1.151083353316855*^-12, 
        4.4847488115434674`*^-13}, $CellContext`ivccBulk = {100, 0, 100, 
        0}, $CellContext`ivcG = 0.20882239556228072`, $CellContext`mu = 
       0.0008430378212220461, $CellContext`ivcb = 
       0.4275963332672946, $CellContext`ivcRt[7] = 
       3.0089899796738666`*^6, $CellContext`ivcRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcRt[$CellContext`pH] = \
$CellContext`ivclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`ivckinf + \
$CellContext`ivcdeltak[$CellContext`pH]])), $CellContext`ivcdeltak[
        7] = -0.006266587220405351, $CellContext`ivcdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`ivcdeltak[$CellContext`pH] = \
(-$CellContext`ivcalfa2) ((($CellContext`ivclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`ivclb)/$CellContext`rzp]) \
($CellContext`ivcEp[$CellContext`pH, ($CellContext`ivclb + \
$CellContext`rzp)/$CellContext`ivclambda] + \
$CellContext`ivcEp[$CellContext`pH, $CellContext`rzp/$CellContext`ivclambda]) + \
$CellContext`ivckinf (($CellContext`ivclb/
             Log[($CellContext`rzp + \
$CellContext`ivclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`ivcalfa2 = -7.926125645348826, \
$CellContext`ivcEp[
        7, 3.571333130226815] = -0.030141710811672343`, $CellContext`ivcEp[
        7, 4.273266990626408] = -0.01372097395564544, $CellContext`ivcEp[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`ivcEp[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`ivclambda (
          BesselK[0, $CellContext`r]/($CellContext`ivcepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`ivclambda]))), \
$CellContext`v\[Mu]3[7, 0.05] = 
       0.9119682521850851, $CellContext`v\[Mu]3[7, 0.1] = 
       0.9113607517611654, $CellContext`v\[Mu]3[7, 0.15000000000000002`] = 
       0.9107540607714676, $CellContext`v\[Mu]3[7, 0.2] = 
       0.9101481775981105, $CellContext`v\[Mu]3[7, 0.25] = 
       0.9095431006275249, $CellContext`v\[Mu]3[7, 0.3] = 
       0.9089388282504396, $CellContext`v\[Mu]3[7, 0.35000000000000003`] = 
       0.9083353588618659, $CellContext`v\[Mu]3[7, 0.4] = 
       0.9077326908610854, $CellContext`v\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRl[$CellContext`pH] (
          24/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`v\[Mu]2[7, 0.05] = 
       0.0044390312583152125`, $CellContext`v\[Mu]2[7, 0.1] = 
       0.004436074232821443, $CellContext`v\[Mu]2[7, 0.15000000000000002`] = 
       0.00443312114727164, $CellContext`v\[Mu]2[7, 0.2] = 
       0.004430171993790721, $CellContext`v\[Mu]2[7, 0.25] = 
       0.0044272267645245915`, $CellContext`v\[Mu]2[7, 0.3] = 
       0.0044242854516400795`, $CellContext`v\[Mu]2[7, 0.35000000000000003`] = 
       0.004421348047324856, $CellContext`v\[Mu]2[7, 0.4] = 
       0.00441841454378738, $CellContext`v\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`v\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`ivcRt[$CellContext`pH] (
          6/$CellContext`ivcZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`valfa[7, 0.05] = 
       2.5620807435021085`*^-7, $CellContext`valfa[7, 0.1] = 
       2.5637885909541595`*^-7, $CellContext`valfa[7, 0.15000000000000002`] = 
       2.5654964366883895`*^-7, $CellContext`valfa[7, 0.2] = 
       2.5672042807082493`*^-7, $CellContext`valfa[7, 0.25] = 
       2.568912123017177*^-7, $CellContext`valfa[7, 0.3] = 
       2.5706199636186035`*^-7, $CellContext`valfa[7, 0.35000000000000003`] = 
       2.572327802515951*^-7, $CellContext`valfa[7, 0.4] = 
       2.57403563971263*^-7, $CellContext`valfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`valfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`ivcCo $CellContext`ivcZe[$CellContext`pH, $CellContext`V1]), \
$CellContext`cdecaytime[7, 0.05] = 
       3.7469149632790475`, $CellContext`cdecaytime[7, 0.1] = 
       3.7091515705369424`, $CellContext`cdecaytime[7, 0.15000000000000002`] = 
       3.67146962386095, $CellContext`cdecaytime[7, 0.2] = 
       3.6338685240177666`, $CellContext`cdecaytime[7, 0.25] = 
       3.5963476784180934`, $CellContext`cdecaytime[7, 0.3] = 
       3.5589065009731584`, $CellContext`cdecaytime[7, 0.35000000000000003`] = 
       3.5215444119524197`, $CellContext`cdecaytime[7, 0.4] = 
       3.4842608378422733`, $CellContext`cdecaytime[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cdecaytime[$CellContext`pH, \
$CellContext`V0] = Quiet[
          ReplaceAll[$CellContext`w, 
           Part[
            
            Solve[$CellContext`c\[CapitalOmega][$CellContext`w, \
$CellContext`pH, $CellContext`V0] == 
             0.1 $CellContext`c\[CapitalOmega][
               0, $CellContext`pH, $CellContext`V0], $CellContext`w], 
            1]]]), $CellContext`c\[CapitalOmega][0, 7, 0.05] = 
       1.110681320105488, $CellContext`c\[CapitalOmega][0, 7, 0.1] = 
       1.5707405863676336`, $CellContext`c\[CapitalOmega][
        0, 7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`c\[CapitalOmega][0, 7, 0.2] = 
       2.2213626402109754`, $CellContext`c\[CapitalOmega][0, 7, 0.25] = 
       2.4835589330950745`, $CellContext`c\[CapitalOmega][0, 7, 0.3] = 
       2.720602501099272, $CellContext`c\[CapitalOmega][
        0, 7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`c\[CapitalOmega][0, 7, 0.4] = 
       3.141481172735267, $CellContext`c\[CapitalOmega][0., 7, 0.05] = 
       1.110681320105488, $CellContext`c\[CapitalOmega][
        0.18734574816395236`, 7, 0.05] = 
       0.9895473263456691, $CellContext`c\[CapitalOmega][
        0.3746914963279047, 7, 0.05] = 
       0.8817087904229378, $CellContext`c\[CapitalOmega][
        0.5620372444918571, 7, 0.05] = 
       0.7856818009697794, $CellContext`c\[CapitalOmega][
        0.7493829926558094, 7, 0.05] = 
       0.700155238019498, $CellContext`c\[CapitalOmega][
        0.9367287408197617, 7, 0.05] = 
       0.6239685902560709, $CellContext`c\[CapitalOmega][
        1.1240744889837142`, 7, 0.05] = 
       0.5560931922485054, $CellContext`c\[CapitalOmega][
        1.3114202371476664`, 7, 0.05] = 
       0.4956162087902646, $CellContext`c\[CapitalOmega][
        1.4987659853116189`, 7, 0.05] = 
       0.4417268574107251, $CellContext`c\[CapitalOmega][
        1.6861117334755709`, 7, 0.05] = 
       0.3937044784643224, $CellContext`c\[CapitalOmega][
        1.8734574816395233`, 7, 0.05] = 
       0.3509081485700218, $CellContext`c\[CapitalOmega][
        2.0608032298034757`, 7, 0.05] = 
       0.31276759693730555`, $CellContext`c\[CapitalOmega][
        2.2481489779674284`, 7, 0.05] = 
       0.27877523176505054`, $CellContext`c\[CapitalOmega][
        2.4354947261313806`, 7, 0.05] = 
       0.24847911996624805`, $CellContext`c\[CapitalOmega][
        2.622840474295333, 7, 0.05] = 
       0.22147679113764943`, $CellContext`c\[CapitalOmega][
        2.810186222459285, 7, 0.05] = 
       0.19740975821055373`, $CellContext`c\[CapitalOmega][
        2.9975319706232377`, 7, 0.05] = 
       0.17595866418967415`, $CellContext`c\[CapitalOmega][
        3.18487771878719, 7, 0.05] = 
       0.15683897795950402`, $CellContext`c\[CapitalOmega][
        3.3722234669511417`, 7, 0.05] = 
       0.13979717314009987`, $CellContext`c\[CapitalOmega][
        3.559569215115095, 7, 0.05] = 
       0.12460733300864409`, $CellContext`c\[CapitalOmega][$CellContext`w, 7, 
         0.05] = 1.110681320105488 
        Sqrt[1/(E^(1.2278667282468554` $CellContext`w) (1 + 
           0.004513254729597313 (1 - 
             E^((-1.2278667282468554`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.1] = 
       1.5707405863676336` 
        Sqrt[1/(E^(1.2391713699408495` $CellContext`w) (1 + 
           0.009026509459194622 (1 - 
             E^((-1.2391713699408495`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.15000000000000002`] = 
       1.9237564774403768` 
        Sqrt[1/(E^(1.2506862712301865` $CellContext`w) (1 + 
           0.013539764188791938` (1 - 
             E^((-1.2506862712301865`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.2] = 
       2.2213626402109754` 
        Sqrt[1/(E^(1.2624173580686335` $CellContext`w) (1 + 
           0.01805301891838925 (1 - 
             E^((-1.2624173580686335`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.25] = 
       2.4835589330950745` 
        Sqrt[1/(E^(1.274370781399102 $CellContext`w) (1 + 
           0.02256627364798656 (1 - 
             E^((-1.274370781399102) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.3] = 
       2.720602501099272 
        Sqrt[1/(E^(1.2865529279428278` $CellContext`w) (1 + 
           0.027079528377583865` (1 - 
             E^((-1.2865529279428278`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.35000000000000003`] = 
       2.9385865588440443` 
        Sqrt[1/(E^(1.298970431615972 $CellContext`w) (1 + 
           0.03159278310718118 (1 - 
             E^((-1.298970431615972) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][$CellContext`w, 7, 0.4] = 
       3.141481172735267 
        Sqrt[1/(E^(1.3116301856166757` $CellContext`w) (1 + 
           0.036106037836778494` (1 - 
             E^((-1.3116301856166757`) $CellContext`w))))], $CellContext`c\
\[CapitalOmega][
         Pattern[$CellContext`\[Tau], 
          Blank[]], 
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`c\[CapitalOmega][$CellContext`\[Tau], \
$CellContext`pH, $CellContext`V0] = 
        Sqrt[($CellContext`cwo[$CellContext`pH, $CellContext`V0]^2/
           E^((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))/(
          1 + ((4 $CellContext`c\[Mu]2[$CellContext`pH, $CellContext`V0] \
$CellContext`cwo[$CellContext`pH, $CellContext`V0]^2)/(
            5 $CellContext`c\[Mu]3[$CellContext`pH, $CellContext`V0])) (1 - 
            E^(-((4 $CellContext`\[Tau] $CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V0])/3))))]), $CellContext`cwo[7, 0.05] = 
       1.110681320105488, $CellContext`cwo[7, 0.1] = 
       1.5707405863676336`, $CellContext`cwo[7, 0.15000000000000002`] = 
       1.9237564774403768`, $CellContext`cwo[7, 0.2] = 
       2.2213626402109754`, $CellContext`cwo[7, 0.25] = 
       2.4835589330950745`, $CellContext`cwo[7, 0.3] = 
       2.720602501099272, $CellContext`cwo[7, 0.35000000000000003`] = 
       2.9385865588440443`, $CellContext`cwo[7, 0.4] = 
       3.141481172735267, $CellContext`cwo[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          
          Blank[]]] := ($CellContext`cwo[$CellContext`pH, $CellContext`V0] = \
($CellContext`V0 (12/(Abs[
             $CellContext`cgamma[$CellContext`pH, $CellContext`V0]] \
$CellContext`iccZe[$CellContext`pH, $CellContext`V0]^(1/2))))^(1/
          2)), $CellContext`cgamma[
        7, 0.05] = -7.88225965828913*^-6, $CellContext`cgamma[
        7, 0.1] = -7.918461456000264*^-6, $CellContext`cgamma[
        7, 0.15000000000000002`] = -7.955167218132837*^-6, \
$CellContext`cgamma[7, 0.2] = -7.992388759854252*^-6, $CellContext`cgamma[
        7, 0.25] = -8.030138288239181*^-6, $CellContext`cgamma[
        7, 0.3] = -8.068428419162388*^-6, $CellContext`cgamma[
        7, 0.35000000000000003`] = -8.10727219509115*^-6, $CellContext`cgamma[
        7, 0.4] = -8.146683103834562*^-6, $CellContext`cgamma[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`cgamma[$CellContext`pH, $CellContext`V1] = 
        3 (($CellContext`iccCo $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1])/($CellContext`iccb $CellContext`iccZe[$CellContext`pH, \
$CellContext`V1]^(3/2) $CellContext`iccCo))), $CellContext`iccCo = 
       9.699130134892227*^-17, $CellContext`iccZe[7, 0.05] = 
       3.8075284311616607`*^9, $CellContext`iccZe[7, 0.1] = 
       3.772793328577719*^9, $CellContext`iccZe[7, 0.15000000000000002`] = 
       3.7380577248032327`*^9, $CellContext`iccZe[7, 0.2] = 
       3.7033216056453953`*^9, $CellContext`iccZe[7, 0.25] = 
       3.668584956369312*^9, $CellContext`iccZe[7, 0.3] = 
       3.633847761671804*^9, $CellContext`iccZe[7, 0.35000000000000003`] = 
       3.5991100056537004`*^9, $CellContext`iccZe[7, 0.4] = 
       3.5643716717904663`*^9, $CellContext`iccZe[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          Blank[]]] := ($CellContext`iccZe[$CellContext`pH, $CellContext`V1] = 
        Sqrt[(32/225) (25 Pi^4 $CellContext`iccRl[$CellContext`pH]^2 + 
            80 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
            64 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2) + (
            8/225) Sqrt[(-5625) Pi^4 $CellContext`iccRl[$CellContext`pH]^4 + 
             10000 Pi^8 $CellContext`iccRl[$CellContext`pH]^4 - 11250 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] - 5625 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 - 18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 + 
             64000 $CellContext`iccb 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^3 \
$CellContext`iccRt[$CellContext`pH] $CellContext`V1 - 36000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1 - 
             18000 $CellContext`iccb 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 + 
             153600 $CellContext`iccb^2 
              Pi^8 $CellContext`iccRl[$CellContext`pH]^2 \
$CellContext`iccRt[$CellContext`pH]^2 $CellContext`V1^2 - 
             28800 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^2 - 
             14400 $CellContext`iccb^2 
             Pi^4 $CellContext`iccRt[$CellContext`pH]^4 $CellContext`V1^2 + 
             163840 $CellContext`iccb^3 
              Pi^8 $CellContext`iccRl[$CellContext`pH] \
$CellContext`iccRt[$CellContext`pH]^3 $CellContext`V1^3 + 
             65536 $CellContext`iccb^4 
              Pi^8 $CellContext`iccRt[$CellContext`pH]^4 \
$CellContext`V1^4]]), $CellContext`iccRl[7] = 
       1.460980461711672*^8, $CellContext`iccRl[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRl[$CellContext`pH] = \
$CellContext`uLm/(
         N[Pi, 10] (($CellContext`icclb + $CellContext`rzp)^2 - \
$CellContext`rzp^2) ($CellContext`icckeff[$CellContext`pH] + \
$CellContext`iccG (($CellContext`rzp^2 \
$CellContext`f\[Sigma][$CellContext`pH]^2)/($CellContext`mu \
(($CellContext`icclb + $CellContext`rzp)^2 - $CellContext`rzp^2)))))), \
$CellContext`icclb = 6.737941407189008*^-10, $CellContext`icckeff[7] = 
       2.0085564758994368`, $CellContext`icckeff[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`icckeff[$CellContext`pH] = \
$CellContext`icckinf (
          1 - ((2 $CellContext`F $CellContext`f\[Sigma][$CellContext`pH] \
$CellContext`icclambda^2 $CellContext`CylRadd)/($CellContext`iccepsilon \
$CellContext`R $CellContext`iccT (($CellContext`icclb + \
$CellContext`CylRadd)^2 - $CellContext`CylRadd^2))) (
           Total[$CellContext`z^3 $CellContext`um $CellContext`icccbulk]/
           Total[$CellContext`z^2 $CellContext`um $CellContext`icccbulk]) (
           1 - (($CellContext`icclb + $CellContext`CylRadd) 
            BesselK[1, ($CellContext`icclb + \
$CellContext`CylRadd)/$CellContext`icclambda])/($CellContext`CylRadd 
           BesselK[1, $CellContext`CylRadd/$CellContext`icclambda])))), \
$CellContext`icckinf = 2.5694562697192773`, $CellContext`icclambda = 
       6.586986666898878*^-10, $CellContext`iccepsilon = 
       7.08335025024*^-10, $CellContext`iccT = 
       310, $CellContext`icccbulk = {140, 12, 4, 74}, $CellContext`iccG = 
       0.16270373975440133`, $CellContext`iccb = -6.168064974156344, \
$CellContext`iccRt[7] = 2.672546822340888*^6, $CellContext`iccRt[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccRt[$CellContext`pH] = \
$CellContext`icclb/(2 Pi $CellContext`uLm $CellContext`rzp 
         Abs[$CellContext`icckinf + \
$CellContext`iccdeltak[$CellContext`pH]])), $CellContext`iccdeltak[
        7] = -0.44640620869034486`, $CellContext`iccdeltak[
         Pattern[$CellContext`pH, 
          
          Blank[]]] := ($CellContext`iccdeltak[$CellContext`pH] = \
(-$CellContext`iccalfa2) ((($CellContext`icclb/2)/$CellContext`rzp)/
           Log[($CellContext`rzp + $CellContext`icclb)/$CellContext`rzp]) \
($CellContext`iccEP[$CellContext`pH, ($CellContext`icclb + \
$CellContext`rzp)/$CellContext`icclambda] + \
$CellContext`iccEP[$CellContext`pH, $CellContext`rzp/$CellContext`icclambda]) + \
$CellContext`icckinf (($CellContext`icclb/
             Log[($CellContext`rzp + \
$CellContext`icclb)/$CellContext`rzp])/$CellContext`rzp - 
           1)), $CellContext`iccalfa2 = -45.80817013059013, \
$CellContext`iccEP[
        7, 5.313507035908096] = -0.020604582068995035`, $CellContext`iccEP[
        7, 6.336424152326247] = -0.006806232005309268, $CellContext`iccEP[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`r, 
          
          Blank[]]] := ($CellContext`iccEP[$CellContext`pH, $CellContext`r] = \
$CellContext`f\[Sigma][$CellContext`pH] $CellContext`icclambda (
          BesselK[0, $CellContext`r]/($CellContext`iccepsilon 
          BesselK[1, $CellContext`CylRadd/$CellContext`icclambda]))), \
$CellContext`c\[Mu]3[7, 0.05] = 
       0.9209000461851415, $CellContext`c\[Mu]3[7, 0.1] = 
       0.9293785274556372, $CellContext`c\[Mu]3[7, 0.15000000000000002`] = 
       0.9380147034226399, $CellContext`c\[Mu]3[7, 0.2] = 
       0.9468130185514753, $CellContext`c\[Mu]3[7, 0.25] = 
       0.9557780860493266, $CellContext`c\[Mu]3[7, 0.3] = 
       0.9649146959571209, $CellContext`c\[Mu]3[7, 0.35000000000000003`] = 
       0.974227823711979, $CellContext`c\[Mu]3[7, 0.4] = 
       0.9837226392125068, $CellContext`c\[Mu]3[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]3[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRl[$CellContext`pH] (
          24/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`c\[Mu]2[7, 0.05] = 
       0.004211467156176436, $CellContext`c\[Mu]2[7, 0.1] = 
       0.004250241011767895, $CellContext`c\[Mu]2[7, 0.15000000000000002`] = 
       0.004289736037955221, $CellContext`c\[Mu]2[7, 0.2] = 
       0.00432997256020134, $CellContext`c\[Mu]2[7, 0.25] = 
       0.0043709716756607335`, $CellContext`c\[Mu]2[7, 0.3] = 
       0.004412755290185318, $CellContext`c\[Mu]2[7, 0.35000000000000003`] = 
       0.004455346157482305, $CellContext`c\[Mu]2[7, 0.4] = 
       0.0044987679205716604`, $CellContext`c\[Mu]2[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`c\[Mu]2[$CellContext`pH, \
$CellContext`V1] = $CellContext`iccRt[$CellContext`pH] (
          6/$CellContext`iccZe[$CellContext`pH, $CellContext`V1])), \
$CellContext`calfa[7, 0.05] = 
       3.6929713746138985`*^-7, $CellContext`calfa[7, 0.1] = 
       3.659281346592851*^-7, $CellContext`calfa[7, 0.15000000000000002`] = 
       3.625590832460571*^-7, $CellContext`calfa[7, 0.2] = 
       3.591899818451272*^-7, $CellContext`calfa[7, 0.25] = 
       3.558208290273388*^-7, $CellContext`calfa[7, 0.3] = 
       3.5245162330841663`*^-7, $CellContext`calfa[7, 0.35000000000000003`] = 
       3.490823631462794*^-7, $CellContext`calfa[7, 0.4] = 
       3.45713046938191*^-7, $CellContext`calfa[
         Pattern[$CellContext`pH, 
          Blank[]], 
         Pattern[$CellContext`V1, 
          
          Blank[]]] := ($CellContext`calfa[$CellContext`pH, $CellContext`V1] = \
$CellContext`iccCo $CellContext`iccZe[$CellContext`pH, $CellContext`V1])}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.833120467619114*^9, 3.833120476901737*^9}, 
   3.833123844242227*^9, 3.833124552607662*^9, 3.833124923152869*^9, 
   3.833126915560416*^9, 3.833127746126165*^9, 3.833281590343935*^9, 
   3.833282951479519*^9, 3.833284312310936*^9, 3.83328593134647*^9, 
   3.8332860377269773`*^9, 3.8336715205856414`*^9, 3.833672943497128*^9, 
   3.8336737487694187`*^9, 3.8336756364695916`*^9, 3.833676992876814*^9, 
   3.83367712521317*^9, 3.8336784686244593`*^9, 3.833678644401971*^9, 
   3.833680164330783*^9, 3.8339504513858557`*^9, 3.8339506216896234`*^9, 
   3.8339506909052734`*^9, 3.833950794166151*^9, {3.833951974711095*^9, 
   3.8339520114805045`*^9}, {3.8339521392917023`*^9, 3.833952176361841*^9}, 
   3.833952671062792*^9, 3.83418428407038*^9, {3.8341895580546336`*^9, 
   3.834189575910659*^9}, 3.834189952781253*^9, {3.8341900061630697`*^9, 
   3.8341900069989862`*^9}, 3.8341901503017845`*^9, 3.834223587206302*^9, {
   3.8349692912547445`*^9, 3.8349693153856387`*^9}, 3.8349696271493263`*^9, {
   3.8349696600483036`*^9, 3.8349696608481646`*^9}, 3.835036075374529*^9, 
   3.8350468778510013`*^9, {3.8350471479339275`*^9, 3.835047150855632*^9}, {
   3.835047334016839*^9, 3.8350473663705235`*^9}, {3.8350474697706194`*^9, 
   3.835047472847784*^9}, 3.835104407993843*^9, 3.8353158910172567`*^9, 
   3.835443701261408*^9, 3.835447997321828*^9, 3.8354619757910414`*^9, 
   3.835462309067811*^9, 3.8355255547501774`*^9, 3.835556412125903*^9, 
   3.835561413037117*^9, 3.8355739390942063`*^9, 3.8356414664663305`*^9, 
   3.835644316826956*^9, 3.8356445097996254`*^9, 3.8357226327442164`*^9, 
   3.835723372416174*^9, {3.835723481494747*^9, 3.8357234824221*^9}, 
   3.835723744600315*^9, 3.835723801464051*^9, 3.8357238669146137`*^9, {
   3.8357239320762243`*^9, 3.8357239331164618`*^9}, 3.835724033550022*^9, 
   3.835786321749654*^9, 3.835787369468096*^9, {3.8357874317216797`*^9, 
   3.83578744204123*^9}, 3.8357942301025143`*^9, 3.8358115122722096`*^9, 
   3.835811882090107*^9, 3.835812574458686*^9, 3.835816084634721*^9, {
   3.8358161188695874`*^9, 3.835816128628723*^9}, 3.8358170671497383`*^9, 
   3.835826608043625*^9, 3.835866167736353*^9, 3.835866391435275*^9, 
   3.8358713205326023`*^9, 3.835877983579021*^9, 3.8360096269546776`*^9, 
   3.8360752130976553`*^9, 3.836078521196742*^9, 3.8367651859054956`*^9, 
   3.836765230914567*^9, {3.836765278560266*^9, 3.836765299289641*^9}, 
   3.8367653325736713`*^9, 3.8367655459537*^9, 3.836766679228863*^9, 
   3.836766720252355*^9, 3.836767831209634*^9, 3.836767861714573*^9, {
   3.83676863506005*^9, 3.836768676828343*^9}, 3.836769236020121*^9, 
   3.836769346395994*^9, 3.8368315101890097`*^9, {3.836831545111094*^9, 
   3.836831564285861*^9}, 3.836831684350548*^9, {3.836831885294084*^9, 
   3.836831906185356*^9}, 3.8368321361045017`*^9, 3.836832270163414*^9, {
   3.836832353454771*^9, 3.836832431863236*^9}, {3.8368325423124743`*^9, 
   3.836832556601261*^9}, {3.8368329032604933`*^9, 3.836832950674967*^9}, {
   3.836832982315669*^9, 3.8368330107029343`*^9}, 3.836833399599122*^9, {
   3.836833432217869*^9, 3.836833517293461*^9}, 3.837006108080448*^9, 
   3.837006199297155*^9, 3.837006246975155*^9, 3.837006292833582*^9, 
   3.8370077907482777`*^9, 3.8370079668803215`*^9, {3.837020707533285*^9, 
   3.8370207298907833`*^9}, {3.837020902049135*^9, 3.83702092455133*^9}, {
   3.837021036325172*^9, 3.837021060786108*^9}, 3.837021143522396*^9, 
   3.837110019618471*^9, 3.837110158671565*^9, 3.837110204543355*^9, 
   3.837110263591343*^9, {3.8371114151885366`*^9, 3.837111419280425*^9}},
 CellLabel->
  "Out[627]=",ExpressionUUID->"a13cd0f6-09bd-434c-95f4-9294235ce42e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.5 Soliton profile animations in In-vitro electrolytes", "Subsection",
 CellChangeTimes->{{3.836074626867525*^9, 
  3.8360746292191563`*^9}},ExpressionUUID->"221ae3ba-61a9-479d-a5f3-\
a87c8a51725a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"vWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"7", ",", "0.05"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"7", ",", "0.05"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.05"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.05"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"vWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", "25"}], "*", "vbeta", "*", 
            RowBox[{"10", "^", "6"}]}], ",", 
           RowBox[{"235", "*", "vbeta", "*", 
            RowBox[{"10", "^", "6"}]}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "1."}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "Bold", ",", "18"}], "]"}], 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<U/\!\(\*SubscriptBox[\(U\), \(0\)]\)\>\"", ",", "Bold", ",",
               "18"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.05V\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.15V\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       "\"\<Plot-9: Animation for soliton propagation for pH 7 and input \
voltages 0.05V and 0.15V.\>\"", ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "8.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", " ", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.8323287253645353`*^9, {3.8323290555607967`*^9, 3.832329057804975*^9}, 
   3.832329382854526*^9, {3.833126373000136*^9, 3.833126375291419*^9}, 
   3.8339508695064335`*^9, 3.8341842530832834`*^9, {3.8341896101185093`*^9, 
   3.8341896133803167`*^9}, {3.8341901660695314`*^9, 3.8341901665711603`*^9}, 
   3.834190280435638*^9, {3.8350478128300705`*^9, 3.835047813411516*^9}, {
   3.835047921268489*^9, 3.835047939926065*^9}, 3.83504805810798*^9, 
   3.8350481343569756`*^9, 3.835048763312292*^9, {3.8350490150599313`*^9, 
   3.8350490209970164`*^9}, {3.8358161650961266`*^9, 
   3.8358161933524623`*^9}, {3.83581622545166*^9, 3.835816269175894*^9}, 
   3.835866197015711*^9, {3.835868823610269*^9, 3.835868885111112*^9}, {
   3.835869493807177*^9, 3.8358695267809772`*^9}, {3.835869631878641*^9, 
   3.835869632594146*^9}, 3.835877856801518*^9},
 CellLabel->
  "In[628]:=",ExpressionUUID->"a27c61a8-702e-416b-bfc9-a882e0086f5d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i24$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i24$$ = 1}, 
     "\"max\"" :> {$CellContext`i24$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i24$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i24$$], {1, 6, 1},
                 AnimationRate->Automatic,
                 AnimationRepetitions->1,
                 AnimationRunTime->0.,
                 AnimationRunning->False,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3198#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3198#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
LU5kx1WUi6VeaZPuvoYnZdTsn54a5S3WZrRu3/YVT4qLJPxVQv4jsTJbzwkv
enypxSrpcn0rNjH5sCKh65/xpXzuHmP829uiO2sskoqEBFL5FduCzEflopKP
WO88sCOQUvi5RW4d7i2q5hmud2mRQOqjYHogofxT0Q9r9ySf6hBKuVyLdMm7
cE30yasvZ927CaVyfPjGFZT3RBKIqdQcewml0sSXcmijdkXW0kIi/+snlNoe
YHxnsLEj4roRzmU0TCg1oNBa8uUbTiTdLk5OaZpQyng8ZIm/bEPkt1emO802
oRQfxe97HTqLIgnZDUcZFERSk/0vhu9lDousqcjfTb5IJLVfkAveXUMiwjvN
3rFURFK4V4H8tb8HRdqE2+kCaYmkAje5pA5NB0T2qnuFbVmJpPg5Q7/8jekV
ke+deoPyE0lxHVxKHxVqE/nyn265yC0iqdrLv8+5320VGaeZwxMQJJLy5a+g
+aPRImKttRjIfodIivr5ohh3TJNI1Px6DilKJDXBpHiDzq1eZOGjxU98KSKp
x3wxO4TtdSL83NuSx3eJpISkddg8mOtE6sx32zfliKS2bXpOpfpqRMgv2F5a
vkckdec4WJriTo2I5vefWjOKRFLVt27MngNMJOnR26RRJSKpvisvR5eYq0U2
fv5a7XtAJEVDbU2iQFwl8j91cK/k
                    "]]}, Annotation[#, "Charting`Private`Tag$3263#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c41t8btkNkphAZRSlClPF+ziMlUhkRokLJSCUyyohEhEQ2kR2y9/7Y
e7z2Xq8VIUKE8vv+/jrXue773Od+znOd69yH/4HVrUcUZGRknynJyP4/WuT8
6s9Q7sKV9S08FcheYh1bDzICZbvwW02bsR0WrzAp1PPW7kwX7nJI50rCd0fs
X0ueOMbUhZc3J+xJnXmNPWQ5cYCfvAuvPt9Rlb7mijXpBo9RrRNxlvec+tYL
btinGVuftn4iHj+yL/R70x3bEpk1ym4i4i8v0R4NY/PA7lrfvhhcSsQnXDZb
aRQ9MaF/0jMGMURc3njulE6fF+Z7JbkUAog4g9Fa4z3Ce2zVhyNQ0J2I+3Ad
mPEs9sFKj2xhPx4RcUEtI93Lmx+w4/fN2Dt1ifi6V7Czf/FHzCNxYDH3GhH/
NVy/f741AFOTKA5zFCXipuoiS4d6P2F5Dqee3T9OxPNLywRzfgZhRyvDryiy
EPFT5B+YqY6FYHUhv0hsi534H81m7+K0MMxfoOfjSHsnLhJ67RxiisD0svII
CTmd+CgPi1+ldyS21GQbKvmqEy/2qhTKxaOxwtu3L+/c7cT7iyj0+12/YG4k
6dVqhU5c+c37orMZsRj73u9rmrT/6VdbaJjkxmPj3gO/jy514GFmpYYH2xKw
lMPFCZOdHfibggc3lH4nYoRzr/5ahXXgx+1Guc3cvmI05XfSLjp14NvlBUpW
pBSMqCKnu3+/A8/tiYm/cScNM3mwm+0v1IEnUFytdPPJwMR+jtzToe/A1eQd
498qZ2HbTuX0vCvtuHhBAZ/Bx2zML8TFJKOgHX/VqTe/GZCL6QjcZ7GLaMc5
97A7SSl5GF8WqiS4tOMT6j+pW4j5WEHT/pG2K+04g+rEHWOdIszt9mRd0Kl2
fLp51XG1oBhTJVVZGzC04+7jy/7nREqx8d03rYs9bXjex1ybzNsVWIr3g5e5
RW241kh8bAgTjtkcvnzSMaoNZ3uuMlJpXYXRnKNypXvYhu9XaCnVWtVgxLKZ
M11X2/AhmZsxrz1rsUiV+sFwkTZ85ItHXeC3OkzswTvJU79a8dc5HmXJZxux
7RXTiZ99rfiucRFUv2/CapyU/YpKWnHHwhslprvNmE4I7dzVN634bPdahBx/
OzbUyzWf+aAVF034uHbsXwd2l130O8eVVrxv/a8o7kzExrVg4fXJVnzV/hlj
qk8XZhykuThH04r/bAvN7Evtxma6H/5Q+96C273bTDQc6cFMWe2XCptb8Cde
R0Jf8PVhTwIjV975teAizfQGNxcHsJ/E9J8rT1twJZX3kV3WQ5gNM76qo96C
B+5oGhqyjmAb6l1rleItOJ6Y6xvQPoo5fJz+JcTagvcUnZPhTBrHdjo21/3X
m/GfcRrZJjcnMedDtJu/e5vxGAcjHWW9Kcz9w9mthrBmvER/M0Q3fhqjbkfb
Yq+a8YQhq7H66RnMm0HzT6h+M058yqtaIzuH0d94uPNP/r/1L2PuRyfNYx98
7XZNeZpxP8EAgYpTCxhzq9dex78m/P4TkntM3SL2iT7y74XJJvxoanJTv+MS
Fv6+cp8moQnfKh8//4l3FeNqJpJZeTThd2s5tOyF1rBo2mnygUdNODUv5Wc5
+IXxqWxSgHITLr7MqL1usY7Fex2g+nqqCafycrBs+LqBnWzkpGaib8IDRwJj
lv5sYik0Z2kcfjTigWOOqbnGW1iGpwatcmYjXsvpv1XusIOJ1z+gy/rYiEeT
x8XQn97Dcqns6I9YN+LW6kokxt9/MekrXgddbzXiuV70Jn6T+1jx2wiG+fON
eM7Or4dSm2RIrvYbo/rhRpzA76/cTU+BKigqDxX9bsDjf9bRSkhSopo3JGav
kgac1+68akcpNVKq3mD5GdmAV37eo/LlPYCayA6w6To34C+r3r07EEGLVBU4
2fF7DbiP6Zx88Rl61O565rAwNOBKb0Qfnh48iDRwjOMjXwOedEMzkCyWEXX/
Uz+yRd6Ap4rta/zzYEKDLracjXX1+KcB7ZdkAyzIoOId17nkerz2NIl0aJcV
je+Fc4d51eMH1Bb8WyTYkRHh27F983q8+8wD9Mj5MJp2quAxU63Hi1V7FU6M
ciDTsk7ezjP1uMzM8zzjW0fR952p4xcZ6/Hbd5L6PkxyopVXNAIHiHV4/e6+
6aIqD7IuOSpolVOHs9NmSTqIHEcb2yInBj7V4faNHfq6wXzIXgY7CbZ1ePXY
hkttAj/646Au9PV2Hb5hacDhWyeAnIuMhZku/qdnP329ZUsQ/fv94pTD0Tq8
y1XPJgudRFT24SLKI7W4lGVF0zuGU2hilepcYWUtfmjd/IKx02lUaml9/mR8
Ld5SydJ8hOwMsjJWJVBa1OI9xf7sDzXEkOpooYLNjVr8ZZB7jRmTODqhK6g0
de4//AnFXxMqCTR8Y+8m/rsGt1/iTqXjPo8KGs1viQ3X4Dpd3VVOSAoFKPbp
RFfU4OspLtnXX0gjJZlMQyePGrx164WfzGEZxJfHZbJoVoO3pY1FhnnIoh1R
L/M712vwD11PCobp5FG2oJH1RdYavM4tJEvPACHfmDa75M1qfLJsXejCYQVk
yinreHioGg+2d173pb+EuJlY365/qcYb9SwX1vgvo9/vX3s9eFuNy9pW3m9X
uoKIVD98u0yr8WIltXUGJyX0bqc2OEu0Gn96o+DFMo8KMrYTj+BlqcbZb6ff
6vpwDRFWP0d/2KjCCw82CcexXUdrs3bJlmVVuHPOMbhlqobajEhpwzFVOE5b
nUDDrYGSR9SyrrlX4ecPywgUMGuiu13CxcLXqvDPToFfR09poYs3gstDz1bh
bZaWsfw3tRFrI1k1NXMV7mpIT9Hlfhv5v8oLaszAcQfi69dJQnroipXf5yRb
HL+Uit87FHYH/TF5lPRWHscnWbaPW/IYIBONI0XQXIlrxVfVqFvfR1xXV3Ge
gEr860ayzBCfEeqUb27a1anEx6XHvCc5jJGcsNNw0UwFLrxOMd187iFaPaY9
HfKtAvdIEPN8qW2CklhFl17YVOB1T0gjYT6PEPO/8b/nyCrwOeGv34zOmaOG
9SKaQ43luId5UalarAVyWghgWvpQjh9dvvdZRtgSzfUq8qdwl+NS4tdkNJ2f
oc8t3CLvSGW4xR/9mQyh50izakPSJLUM13i1dPIQjzUq/5Z8he9iGU7GWRVR
cuEFsolzvfnvbykuylhG321gi4TD9HRG60px03CJ18af7NAnd3rz8FuluNK9
gi1emZdI+eX0c3vOUvzI0ahHn1Jfob2n5a+0J0twg/Hn4XQSTsjszjNf5mcl
+ApHd4SO12tU/NjXifFCCV6YbzPSJeyGaJ1TLOn/FePsiyfcVDnfoLQY0nUq
/2K89okCi77wW7STtS9PrlOMJy1nVMQreaDr1cfO/uMpxuOMfz6Kt/VES9M6
DNsZRbjiy/rAclpvRNh8sbdhV4TTUgbpb1m9Rx9oApfWsCLcOMri8ZklHyR2
urXtR3shzjVl8MXhlD96Lfe9/HtIIZ4bdLBY7sdH1HmdOmP2XiFe95cyQngm
AD1/Bh8mlgvwFDNyg94fn1CV612X0YICXOTnX4MEmmDEEvjq6ZBLAd6cPWe6
KRGCcvPybvYwFuBv7GXPM1SGIcp6Ikbsy8dLZTRjFvkikHb/smh7dD4+3EUm
8CY8Em1uCx9qFM3Hc+OlLuEt0egqvdK/2s08nDk725PO+wsK5X6wUlWRh4+9
cc5OzYpFMuhzR+nNPBwP5HtxICceeauXVBYdzsMDR3UDzJoS0JBRf2b+WC5u
mmliemQ1ETm+Zf6Y+TQXLzkVnH7Z9itqCRZ1/SadizPlSENPdwriTla1Svmb
g5/oCfMcVkpD5U0e6vEfcvDSEfaS088yEONwHHy5nYMrdtHxMghlofs/Ks99
5snB75B2kjqcstE+4x+m0IxsfEz97vqqfS7SOM5BFmSXjRNnz3Ys+eShWPHz
qx+xbNxvkDqLOisfvU0ejmWLysL3uF+sGJ4pQiea2d8wnsnCvVRU9zI8i1HD
DzXjA2WZeELWteNSGyWIVqKWf3c4Aw/q5D+Wx1qBUrX+km8+zsC9ohJuo/pK
pGp/kbSyk44/Mpe9FKxShT6UfYsncaX/dwcndfyxGiQ2Pus+mvYNr+5UMBVX
q0VEMr6H/XLf8Fl/TpOKZ3WI9WqwYIt+Gg5th4vuTTegPPMOyrrFVPxLbryB
g2wT0valnalwTMVpFYgyPgnNKJTonJgTmYIf5TUV1S1uQxfXCz2+iaTg9Mom
iVGPOtDg4TWTpNKv+L3NnMPbh4mI2+DRyYjhZHzZ0bZ/lKobxaiY6rAbJ+Md
OMuv4tM9SOCCmdfH+SS82OJq31njXpQsaF5M/ywJt7s3lGma3odEWCwWPDcS
8cA3xaNfGQZQ5j8LLnKnRHz8W6Xg1beDSHLp8XVn8kT80OLl3XSWYSTX+CTD
5lACbjCWwrTlNIYq85+OLwfH45tSLv4iBhNIMf4ZkwV3PN7trnH2Ufokavho
pTATF4c/O6r4/EHZFLrm8tza8FQc/mqd/1/QCAm1P7aOH86Mxa+xkKxZDs0g
TT2bntvSsTh5UbAwlfYsyjH9/jjcIwbfyKq5r3b8Oyq+tNjmHxiNq1W2DBl8
XUBVx5bEPGM+49SJtGduqvxATVvLAU7fovCZIbL+QsplROz++cu6OBK/s0/H
oDyyggYz1rTN6yPwYIem5Ifmq2jCe73wfnc4PlX9g5XpxRpaQVuO15dC8Ydi
EYcvl6+j35x/Ri/9CcF98GELyr8b6N/GDpKhCcGXmny+8d36jWiIe7FibMH4
W8f8ptnyLcT47R/FSb4gvFiWKicX/UHs78gecYt+whOOsX77O7iDjhlTNLLI
BeLNF7Vw7Q97SFeMgePvV3982G8l3uokGZjOMA0vVPvh95VoiENnyME+ki2m
f8QHL5G3yV9SpABPjSMPaje98cnBSNoiS0oIpuEWymbywpmeJuTpfaWCxHLe
xc+nPXGtnbckyi1qyLMRyHx/+S3+OalP/J/BAUis0HrSsPIav3iRETO0pIea
0wYbXwSc8AozkaGKowwwFfLA+ZWOA05cDpG4P8UIZBSPqbR8XuD9POSiuw1M
gI2Sjt5xtsJ36ELmCmaZwTF/7RTDjBmebxzldGubBYr9yGTx60a4oqBL+r1j
bMDXMx14O5cfF/Pz60TRh+Fy2nWDmI1rsPeTUdV9jwO+nvBmXBC5C/SE/RYW
m6PAIVdgX53xCAzv9AXp7nPCkHGy6aGrT0E/6vxUbxI3dNRd/yZqZQNRFf2G
gmY8kKV3RVBb3h7UyThLfl85DjZu0mxxPS7gkXL8am0mP4jQh9VPd7pBeUQG
kadDALi0g8i3Ctzhfru1esG+IByM+YjRf/aAqglElnvlJOzN+77icX8Huvfj
FtRihGBJwrtA3Nwb7B4bHRxhPAVjTh5rl9V8wLhTJr40+DRUMrlYPObyh7Cr
6a8cVs7CucQ+K8bJjzCaptZ1PVEMNI4dkR/sDgDGLAURMjlxqMq2uuQU/gnE
eqoYv5yXhO2dqLobTkGwkB9/7ZDyeRBXalLmvR8MBUnO0nWPpSB2iE+tWjAU
in0WJhbnLsCg4M2uTzRhoKZBJWB7SQaYn73SNlkIg6e/V0bts2XhDUW3/oGs
CLDeWSggEglQeuPf2GBgJChJ33Fs8UDwK1TEOM02CuadjD4rnlaAB2femt2U
i4aaxeem+XyKEGmXtcjLEwOLnkI/ViUvQw8+8nR1PwaqDj5xN7x9BQREuEqb
H8TC6CyvfV7HVUDq2U6SvbFgS20wnyGsAvq2V7EopTgwOXBcgybkGnyqtKl6
cioevkyYmmfn3IDMaVr3voh4SEur3v7yUA1aaL9cRgcTIDo6oDDkiAZQaLU2
MK0kQE27t38kwy3gfWns/dIwEfIZWR+/5tECueita1PERBC9UsPohLTBZl6w
PTcvCVaH/dNC83XAn6HUn/tkMmRZuS3XH9SDNAkNDY/QZNCl/kwQd7gDJCfn
ntuvvkKYkhXD+4934V8sa0jl4leI/un45hDcB66GFB3huykgREx136c0glvM
fUPbKBWs2+zFj/w2hmfSllHG2akgf9teVYf6Ifjok99r4U8DUaHOEN8TJlCT
KDoZRfUN7G38PRJCTWG8uTaOyv4bTG4Qf/v/MIOdlTsPn85/A9dzvr1vtS3g
vOy7OdSSDq+VKCWvmT0BjfvHUr7KZ4B1TodTEtszePI214I5IwOSN65XnRiy
gsT28aWpj5lgy669WDFsDVW/bDNVybPgTev20ep5Gxg9cvB5nk0W/PI74+1J
ZQv0OVGvakSyYWDhSyCNtT2E15oO2z/MBqbMMAJe4wBC/RLyZz5nwzT7QJXk
qVeguNu4F8SYA1EaVt/mJZ2ByBh0T+VqDjB+MX0SN+wC9/nuV+69zoEm45cu
tFGu4Ki04fpoNQdMNLgPthe8gbBfBjJDorng0p3jqdvvDvlfaldvWObCNRfr
68x0HkC8cSa1KiUXcjvNHTjUPWH5zydjqblcoCfXp49MfQf0X3c4UwTzgKAX
3j7K6Q1C2g+6uY3zYDlwHzsf9x6MMiUuU47mQVePrxZxxw9cDCJ27Tnzwaex
nV+I6A+RtOT5izr5IOKxvatrHACFBeZP7gfng7rzkZtHHgdCzwPiie6ufPiZ
1NeMvf0Eq0wyY0pMBTD14fbJ+owgYKj4ElJyowC2h8R98xeD4eoRK5q4xgKQ
KLhZKRYbBg/r+ivZqQvhkJ/oEWbuCHCzRg7eioXw6tCVzwcyIuEzb/K5PddC
yP6p12Km+xlKWhm/W1UUwsV6jrQg7hjof2kXO71TCPJVq4T9nS/w6+SYnq5M
ETBY7q6E7cbCWbf0ZpRXBB5j6JSwUAKoiLK7564WQSZhi1FDOxEeDTvJCYkV
Q7LFhU8QnAQxUte/MaYWg5VY2R/ZmylQNpX78M1cMVSkfelDTakw6M91bFOw
BIhBwV1/9b4By8KC32hMCdzPsqTewTNBLFRTSWO0BORrJ0dlbmSD6uWSv7Wc
paDBczLIVykHPKK9n30LLgX5spsfiP/1IVZ1Veh4dynYpCX+3vDMh4ot3YlP
TGVQ0xvDFVRSAL81hTUcfcogyVk2PVGzGNj2/WlXGsugS4tnV7moBMTTf1cZ
U5fDAX5ttRqxMrCgaZC45lYOdy1F1p/croR3eaKL5RXl4KTP9qqLogrijULi
xXfLociaEx+ZqYLRUhO2o/YVMOR5pcmjsQb+mLW1+uZVwKSYdKxNUy1wHJby
2F+tACkp6Us/eupA3Ypyc86yEjRSVzQS6RuhRjC+v8AYh5qOuhG6zVYYJ9J9
PP0Fhz5tHRUzlXbYdbFWjh7F4VaqEddiYgdwPeG7W3OmChoeLzT6lRFBu+Fn
W2pyFcgHJLccLeiBwx/fSPfWVUGKwWm5U3a90K/LFvOPVAUrjW87GS/0ge7C
BSut49XwW7loN7CoH47mNg24YNWg9cSu7pv9AAw66iukGFSDJ24+FnR+EPQZ
XrP8DasGbMhIWS1hCLj7mByFC6uh3Hwl9Yb2MIxGx5E0e6vBL4dC325/GKJN
z193/lUNxf7isz0JI3D/XH1eMnMNGMr9WX6hMArHt3WOdYnVAG2eb//D3lGY
rPrusXujBhhE/D8U3R+D2PeOyycta8DqT/hz3/ExML7FoKPxvgZ6nVwuHNAa
BwHumErHrzUgzUToNiobB9L0OeGk+hqgp6tCExwTkJBe/bFzugZaXIQFx0wm
wMROa/sPeS2cHQiC1sQJOIlmjU7w1cKdBqUgyf4JmKNxaFZDtaC5wyVWuD0B
XztpJV/drQXWx1ka9DSTYB4eGZngWAtvdDnfstNOwmnjs5Qd4bVgFH2l2Y5i
EhZPV1puF9ZCmXJ2sfXiBKT9Uu8V6KsFGQd/4nLVBFiWTRFurtdCsf7yjUzv
CTjr8SLJgaUO2JYU3Y8pTsDSDepD8efqgCpJ7UDZ8jhkHA6zb7tZBwaDFqWC
fuPwbPzUxG/LOuA95f2Smncczn0tVeb3qYMaGvdg/sQxWLW6kX09pQ4c97R5
rx0fA2vy529iZ+qgTnrwGmF7BCRbyBdbKOpBaKFhclx3BH59Crq1yVcPerUx
jNLZw2B7okhQ9V492Hn7bLSrDYH0soqfrVM9vC/nstgIHYTfBcMbMRH1oEDp
rx04MgAOyv/q1/vqwUmg/mX2vX5wfKxkHq3WAHSpdI5VBj0gf36A2PikAYTV
72ccjOmGvV1z2V8+DZC8o0cVT+oClw9+9MqNDeAKd0OjbYmAdHhfWM82wA3v
hzqZnp3wjzd7JIqyEbKcx9LpRTrALbsnfRUa4azAiEq+XytcevXoMPf9Rhg/
X9Uydb0FKBS3XJScG8G2W6qpjL0ZPHq41COLG+HWztV2rboG8PptvHZZoglu
XmzG/aNrYPVthI7ZzSZQNnzcSV1RDXosXWU+Fv/hahEyx2erQOSswruuuCZY
Nqni0o2uhKAShx8bFU3g+4/ucujxCti7mqVxdLgJxO5+LOzMKYMOY15uQ9Zm
yKIWwIKpSuDiz9tu7mLNcEAqt+NKXRHEOn+YTVJthtIPudWET4VgHbaXteTe
DI3nGg6f082H4RNSh5m/NMPera5xws08UMy1dDxf1gwcG9ekS9Vzgb19+Irj
ejNQh/TxnH2ZDS76rGnRTC0gfGhk3UouC+bmrzFVn2mB9kNRHvURGVBEUTJ0
wKQFtOUqI3OC04AvYBWdcWuBjZTbWLhYKnjznEpU+9wC3QUHy+4NfwV9mbBn
Ib0tYOick/XQJAlq6zt6ildboOSE2VeBS4lwVotGdpShFXiuV5VXnE2Av0/t
KAWVWkG7ja2lRTQOTHfTza8at0LombGt5Uux0OE9027h0gozV5nlv9TFQGyC
Vnh2QSuYDhdl/vCJAjoJ3789Xa1ACQ2jcociwaay5sHWciu0iMd4f0oKh8tD
EqJIqA1en8X2zBhCId3U4pOxYhtUP5ZvPjAcDOwbsVse99tAdJPTYb0oCOYO
Mde0hrYBPqsg9yguENQ/Kwv/zG2DfkUVKsNvAVB82tWPtbMNjv70beXw/Ajv
r6zo3DnQDi+l25I+nPGDX10ny50F2+Gp708tvjgf0De8xx8L7VCyOUdFdvY9
nHVs+zHn0A5tepAk4/IOQg5QadIHt0Oe+58ul0ue8C9YvlA0ux1OVKcozHN4
QGdWmpvt93bY/EA35Lf2BmQw0mwYVQc8kBy/wLnpBrEtnNfL+Dpg1vT+aQsa
N7CZ9T5McacDjMXqI7tjnGHEpsrxpF0HfBYmS3p50AmukG1PqAR2wLGyNtVz
/q+Ag9ss7WNzB/iXN8xzdtmDa0oMU95sBySs8f/l+mgH36X7bfvJO8HJ6/yd
+vu2UKKhBDxynaAhvtJ145wNPD5zXSNWrxPm2eheG3NaAxeNprGgQycwTewO
7LE9h5ZJHZvkkE5IW2txUyU8A8eyu29P53fCc/0S8YmnT0Ak9EFwencn8Aex
Tu2VPobh5+ZJ59b+z3/4jkLAAnjYSqe5jhBBRaJqqeSiKdiTYU/uChHhE2nw
R/S0CXQs4xvR0kT48iu4ozXhIQiNKLpMXCHC/GdDKSaHB/C6qZ6aX5sIdk5v
JpXuGkN/gYr/g4dE0BMmz7x/ywjEElo5Em2I0OXTcSIn+z6Mu3QJCwcSgepW
xfATPgO4YKmdbR5LBPm5BYNqtzvgrzcgk5ZFhEIxzq3lP7owp6Rf/aOSCDfb
GL44+OgAOj92TbSDCNVjLhV/xG9DKJ9R97MxIvzVpCedWNKCFcZp/ewlIlRp
vPCoKL0FMd+/W54/2AWG/UOFSR804Hef5YYtVxfgAQOcWcfVQa12xbnwdBds
SnF02SjehORsa+ptmS7YJlawNLy5Dv+iNz7IqnTBBcrn5Bsj10DH14HDSbcL
zuy+ajFWV4HMlzsx5aZd8PRUFMuH4atgqEWWDZ5dYH2b0tZD8goUK7yVeRP8
Hy5OjCrZUwRmMZrqmoQuMK86Meo0dAnMud9fo8rrgrDcdN6sRgWoomXoVqrp
gqjgY54BfgBHf/vre3V1gaRjkFR4CgbPp1mmmya7YK06ce3zlDzwVR7ZuL7f
BeUbe8GNCTLw8luk84dD3SD8+y+qPX0RiOE81J083fA9KvOJSYM0nHoX+4FZ
tBv4i0hUGi+lwO2FIMctQjfsd6Vm/Xe4MGiUHBN0vRsql40iyI5IgrjaaeE+
/W4YqgxWsSGXgMlT52T0XnVDqUlokv0hMZDhyK2K8O4GXIFyQfnSWQiglL42
EtYNNOOuTOUfReD7alHXsa/d0D8edvPM9ilQGJfTv1/YDaYeKdIHXglDeGsF
6Ut9NzTq1Z4fYhaC1WIFy6nebtD4mcN3qfIExAZddTZZ74aU1JlbpdoCsO3W
TJVM0QPc8Y8rrOT5QePZjQ/zLD0QKfaAnfw83385qvPwaf4eWJzKsx+w5QWy
a7diHov3QDWiE3oVdwz0LvQJpUMP6BMWjvAuckG2oF7WsloP6H458PHoTU4w
/nev6vnTHjDncb7cb8ABhzrON2Y69cD+o2GZca7DUBpN17H0vgcG66dfzv5g
A1asYMQ8uQd8M8aPb+EsUMngS0rO7wH6q2u+wtXM8HjUaGGmpge+/SqwuRzH
BDVODFtGEz3AobvEECLGAM+uk/7GLPeAm9WBb+SR9MDFXUw1ttsDj66dpeU9
Rgc2pQ9Z7xztBUorrzxjQxrg9ZHlDBPqheRWjlfneamh5Q4TX59UL5DbX/l5
4CclCPwpFdXU7IVjpm9uVtSQQ0dTgNRHw15grh3vqq0lA8dwU/n2p72guGyg
I5q8j7ovsl675tMLlROe1T8l99DrA9/VvcJ7wU0Ax7hjdpDIQIVOfXIvTF0S
s9g5/ge521uYXKrthWt7Rzw6HvxGYlfB0rWrF8S2qRye8m+i4cOHbSomesFT
U0mA9dc6kiyocpXd64VNy3XF5/VraNwj9J0DfR/Iqpz/q9awiny0n3woONoH
1cm3m7fTfiLS+pEoCek+KG/YvCt5cQn51y7HWV3ug3enBYyOxy8iuaDalAzN
PrjrSl5cK7iAPklaFZ5+1gdvPF3RWdM5hCiUKsyc+0Da35I+8sQsWuziqkvy
6QMK04dmzJvTSNG6oYv/6394w2ALZ9MUWlH4PGhY0Aeh9bcbu5omUSSzzUR0
bR+Qs3vrFmRNoF9ZPMuck31AH4FfsJAfRTGu6+u6K31APHidhTN5GKmqN++E
7PUBrRGp6q3wEEpYsaVl5eyHQy6/Ut0t+pFGpSqThnA/eJ56zl8l3If2PvBx
+Ev3A3/c/R+02z1IW7RNkP5WPzA5Hm2rbOlCZH/jRFSM+kH+k7G/RisRpbc5
SLx71g89Dx81P87vRFRPBIHCtx8+DsU4R0Ibypb/o6QQ0Q/5s97djGkt6O7B
zhuvv/YDu7qrJZxpRvlpjvo7tf0gKaLyre9JAzJy1DCW6e6H7xMgNS1SjxhU
hcztJ/vhm9Gn+n87tchkocvu114/yAYtlxq3V6PTuf013+kHgFvvn392dxVa
cRxhmjg6AEn0fy8HteLoFcNsaqvUAPx53zFZbFKOUN/C72rFATiTf86V1FuK
qGJWLhdrDABmZRVHb1CC/M9tjyU+GYCvPw6EByQWIq3tPZEoxwE4nm4kXPCo
AB2tJn8Z6D0ALy9tjz2UyUcJtw6yvk4c+C/XfL8XeCgXmXMzG9rmDoC4eYuo
KnMOEpthT39cNQBhmRMV+8ezUbEd71Xd0QEQ/RQjnN2WjlyQYNDNxf/8WM4n
8F/8hhQPnJq8vD0ASiwEcVJRKmoPl3AUZx/8r/9Lgq+2ktEn4wuNQgKDcLuU
j/9QfhLSE5Fn5xEfhAjtaren7omIVHYlk+7GILit2bFlacSjrx7XdvfvDAK9
0r2OOrU49OSmmspvs0Gw7Zl5Q28Qi7bGdUmkt4MgnXVLW/BCNCr/evfcUOAg
PJSL626MjELuz42dO78MgofMAAsjRyRioLDkKC8bBNqkc7UB18NQV4vVw9zm
QdBpC/X2pAxFoUG22SkDg3D+7Z0+z/ZgxH/ytWrI+iC8b+39UBn0Cc0tu4f5
kg+BrNGJH4L+gSi90GvmDdMQjEUISi2HBqALKoGvn50ZAmeJIqmjcR/QLnNo
q4nsEGibJ7oP7/uiqqHIowbKQ/A+TeVJgJ0Pum6ZmKv8cAjyznceGI31QsxS
qfuY9RDobd1JP679DvXvZdyQch2C5oXtxWxOT2TkXzTHFzUEZX6h5rUD7uik
bvn5I6lD4Ne9vvi44w1aPF7txlg0BP+udtB963FDdjktXDvdQ1A13OISzPga
yTl2mq1ODgG1IjeHoakzIrvcmz+3MgR1gsVa1v2OyKd3TK2HfhjOAcHBcMsB
aUSTopqPDkNBXwxxMskeHTad/44LDcOiy52mX6Z2KHZr1T1dcRjeKJBkq4+9
QI+qNjvjNYZhg89GPJrJBom83zkWcf+/f/DDXSllFmtUwEVV5Ok4DKdpq6ei
nZ4hXvrVoW/vh0G1YkroT9oT9O7PyF5X+DCk9/2Z+Lf5GP383nh8++sw3O0Z
1qMzsEB6g3mKvEXD0Dlw5Y/voBmqbvzy6ErDMHDJnWlgeWqKRIp8vR/3DQPv
v5o/8kceob2Qhx2F68MguSWTYfH1AXrkqb42SjECeZE1p9h8jVGHrTw7JesI
jPEYVKS5GqGLJsIXT/OPQLxKceFdWkMUq8Wmry4+AqdkjOJ0zt1DdJf3ne1g
BHS+XaxwtDFANpI/vkSpjYDejY1SbuIddIWldnb+yQjUPk8xj+7VQRlkWbSH
nEf+y90HVaNf3kYcq5FnpHz/my9xp96W0EauE+/U9CNHQMS0JNPn7y30vcPG
2i11BLoQ/S22UU2kWXk/OLl4BNKE+mUHWzVQaYZqUVvjCNS8mryXFKaO/PwE
/h6dGwG++k096bXraNPpEB9sjsACx6kEVWVVdN9yR/ER1Sjc/aLLXl6oghr1
5x75so1C6pAA7wGkjMRVu71zBEYh84/uhaoRJRQhW/ltQGIUinKPvwz0v4Io
Tqd1/FUYhZ6kg/qyty+jngPu7KqGo3BRV+vZI85LiLD19OLzZ6PgEOLQXM2u
gBLn7uiHuoxCg5UX5VVAiLFfyaXcbxQibr9nk7UhIPt6iVhS1CgcE3Pp+VIl
hybyeWppv43C0eCtroFTskglkW5OrHQUnhKavHRTLyKut1NnnAZHwZaxDXda
lkJvbdrV4uZHgV7Le9Q58zxaMi6xbvw9CjFM03ec3SXRbc2k4GXqMRiOrMnT
M5dAlQqBRWyHxyBpjS2B3FAcCYu7DMueGAOpX0xiKy1iKOC4xV/D82MguvTD
KWDzLHrwT+FyuuYYDMYGP6aIPo1al8+adhuNwUvuyqdhHKeQ1NjR99tWY6C/
MOJi+VUIRbdRpfO6jsGNE1ZXjqmdRDTlqx1X/MfAh5vZ4y7dCWT1bXTtcfQY
nK3q7/81IIAGI5vYA9PHIJ1ywbW4mB+lvYrVH2sZA8GDl0S47xxHbBZ+LpTD
YxDLd07zqhMPctZ7GXt6YQwGppPXZkq40ayySa369hjsBGoZKrFxIbWLGnN2
B8YhpeFSVafnUVQkRKD7zDEOobtX31IxH0F8HKfO1pwchxr3wWXH7MNobWPf
+tCVcfAeD11aF2NDmQ2ITeLWOES2jVzy52FFj8Nd8rWMxuHKddUdI24WNCO/
+zvceRxmuW3/ZrkfQnGMcuFlPuPAQLCnHe1kQPcnXsqOh4+DznNfAUz6IBp0
/+0kWDAOFZ+pKm5epkUh2tI8V2vHATe60PZ2gQbdErKtNO/6T5+atP4nnhq1
Na+RZS6PQwFN0eMn1ynR+yjxeOLuOEitSP17LkOBrj61urxONwFcqVG+dVLk
qIp52VNGaAKu/pdmt7P+YS6kM8IGUhPAnOtSF7Ozh8nlP25yUZyAYLcXtjH3
drF83e/0tfcngN6in1fDbBuzPi2cPvtkAnrmNnY9Dm5hYruPbtI6TUBTj/Nb
jtpNLCVm+uPNsAk4b9F9msl8HXv0XEDiedIE7AXciXPS+oUJKBp3f8qbgLzp
Q6031dawz7Pj7IOdE/CFWVnv7dgKdqeIp3BnbAKCBlp/x55cxjje39XlWZqA
6DKJfPl3PzAVjuUbElSTUD4xuubl+x0TcvWLVjw4CZ+WLicUi85j1N/PrGix
ToJOyOOyB9OzWE3J44/2fJOQSJ9mPuoxjcUK0E96CU9CQLOvaeYzEubqmyoe
ITYJWhQRq3tmUxjh3veuMsIkMMx7X7x1cALjavASaL88CYHzn/+SNMawP2LC
L8ZVJ4Evq0bucNYIVkhmyk5+ZxL2vlp7bmYNYsEW1I9YjSYhsoqF8bjGAPai
O7FA0GwSbl97Shqn7MfEE6d1rtr9t5+XjmlvXA92iPHtV13nSWjKMHpP59ON
LdsJbJu/nYT2bBep7jddWJqycYRv4CTsU26xPpLtxLyzyRY/h0+CQHHuxUfO
7ZgZZ6xc5pdJYDaPMz4z2Iqd+DE+QsyYhAO44emI3iaMQvv1WVL+JPSvF3kU
2zRiU+U8Lutlk9BpmQ6+JxqwGP+7vBwtk8Cidf3BVmUt5ry1+0y4axJeXKpV
+pBUg+kbReEyg5NwbUqzsz2qGjsiOWxkMDcJZhxO6uVmOKYi9vQz1cok1PJR
Fpe+rcBeipANZmxOAk2IiP1oeRmWIhTEpvt3EgyMVF8ZsZRigwJC6mTUU9Dc
HFAS61qM0R4v8UllmAK1PYMwZpoiTJb7RsMt9ilYqEvVkk8owCLZbLAkwSnY
PX5U6d6xPKyFifqV2pkpYJQdGO3bzMF2Dobnb0lOweub43F0U9mYCO2Z1Vi5
KSh4sPaloyQLM6CqPKOqOAW1gaNnR4kZmB+Zptn6tSlIE16XukOdjpXvTcd/
1pyCz3oUrG6307Bjm3RcP42mQEi6NlJe8St2Y+3z7XDzKeChvcjYOJKEOS+f
C7z0fAo8fg2S5nwSsfSFmrZFh//8LpV5qaklYGOzt2mDXafANdPzaf2JeOwQ
6ftlzGsK1gXH+k8yxmFo3Ml1zn8KqJ8/KTCgicVi+uN+y8T8528ZexCk9hnr
6JaSJCVNwdCpphzNyEjsX0fjU9+MKTiv8Py5FlkEJtaqnypVMAXZWfvDlK5h
mGHj8sxY+RQcJ1P3m2MPxQJq3fi86qaASFZGHVoVjFXhbHfF26bgY7G0Wo1b
EMZXLNvjPjIFmZUkzQLZQEwjv+3Q2ekpgFq95wTxAMwt21C1b3EKxJQVBl2e
+mPZ6b88X//6T9+MY9kv3A+bSvGsFt6ZApn+odMDEz4Ya9LRv0RyEuy/PPEy
9dJ7TDHum4wjHQnGa3Z+PS73wuIjurLajpKg+WDGi67fHlh3iMkPOz4SpAhG
LJfkvcUoP20JHT9Fgi2BkKbDHu6YlL/Pg6ZzJIhnEVMoMX2DmfjwxFhfJEHt
4lCUj74bFvwue4gLSMB/J1OCouI1Vud++XDdVRK0RYY0K087YyedLPw4dEjw
Y/e/t+HtK0zHYa8Rv0cCKtfONzY7Dti7Fx8pLR6RIPBUzfyctz1WaCUArE9J
UKGtERUpaofNWRY4ltmSgI3JrvLC/AuMw1yl0MSZBHqjmkde5dtgyiYja4we
JDipwNItGWyNpdwltzAKIsGTC756OoxW2KBecCJd1H/8hz9X68WeYrS3hSdz
40kwmJWwT/XUEpPRLOW+m0aCW3rRbroNFpjFzZu61LkkMMnuEzkma45FXpv8
lFlCAqktrd6WWlOsRelFh241CZTEqX7+MnmEiaAIpTQiCb6k/hjSn32AzRde
Tjw3SIKeECXdm43GWOK5FYqCCRIkXk2RECk1woxTwo3l5knAqyCUQXpliPHy
X67CV0jwx4Qp+2H0PWwkYplX6TcJmtKjDrGOGWDhrOEuLX9JMLLvK3f5oj7G
QrUs18cwDRsvHB+QSetiHc5hEfrs07CVPuma1Xcb89m8tD3BPQ0GPOIbJ3y1
MeVnSzqPBKfhvW2YgpC2FkY1H1qwKDINH9WkXX3P3cKqDS+xP5echgfvPl5D
xzSx14M/bDZlp4HwOjtLhlMD225WECe7Ng0VfWNiNm43sALFH/6eGtPAdZbt
+A5RFbMpC1mm15uGvxoWTdTy17BzUgo3AgynwdvR5gdrhTK2lL6YdthsGl7T
zB8vvH0VSz0ZQhf1bBrq7045RlAqYaYxYM5nPw1dJ/yuOdVfxiY/Bp884zkN
Am4+toFul7BoWvDI9puGPC9prmgHBUz/zQJJOngadH+XPf+6h7AjO0GXyqKm
4TS5KAQIY1ivDYpVSJgG6j4WtQvP5LHAH9//1adNA8cNpezNDllMzSTo3vXc
aeAZibl5WUUGa7z9nUunehouBHaoEF9LYx4dn16NNE3D3cmRPnNZKUxBGRs0
Ik7DRGKsPRw4j/3F5y/MDUyD0nnXcfF5CaxU5lOI5cQ0sN9I2BEZFMcccggb
q3PTsOLlOKybew6TEpm/Zb8yDaEfNcXdu0WxTG4C85u//9XPkU1xzVQEswye
e0ZDPQNMGcc6E/pPYacYA9t9GWbAeL7yU+x9YWzWU/4sC/sMZM2J+A7tncTi
/836hHLPQM9aP8+/rBOYoUPAArfgDLzbGwjrshfEjq3KqcSJzEC5tT+ZiIYA
Fjr1kTpddgYIb4gtRy/wYVr6ciYSl2bAxLDkxf03vBhzz0xNocoMxB87FBaY
dwxrv/6Rn6AxAzO3M6PZyLkxnzpZt2rd//glYvzK5pyYMjYzftVwBm580Bb9
On8Eoyr0x9pMZ4DrKGVHvQsH5vJ1eqffbgZyoj99X/vOhsnx+d+56zIDIoWD
8T5lrNjvcJniKY8ZyG2+eOz3FxYsj2Waw8zvP70QVQ+hEGbsuc8Hu6WgGdAX
ePxPXooJE6WU6bWOmoHKvAvmIwaM2KITSXIrfgZInDU9Fl8OYiZPL66S584A
47aETNcLWuy67kF/6pIZmDIavj7DeQCTvDRxhq5qBsLfEk4c7qHGyA57mTF3
zICGdKpOkiMlNv9Pn5q9bwbmNUJ72MwosI7vYglHRmeAVXAYL39AjkWV94/z
Ls7ANvdLoUHafYJ7cpqzwNoMPGGS1G3X/EswD3jNJbQ9A/sPPD5T5+0SLpgI
6YjSzMIRoa5nm8XbBB61nXVxxlkgvg80vGCwRaCS6QiUYp8FW644gVbm34Tu
g/bt8gKzcHIvy6ckZ50QO8FDd1l8Flgaeb/MBq0RnuXVX1FFs2B5gelnuNFP
AsHrqZvmjVnIHaIV0CNfItAbHC7X058FhuRnQmP/vhMGxSq2DM1nYUdG48s5
9TlCMsWj82b2sxCtp+dssTBNsO1nsHrmMQtP2pVdI+qnCJfS8tPsPs1C+Mnv
g5olE4RDr+/OOcfOguJLRV5vjVHCqCaVgEfmLEQmDHr5KA0R0k6m3/MtnwXl
y1leV/z7CS//aEV8apmF44bkM4X8vQT2uATmuLlZ6A7qJLrTEQnZKuteWRRz
EGKyXb3v10y4saq4X8E7B5Za868T9OsI82Gf7Nvk5uDPGRWvkQtVhI43puzE
S3PgoyObsB5fSci3lMvtUZmDvr0QVZ+1coI7kJaHdeYg4OM0HfSVEHjnJR4t
2MwB8xMJJongfIKuyZ9lD8c54L1bpnnuTh4hYKrKns99DiZYuhwpJXIJ5KPq
3rqBc+A0xm1XwZ5NmCE+/VafNQe2dVyKi/yphLTS1LW4pTnYImyXh+TEEKYv
WjtiG3MQ3cBnho98JhwrkKEc2p2DiBuFZOQCUYQPWY3szAfn4WFiarDoXhjh
eeLsxden5+EVxd9EwcpPhAv+/K/1TefBIqJ/a2j6HcHq4ALN76fzoB5L4eng
6UlI8c7+GGg3D+bmj9xpCR4EzrcQ1+QxD0r3Gc8enn5D2HO4V3chYR7OPH+c
/XrDiVBjHEHPNjkPkil9KzSs1oSb0ixhrXe+g+H5I2GbdncI2YIUhrNG38Hs
7sN9Gzo9AivrutC+2Xf4F66+fCtHhzC40lsoaf8dVq8GqpfJahMepIT3R3z6
DiUjpcKHWTQIL7n5OMxbv0OxYlcejfIVQiL5uRAqbAF2QjIuywuJE/bab/wX
WhbBwPjqlK8zFYFf/umNNIYl6JMJMqqST5F/2vqk9fjqMvyltHd27FGTl0lu
Yj+Z9xO+1G7oP3X7I1eR5vGBtWMVnoU3dDZTfpGLEe6x089dg73k2phVLxU5
1gss1UKffsGTRAZX27EN2erM6serHutgSe1lTXckUjb7RuyfN2YbQKcd8vLZ
RSXZYe21OeZ7m9AR97xT9d6CTNiKxMUTar+B9edzxoWbATLBGbFP9sW2wIMx
8+CHy/Iybf1vyAYFtkGuVVHRtnry4pWTga9e0vyBghEu77pmn4vq1AG3o2f/
QMkjEh/ngYsXQ9TJA/CBHZDtaRUncY5d4MZjs1JLduFm+67NyKLXhZHwXNHA
zD14Wxwb8H327IWRsF8BCkF/IXecxM5f0C9tdUpA1/bFP+isyLLmEX8rjQnW
OSWZ7oOa1bQQa7+wdDJ/i2LnCTKFq4YSp/ou9Ui1mP6wb/lCpsCzONspOGEv
VWzrMep1lFxBaSU5GS7wSF0NyZc6/Z5c4dZuFDH9ctP5tUUewjVKCgWfxNqb
F+Kenido8V64aUehMHdwQrXP68h5TY9QY7ZZCgW7zEbM4mid5NtFZYLefUoF
Bp4T96rkLCRvPwyge9NJqWCVTMYfFcEuGUvNqunYRangcMuTuuIWm+Ti16Dw
Fz2UClxEISt+PlbJ10uhwqYDlAp+mn9KXWeZJFPsopWuT1AqdKsv23/OoZXc
8Up7c/gnpcJtvbz9qYi/ErHpdX9SD1EpPDl2+qbblVmJRbWrlxKYqRS0HkX7
0K9PS0ivNXp/ZqVS0L0+Z+haSJJokW498pGDSkGHxm2A0WFSYr2yS9qWl0ph
Mi6v2uH1kMTVrnFrJEal4OoVdPrFxw6JgBdGJRfFqRRu237rfJ/WJjFymEQm
IUmlgL56FGVOt0g815/9KHiBSqFwkwW1pzRKREz/yKBFVArx4uORHJo1EjOe
TzfJFagUsnFZ7IVYtYTYqZ+E3UtUCouHpLx6eKokap78al1WolLYhqdjNnfL
JRiYbNnmlakUXpXYDD6LLJXQzdnUn7xGpTDtsW+kvlEsEa/lED90nUrhnbrz
1B3zIomlze2F7ptUChPdG5I/Nwok/gdl5IUk
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3263#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
Rg==
                    "]]}, Annotation[#, "Charting`Private`Tag$3198#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c80O8Tt0OFrIzIyA4pm89zKEqlkIRKkVVCZJRRZiorKyN8ERKy9/rY
e++VvfcOlX5+fz2ve73v3nf3jLt7OA2tNI2JCAgIFogJCP6/Ps3a7PtxtRNX
NNridNlwx9p+Gf4IlOnEe2SurLUVeWDiqNvDTqgTNzjUOmn60RM7bMq5gFF3
4v/+0gw3K7/Dnpw6d4yTsBPfYJr9oCnmjTXcC/lJstWBF+b09AbzvseCpm0/
tvR14AaT+ZSzoh+xX4IzjzMbOvBW3+tfO6/4YA+s70qFFHfgUee2g4WNfTHe
Q4np+zEdOPP07N2zTf5Y8elf2JJxB07pFr2RxxyEndU3pW+/14G3/6PdZRsM
wjwT+hezVTvwv/NclJaxwdgtscIwR+EOPO6d2RWma6FYjgO/pf7ZDvzp4jnu
cwKfMaby8CtKp478CzG2OtGFYTWhm5N0i+145/GHDV9IIzB/ru6A4dZ2XKFI
i0qCKhLTyciR/5rVjlPnPn9cyvkFW26w/XzxdTteaEKlaGYejdH/2VXVIG/H
r23G//f+Rhw2+r5/l2m5DVfqe2b4nCgeS2Yo/Dre3oYT0F3jGa2Ix+RFX/+1
CmvDHSjbvdLvJmBkpbopUk5tuAV93Fb++USs45rsvX/6bXjmHr1q3IkkzMjw
d6Y/bxsuq2B1OWz+GyayNvxQm7INdxxr//RsJhnbcyqlZF9txaVzvJ9lLH/H
fENdjH7kteKS3R60N8+kYXkN/063XGnFi5+cafd+l4m53h2vCeZvxeNPLGpe
k8jCrk9WWN8/0Yorn+BuVFjKwkZ/uzUvdrfgtxYHKagsc7Dk94avsgta8Oky
cUYvuVzMhuEyj+OXFjxBrXbk1ak8jEyU5C3Fkxb863UJNcWBfKyjZFqoU6UF
b+m6VdbTWIBFXqsdCBdswWOFmGsMawsxEcN3F/k3m/FXv19TMI8UY9qh5LMq
bs04bXo+4ecQHBvsYZlLN2zGP+mkUsS+rcAe0AvPM15pxv3OM9ifxioxg2CN
xVmyZnwGijTmOquw6a4nS7fmm/An3Ovax1KqMRNa++X8xiZ8TITz1qBPDfY8
MHL1nW8TXr9C8eyuZR221pG2tmrRhH9s03mxYlWP2dDg69q3m/DICqY4OpcG
zCFgapOXtgkvH7moxF3ahB207Wz5bzXilsdbpfnXmjFnKvKd3Z5GvLGTc3NT
tBVz9zv/qy6sESfu0Xym+7MdI21FeyKvG3HpzxQ+XxM7sPcnNPY/6x3hNK/d
2406MT8fu98mbI14om0U/ZW/XRhNs/eftsMG/Pow/ynt/m4siDLyr+R4A856
C7QvlPRg4R/K/5F9bcCNQxXOksT3YSyNHQRWng24YuBQ8kpiPxZNPkXYb9yA
f8rM+fM2bwCL9z5G8o2/AdeaORteuj+E8dQzk1JTNuBXRCS2PEVHsGSy82QO
S/X496CIlosvf2I/vNTJr6bX4ysD3fKGdOPYhVpDioyAeny72TT+sHkcyyax
ozxtXY+/UMugnfKdwAo9Ik7MXarHSbd0KkgEpjDZ6tSTtxnq8cqtINGTpNNY
GVE5VcFuHV5Zr2+9vTiNVblN0ngX1eEOK33zAn2zmHLl9qm1yDr8vISM2rOR
OayB4BjdPec6fCSdQNdydR5rfSvEwAd1eFpR0PCU1BKmjmOMARx1eEM70b7d
i2Ws6/D26V+Edfi7tJcRJwtWsAEXW+b6mlq8j+1A57n0Ona/7B2LaFItvkYZ
wJy9uY6N/glnDfOuxQ+J/Pc18zawKacyNtPrtXjQQ1Y5wbtbmElJO3u7UC2e
TZUeL3xpG5s/mDgrdbIWz6priORl3cFWX5NxHeuowd1vcA3WU/7CrIuYuK2y
avDek0zORnR72Pae4Ln+oBpcSePNxBjfPrbvcJv3290aXGXM7U6k/W/MucCA
j1qqBu9O6fvvT9Yf7HD3Jb8DUw1OYf61zPP3X4zEPlzw6nA1XiVn29L8kACN
rZOI5pdX4zJSw67kJwlRsbn1JZ74avzMhZY3EdWEyMrgujzx02q8/Pj5dztX
idH1kXwFm5vVuARryxtTRhJ07h638oRoNd5OxDLntEKChm7+UcN3q3BO3UfZ
hAVkKK/eTFNkqAo/5nsZl0o5hj4p9WpHl1XhNtTS0xHfyJGydPojJ88q3DyZ
JD2yihJlcj+2lqKtwuv4d2vj3lEjn5gWu6SdSvx7rYbf6ec0yIRZxpFhsBL/
d0f4zgrrKcRKTeux9V8lTlP7Ov1XIC3a/fDG29CjEv919sXxVh061EGy5NNp
Uon/caHV2eKjR+8OqkMyhCvxg+3thMhxBmRgdyGC/VQlLmc+SDXYxIjk16Oi
/bYr8DuJbH5T5afRxoxdknlJBR7opF5NUseMHnTyFfKpVuAyTIYiNA/ZkdTN
kNLP5yvwW2YmpkLxZxFtPUElKU0F7i+c0WTlyIH8X+cE1//A8R73hLiMSU50
xco3KtEWx+VZPsldiOdC+0bGiR5yOD478lQl5yk3MlI/XQCN5bikxLtbrLQ8
iEVlHWf7VI6XDYUW5W/xoHa5xobf2uV4vmY4XjnKi2T5nIYKpstw490Tv8q7
+BHN4ehfUYIy/LPN0g0HJIzqtgrIqOpLcSq1l5OhDiLIaeET9bJfKd7olsjQ
WiaKZnuUOJNZS/GCQwuKURkxFNXEKvhusgQnEKmmvb0phjQqti8afS/BlUB0
yz77IipNTbrCIVWCS18TOSVzQxzZxL1VO/xbjLMSxxN5nJNAfGE62iM1xfgf
D9s3U2SSKMid0ixcsxi/nmBiYD0vhUx1LX1oLItwerc1fytBeVT4zMfppGQR
/mdQP2ZfA0PkzsnmlIeF+Ir+ZHGsF0IpMZM3SPwLcX0GkdGvHxTQQcY/OULt
Qvw1zbN+QSlFdKPyzPlDtkK8bdQxqm1JES1PaZ/Y+1GA97uHsUeaX0byOy//
bNsV4DV+meaPpa4gP7LA5Q2sAL8jITfrelwZiQg0tyy15uNCk0EfLrapoBeW
4De2kocbtm7xDNZfRxVvH7iM5OXhFRvGQUPjN9CpwNcWgy55+AFq9XlMqoay
c3LUuk/m4Z0qLzwnbW4j4toOrKM3F1dxyk6w0ldHWn0rwq3RuXjcGfNrYpQa
aGePj6peOBc/H2RIx+agiVQolQ+rd3JwFOx0+FP6DvrMarhaUZaDl410rAcQ
aSFpFNVWrJaD18z8l3Q64y5y9KAJSLfIximzvpRk2+uiphDht6kS2Xhj24bz
pJseYk26bpX8NwsnddptIg2/j0obPG/H+2XhPeLFpr9mH6KTQ3Hw390snHsv
fLiI4xHSXyoXjWLLwiN64pTTLj1G/07uU3/+kYlH2LVsJ/obIPWzjATBdpm4
ybfNxDEVQxR74dJ6AHaEsw49SSJ7gjyShmLpvmTguAbbRdYYI0QuVs35e+gH
7nFpsJZD0gx9v/OXcOfZD9x4SLrnvPhTdN1eanL1IA3v4Xv6KV7+GfIrSY2f
ZEnDz+7tf/a0fI5ERmfcR1JS8buufSSD4Raog4DjSZ9sKt7a/KTetN0S0aqE
cDfppeBmp6MNo7NeoByzNuKaxe94xwv91vrH1kjLh3y6zPE7fj6OUILjtA36
3OGckBWZjL9LuGPmE/kSsd435okYSsLHXqd5aJI6oJhrJtr0Bkn4ygPy0Jbj
rxCXpKl3wFwiXrjdr/2L7TUSPPV0wWs7AVfxaSZyNHVC6YdPWQidEnALB+Pg
1f+c0cXlZzecCRPwl/cqU9VmXZBs/fMfNlRfcTbzR+FJt11Rea7F6EpIPH6x
N0QulsINKcVbUj9ljccdjLpuTTa7IVWXF9aP+ONw1ScFpWXPPFCWyfyzcM8Y
/OUvOlyGzRsVKi62+AdG4xsUAvdqzr1HFWeWRbxiovDmkPSq49IfUEfX2qZ1
YSTuO/VZb9XDBw382NAyq43A94VntL6V+aKx91v5+l3heOzQc1VdUn+0in45
3lj+jIvEscl/fvwJ7TLvjyjuhx7NS4c76qyB6HD7AEmTheLvGASKHowGopOp
h0Q8HMH4LxuWsdk3weieyAnGv9/88SW23PcyEmHIZJp6aKHSF98bVS/txcKR
fSRdTN/wR9yAynhTVjMChZCx8mZSe+Pytpyjb2O/oIRS9sUoAS88LQU+vhmO
Qjk2XOkfLnvgif+UsjzPxaCEsjvP61bf4GdUqsXCrGNRlcD97f+4nPBRr8ga
OuE4NBFq6Pxa2wGXfXufaHE9DmEjk0y6zla4RD3fp3PBXxFH91Tg3WxO/J4Q
U56G2jd0OeXG/ZhtVejnmAomuJeMvp17f3JB8AEItmdmeD7/jgYNkkyoVCzA
7N+hqkhZKmqruZEqbGUDkkEO8y/301CGzhVuLTl7uPR1O6D9cjqycZWgi+t2
Ac1oGpXv7plIkDKsdqrdFfT+JFrOoyzEohVM+CvPHRivhS19IM5Gf+Z8XrO5
v4N3hGc87L/loHJql6fPWPyBhN+ny824AIkm9FqdHA+ApK7mcmb9QqR+5rTc
QNcnECwVIiM2KEIVmVaKTuFBwBEhlO/pXYL2Dr7U3HQKhkMROimytFJ0Qbnh
Krt+CKhI6yWljpSh2EGOW5Xcn6Gn4EOnxMUKNMCt1hlEFgaJQgmyN0crEI3l
ay2jhTAgLK1g9g6sRG5EXXrHMiKANM9vNYqqGhkKeZiqyUaD1ChX2ZPndSjS
LmORnS0GZrzvBibo1aNufNhi/V8M3J2RG2vQbEBcgizFjYax8NLp/nsjwyaE
bmc6XeyJhZDE+msljs1Iz1YF+6IcB4LaE6m5MS0oqNym4jl/PGQnaP52P96O
0qfI3Xsj4uHZoaxBhmAHaiL/7zI6/hVUmYKT7fo6ENGd5jrq1a/QE/bwTtbl
LmQzx92anZMIOyelJmJcepH/iWJ/Vp4kcP530nrXoA+liKmre35OgqFYDZ6G
2/1o0sm5++7rb/DLam/lheogOoylDS1f/AYOkwks7NpDiKUuWZvvQTIEm2/s
blgMI02a3sE99B2+3iEKWq74iSwlzL8YZH6HixmRMtR/R9FHPcKHTZwp4AL+
Jvzc46gqQXj8C0kqMP9aobroNoEuybybRU1pYOB5zboqfBqp659J/ib3A+xd
L9dFvJxBzz2yn9L8+AGz3jcV392bRQmto8sTAelQ8vXTt3Py86hi0zb9OmEG
OEgI4l+xBTRy+viLHJsMOCb5JK1LdREd1f3XVYKZ8JyMZZbScxmFV5sM2T/J
BLP3Il9Ic1YQb5+YnFBUJox6Sz0MXl1FSr/r/wSfzIKuR2f3KuvWkaPy9lvj
9SwYcqQ7+7hsC4Vt3pceFM6GUJ7AV1Rx2yj3v+r1m+bZ0Lzg13nov4NW9oMM
xGez4d/8ewpPn1+I8tsBczJ3DhhXL5cwfNlDvFqGXawGOSCASQRN5e+jx+li
l4lHcmAyc9HMkuEPcrkf8dueORfiBNe3dXT/okhywtxF7VwYONmlMZx6iLoN
O851deYCvYUGazJOAOvU0j+VqfPgQeL1i72uhHCi7L/Qopt5cDuaUCz/OhGo
nLYii6vPg1e2M70CB8TwpKavnJ40Hz5au2wHjZOAqzVyeK+UD+v0XNoPO0mh
qPnkvFVZPshqKB876D4Gfa/sYqcO8sHECjhaZslhk+enzj3pAiBpF/b/R0oJ
513TGlFOAZT8Ju9oNj8B14Tp3bPXC2A52yo7NOckGA85yfKKFEL0Cm0MNyU1
xIjfSD35vRDmC8MZ2bdooGQi+4nbbCHEh/x3OyL/FAz4s5zZ4S4CySLy/El3
Wji1sOA7ElMEYbnUSY5S9CDyWUNZfaQIsJRgtngOBrh+uehvNXMxSM7XUlyn
ZwTP6PeWqSHF8N746jwJGxPEXl/nPdtVDCnh4j4sl5ih7Ne9sSDqEnhJzeeZ
f5cFdjX41B0/loDQX/pHjVVngO6fP/lqfQlk7/8ptqVihwtpuxUGpKXgR2Sy
T/30LDwlqxNTdS0F7zuqonO8nPAuR3ixtKwUrH+qpGUuc0L849D4C79LQWIx
8ZphCReMFBvRMdmXwUM8f+eM3TnYN21p9skpAzmavFuEBjzAyCDu+W+9DApZ
t6o97/HCbSvinVnzcmiwU5+7Z8IPz8+Y/9D7fiSf7SP58VYA3jd2GbfNloOy
x+2YtERBqOKO78szwMH3xGOlfWZhGO2gCBD4D4cmvGrX5akI/Haxvho9gsOB
KAs9W4MosDzneFAlVAEdAnSLuXpikKykJe18vQLUFLKcarkughTze3rJpxXw
ZC2QrX/rImjVrbV8T6qAol2Z7NhscWAIcJPoqamAizbvFqqjJKDvHl3M4WQF
vKjyW8YCJeHegqTVnbOVkGjkoUH1RRqYshv6XbBKuPGLGH+YJQMDjnoKyfcr
YbE+13O3Wxb0Trw59TesEnaUt9LFFTBg7aV25MuvBIdl7WFCHwQj0XGTGj2V
sCpi52g2DaAvWpuTRFMF5CaaE62GimCgeUJb/UMV3IwV1ilOuQJcrDHljt+q
gPSrxuaDEGWYnBLlS6ytgvi7w+xq71XAyO7O3j5hNdgXEVxa+nQNeNDM43Mc
1XDuw67bpyRVmCVzaLyFqiE00CvBpuE6mIVHRn51rIaoVJYJ5ktqIGBwnrgt
vBqu7C64kLjcgkWBcvO9/Gr46NXu6NB7G8xLJuTVtqrB96/4TWU9DbAc5R/b
Na8BxtyH19//pwWi34qvcn6sgVwd73P67+/CutXNzBvJNdBKG+Jk7aQN1oQv
3GKna2DI35+Xw10HLjYRLjYR1cLvnuN9GZ91YTMoWHOHoxYmFEJ5TQr0wPZc
Aff1h7UgThfw1vzsQ5BYueZr61QLRouEzcOm+rCbN7QdE1ELD0UbSvPKH4HD
1cPard5aYFUW2jqtZgCOz5TNom/VwYWZD6P1fkYgd6m/o/55HYhY2szJ2BnD
n99mMpsf66BbtaO+2cQEXPx8Ka/W10G4wjgn/TMzQNrsL61n6uBg77RAkfNT
OGTPHP5CXA/N3Rpe9788A9fM7rR1qAfu1VfW6YfPQfG1MQOrfj2c23t17tUV
SyBS+uWi7FwPjXH8U9bhVuDZzXI7srAedEvaRfIkrcF712DjslgDHKZY1hy3
soV1jwhtU7UG+M3fUAhX7EDnVGfJx6cN4P35bu1xLnsQPK/wrjOuAVi0c341
7jlAcJHD0nZZA4zLB8i93HwFf1Qy1JmGGuD51V+U3Luvoc2AnfURbSMUsXIS
C7E5g9TaXVd3kUZQ8/o9oK3oArHOfjOJ1xvBi5ix44L1G7AO+5Ox7N4ISd4x
RBOOrkDfOnTFcasRtpaKw8nUPcBFjzYlmroJQqZXRONOe8LsnCp1pVATKL97
Jnh2zhMKiIoGjxk1AdW/E5/3Yt4Bx6d1JOTaBP/SDwW3vb3hPRt/wq2oJnhu
0f6BzvE96EmHWYb2NIEkpVwdq9NHqK5t6y5cbwLLbYmG4o8+cP4OmczIiWZY
hei9hQRf+GthR8yt3AzK65i914E/xH69E56Z1wzbxR+PsbAGAYWYz9/uzmb4
oDTnPdEVBDblVYa/VprhZrPRdmJgMFweFBNGvC0wd+wCCztPKKSZPA0yUGqB
ZWkrVs2DUKDfjv3lqd8CJ7OfhHr0f4ZZKpqq5s8twLbNerCeEg63o67yrWW3
QJ6mXH1RXAQUCrz1pW1vAVKJg8qIuEj4cGVVW/dYK5yu6rjZWBYF5x1blmYd
WuE2Tx3Z+cJYCD1GokEZ0grl8u2aHA/i4DBELl84sxWmzizbDZHGQ3tGiqvt
fCv89pCuUDH/CtLY5EwYSRuo973svMmXALFNzDdKONpg7uCnQcVCAtjMvGcg
0m2DG3opbeHuSTBsU+HIY9cGZFpOFRq63+AKwd7YtcA2GFpfO8MhlQyMrKYp
AY1toFCyfyKOPAWK1JWBTbYdPnnDfY9j6fBM6IZ6rE47lHPXGw5fzAAWMg0D
bod2aHpt3bd7KRMcSx54COS2Q9Sw/e9lhyxgoyueYjndARFOm0XMWC7YE2DP
H/B2wIQ6/7rp71xoW8G3oyU6gEni/d5OeR68aagl5dTqgLSFy1ttdwtg1KWT
jy+wA+5pCm74VB71OXOtTLPYDiiRqZsk+V4C/jr90ikZHeA8b8Z7M7QU0KWf
qsJtHTBPETCY7lQOMfPz5peOd4IKvZ0P31EdfnSHIBO8OiHizG6165taKFTw
kHYL6YRZ3o1UMoo6oBEhq6z62gl0L8g/YMF1UEF+oku5qhOIqb/XhibWA0f5
6e0b/zrh7TTLomRRI7xKjXT2o+oCTD+/MEG6CTrC2Ujb2bogUVEzRSyvCVxf
cjNqyndBupdZqGJCMww8TooJvtEFlj983GkYW+DCLQG+Xr0ucLQctw/zaIFx
flFpndddELmrm2ap3grSjNkVEe+74BtW8JA+oxU+EUuoDod1AX/oMDU7eRvM
rxd0nvnWBR7PbzVg94/ObVRWTz+/C/5Mv34pkNwG4c1lk//VdgF6/N38y2ob
rBcqmE/0dMGe9+SBpkg7XEuq3uKa7oLze8f66E3bITZYxdloqwskcssDUsPb
Yc+1kSSJqBs882MJ56vaQd3ypt/cqW5gEHyUEjfTDsn32xkEOLtBZLPp7X2C
DiBQ1Yx5dqEbbvuyDpJRdoCOZC9vGnTDjWR1m0bqDsjk1slYudUNLYMdydGn
OoD81LCUqH433LyxnOV2hBscPqx4YdENEqGfYxwoOoCq7VJ9utMRv2/BY7Uj
/uJoirblD93AuCFp+G6uHUwsxnoEw7uB9uWDB/X17UCL5Q2bJXXDzuihxau4
o3t6wmcyKbcbLDKXk4ps2+HZyOOF6apu4O2hv5Cp2A6MaZLrXJ3d4MSYSvmO
vB2qnE78ejzWDdt1eP3To3dgeWPyb8xKN1DYssn4e7YBC2shyc/f3bC/euuM
oGwb2BQ/odVl6gFGjdbvuaGtwP5RhjmMtwcmtc6KcMq3QpMuNUeveA94syfS
E4y2ANd+sbCGRg9sn31+KMDQAm0Nn8QDHvVAbGgqIk5tBsdwE7lWix5IvH/1
8zOsGbqkaFVVP/aAafkPHXLdJnC3f2qkWN0DlNFEdQ4vG2By6/QXMYle6Jyk
dJa2rgH/6pU4q8u9oFh5wu/VejXIBlcn/9DoheuNykm3X1RD0EWrfAHLXpDP
vZjpYFMFStZ1nZzfeoHeppma2KsCVhWiBh7l9UKkv7/mk5MVEEljMxZd3Qs2
Eyccf4ngsJnBtsI83gsDHH0mxoZl8HXVlpyWuQ9ER62pvPaLQL38OrU6Xx98
C/x5hUCwCP74cTD6S/TBwL6pyZJ+IWgJt3BTavaBNru73JW+fCB5zg1EPn3g
UOgfn/k7BzLl9pUVIvpgzi5cw149Bx4cb7/55lsf1I3p6dd8z4bcFEe9g+o+
CEwhe9j/NAuMFjrtNv/0wX+ZW6cYsHQQyO6rmqfsB5//Uh6tif2AVcdh6jGm
fsgnXrudJZIGr0/MfG8W74f93ydo9SEFUO/CbqVSP6iJf8k+1PwOJDGrlwvV
+0EL/be9aZEM/qJ7PxOe98M0v+aOVFES3Nn7I/jFsR9yDctPSi8kAlMl4avA
9/1Qualbs3g2Eb5qHqd9k9APr0wE9Kpjv0KhHbvKvZF+aNP32MeXYsEFcQer
LfYDU415f+/NWFA6xj9+ea8fjjVZEGWY/Aet4WKOF+gHYNjurRchRzQEGUjW
83INQIVV3Ere8SjQEZSjZ7swAEuWb3xOEH6ByZIr6RQ3B+CSs+DTV8ci4Jun
6u9/ugPQOBBx6u/pcHiuduvarukApNqFDBKJhcGv0XuTkx4DIG/f+sHVKRRO
EJkzlpYMwOEh2uEwD4LOJqsn2Y0D8Lrzap1rYSB8DrbNTO4/sveW4Tc9EQic
PG+uh24NwI9G0c/tfgEwu+Ie5kM4CLjli3UhPX9Iy/eedqMehKLBr1QzYn4g
eS3wjaXQIGj233g4SugDv2k+NxvJDMIf43kl/f0PUDEYyXT/6iBsBlpD8cF7
uGGekH31ySBI9KcxJTJ7w2P/glmOL4Pw9mP350u4B/DcK710+vuR/bCIpcUf
d1g8W+l6smAQ6q00/5EouoNdVhPLQdcgpFuqC2BjriDr2G66Pj4IFYWGOvel
XYHgck/u7OogPGI8EZMg+hY+9vy81U05BO/SyYuLO51BPXrySyPTEDzLmez5
l+MEDCZz8zjvECSNlbJeiHOE2F/r7mlKQ+AwbMueH/kK8lhICrwch+Dh4U/D
wX+2wE65Ppj6YQhaZ1J/OLLZwrv94T+d4UNgEG0/5nvlJegM5CixFwzBy970
J84/rKGy/j/jK3VDoCCc6fLf6gsQLPB5/6x3CKoN4uvLpV7An9AnbflbQ3Ds
jayWaqUFGHvd3hghGgait901EW+fQ5utHD0x7TBc0vAIM7thDrF36PRuXxgG
KQFu9RsUT+HKqeqZuefD8JxKvW6c2hh+EGSQUzkPQ43uiZFcISNgXI8UEvcZ
hsu+Y7Q8Gk9gvs3G2vX7MLwjJ/1wucAANMr1Q5IKh+HgusnGhV+PofjH9YKW
+mG4kbnyWhoeg68v11+m2SN+B+pg55aHsONExQE7w0AnWcJ46cMD0Dc/UDIm
GQG7GwGSgXfuw4XrXe+zuEaglHQz4x+VLnQfc6e//mgE1vQS1o/T3gX5XxZS
LyxHQEobUUkLa0HCrK7eZ5cRaMzINabTvAP2tWKxk19GgDft4kPZAg0Yy2Wr
Jk8dgdXVAqKqXXW4lkAxK1I8ArdbHYJfIHVg8ZgQchoYgdpjDKvNjWrgYdN6
K25uBHSFNcSp392EZYMi6/rdEXAfL96nVL8B5QqBBXQMP0Fr1L5gnFIVDA8V
Lqdp/ITar/nvr5xUhuaV8yZdj3+Cbli3yQP+KyD+k+nDntVPmB43vS+odhnI
Stfbrvj/BJNA/OS1bEWwSh3ZeBb9Ex7XBdh2bSjAQGQDfWDaTyhSZZnzllGA
lNexej+bfsLdeLVKwQoM6J76uhAP/QQqY/dYf2d5cNZ5FSuw8BNce0KiMlTk
4JaU+qzdsVFIFwhZGiKUgY3tf9ZUV0aB0z2H5RipBKTXIToxzVGw6BIyvyMq
Ds/CXXLvPB6FhUdyZ1gNL8G03O/dcOdREFe0za4fE4O4k7LhJR9Hodw83o1S
UAz0x17JjIaPgtEkl5Kn0wUYcN914s4bBaLv9wl2jEUgVEuCTaV6FOYIKAWG
LgiDJq9tuVnnKLj/aDxDSn4eWho3CNJXRqG48kIjGhSACpoVL2neMZgJCEpp
PuABl0khvvviY+Co2+l3hZUHZHOfNbgojQHUBO5GXzkHuffmKav1x2BJ7eE5
v0wusBbgS5t5PnY0p1qyvt7kBJHfxmrkTmOwd/dU3oYcJyTHTAWohY1Bt8Ha
dlbDWTB+wSX2InEMzjB5Wll6sQOXkkFXUM4YxJxx/kN4mw2iZkbpB9rHgCLn
qe13Mla4xrhyU4xkHN6Ty4asHjAC71vfaKXj4zDxRsle7BQjkM4Lrd6hHYcP
D+mMyi4wQFXRswB7jnFowSI+yH6kg1guynFvviPZQ+uEYzUtvPX5fiFCZBz0
1+7PxpDQgvzD+c4S+XHQgdRMvWgaYKnz5mq9PA4F/30jyJunhn0Rvpej18dB
tFNOjSuBCvIJTOgJdcfB3e/wvIDiCbiQMKWtYnfEL53jqURGDlQnPb7dcx4H
SZ1fGhOnjsGKHdeemcc4KG6M1ErwkUHKVYMIn8BxeKsqEfrKggTeZxIsRoWP
w3CnIs2PaGIwZY6VTf/vKL9hCm7uPiI4tzQ63PFjHNi9c7299QmBSOvN+cnc
cXjav97Y/4MAJkrZXLZKxsHZXlhJmIQAYvwfsDM2jcMrW2+OyA9/0emLQ4/v
z45DEB9hqyPbPromYhFFsjoO/U1ZhUQUe+iVIMHAj51xcHFxmLEg+IUGuHhv
E5BOgOFHSaV5mh1Efrbo4/cTEzBsTWVEJLCNZFhv1mnST4D/s//EGG5soUg6
GyyRewKWVA09bFI3UBM16etbQhPgLnD29dr8Ojo4Hp776+IE/BdCG94oso7u
k5QLXVeaOPq3sZ3QTFhBvgQapluqE5DxvaiTWH8Zlf6Zio/SmAAnJ0P/Mp4l
dGaHgmXt8QSEcUfXz4zMo5sbUXfDzSZAvEuK6FLzHHJeEQ1UfDEBsknrHMq1
s+jnzF3ykLdH8XyqeVowNI2oJucvY95H/Nbjm+d2phAadXo76z8BzNd5k6yZ
p1BMX9yudMwEdNAF+x24TKC2LvGLk4kTwKSeh5mXjaPDtnoLnx8TUD+qncpN
Oo4e1a9M/yydgDPDvTxkOj/Rp2pXDu+aCSAuKMo4pB9BFTjdgwstE5D/qk5q
eGwIcRTKdLsPT8BJRUrxqagBpJ7bQnV+agJcmnyurfv1I9fMR9d7FyfguKIw
VcLHPjSR7FXJdzABZcw/BEgSexBtItPfDsJJmFVovF5R2Y2U4lKlHSkmQYwj
X15pvgvFR3RmtDBNgnpW3MSKeifqCjVasuOYBD1Xf+ZbQR2IOOgX71n+SWhw
IAusLGhHRh/ZYqylJiHQ/8vuixOtKORd5iALTEJQh+i/5JZmVON+maFG5Ui/
yVE9LrIJ8Tg99WXUnoTzHTZtTg8bkLbDn3r84SSIhO+9VtKoR+9eBhA/NZ4E
Arf0sUD1OjRrnudYYjsJZBIUFj1WNYjR7Fq+kfMkTF352DDoX42uGg1vnPQ8
0rfR7vApqELJDwifPg6eBLXeglfq5yrRgE5IAsWXSQjmafj6xbQCkd/lG8+O
n4RYgWk9chMcPVVTu0eaPQmsK33VYZWlKFJ1PCi9aBKGP9G+PeZVgpqUX7bd
q5yE/deybPTaxUgQRSindEwCJWHgsRz2QjSXfzlBdGASPiguEK8wF6AE0VWi
vLFJMH/04L4gRz5i57xcga9OwpMWx5/9N3LRcMQKu/LuJEwfbNSYvchB4bTh
Lk1/j87j7Q9GFJONTpGsyPaemILeG+uWAvRZqM05LEKPfgp65Go/e9zPRB93
FPfGWKfAm7GXW+tuBiKZ+5y3KDgFKbOq38+Up6G9RoULBKpT8HNqYCZJNBnl
KS35e6lPwYc1JncBwW/IpiR0hVJnCtIdtmUKRJPQctpiCoPpFJy4S2fDqpeA
vvOEUnyxnIKanMJTtG++IpMYMOOwn4LZN8Rxd1Lj0XhACI+Q1xR8OaReEeCI
Q9Hk4JnpOwX4kzIVItNYpOe2MCkRMgWVUmLjOub/oR4bFKvwdQpMFMMu3u6K
QvV351m0K6cgHlX6JiqEI8+2oNfDDVPwLmv+0QvZMKRwFRt43DEFM9JJtLfg
MyqWDgo1H5uCIItxMDMLQQ5Z8tvrs1OQTH5BvsYnGIkLzmnar06ByEJepnVh
EEpnladx+zsFFbe4VC+eD0TmIbOWZKTTQGL31Ou9zSfEfzKw1efENLjcv8T5
3C0AxR/OfPzMOg3LCsFnA2Z90eeJANI0mWmYesMUnKHxHt3RkzUSU5wGOVdS
/qrr3oime7oq/9qRvuKB0dqtd+hjjYxr5b1p6Niszy6390RXselRlUfTUDwW
+e1thAciyffHWkymj/o8U1x4rTty+TZ10Gc3DT4LLh1K0m5IlsNf94HLNBBY
7UUwvnFFu+HShROe02DotfDUP+wtevHRz245eBroZXXGRg6ckZGF1Dph9jQk
K41eqzV8hW7cO+5PWjQNe81n8t8/d0AXFceEKCqmIYaIwovI1R4RMHib0rRN
w/epg5GQKls0d6hHSt87DforQnnb6y9R27zI19MjR/EwtSpE8L1EX0r7RtkX
p+EdXXy9cZo1ck9KcebamAZLp07v9f0XyOzTGxbevWmIL5C84nXrBZI04tUW
JpuB4HvTBianLVHXcftWOa4ZsPxD7UkZ8xQV7aiag8AMfOCec9L/YoZix9go
Ll+YgYWzESaz8abIMqf2ynU0A89frBw/aDNGd6MjJtWUZ0DVfaOyetMIyXtb
uGrcnIFv7pynsLNGiPI+Q6mO3gxMN8uxTX0yRBtXFnQfGMyAiKN++rNeAzQg
UvbrkdkR7hYnf4/TACURGV8ytZ8BnvqhC1ZRj5BiSm6KXdAM7KSEx8ot6CH+
kPfXXkfMwNpnpUdvB3UR1ZsHs86xMxDAhe079uigEQ0SLs/0GSAIUWBdmddG
1XIDuHfeDOTV3uoKI9RGKTxpD31KZyA3X8LSkPsuerV/JyKoaQYqIwbMF13v
oEdTfFKfO2dAduLJ9YMSTaTS+rsnYmAG0qpt8bZDDUQf95UmbnYGmgIHa/0j
1VHmtS3vDKJZWH/r7cyrfBOFXaznyaGYheJZ+bNZfDfQmzNfqvNpZuHt+WOi
bxiuo5vrSv/K2GeBcuvWTbZT19ClIcboSp5ZSGJuwpjZryKWmkXZ2vOz4PXQ
/3iquAqaCwuyb5GdBckJ7xkalyuozc2EvkNxFpq01FJF0i+jXHPZ7O5rR3x6
87Z2c0rIHSZXhrRngZnzZKmUtSJinxMzXrCZBdyOS+drNobuGe2veDrOwtPi
Br4NC3n0aaLCnsN9Fhaa+A/OSMkhwpHb7+8FzkJzwkpK/ro0ktU9fWorfBYC
PMNsycelkE3faIR/7Cyc29ry/TckiaY7LFJrM2ZByUuneWZDHLHdkhA3KJiF
ttR9/dkT4ki7+U/pn/JZ2CjhSE4Xu4Tqa33aLrXNwoOMD+Jrn8VQSvH3jbjl
WXh9qPaU10cYTUlZO2Lbs/CdTHCH+9p5dCZPmnjw9yxwJdvSrdAKIb+Menqa
43NwSWCT36+dH9WdD4hOpZ2D9shzXqoVfOjwuzbvVZY5GPyylPOllBe9SJiR
eiMwB4Z51ddO9J1D3zl/VDCLzcEZv0RdbJMbTcbYquZJz0GC+z67ABM3uhNB
fH/56hzs+fF0+7zlRJL+nG/0TOaA8aLUwc8nbMjq+ALZrsUcHJzVJ/nAdQYl
v88MCLSbgw+VAqorqyyI2QPiGjzn4L/V5bKAdCakSXBM0Mh3DiRLkptyY0+j
jy5t2f+C5+DRoJXS4xhG9MfhYY3k1zm4myPYeq+YHknsnFPrSpkDRRu3uoJ+
OmRps9xrkT0Hsl5vPWsPadHYc6e5hMqjfF11Pl41O4WqDCIo6cbngHlorbZR
/iT6Pfo4OH1uDnbEHtFx/D2OxB/wn7m+NgcUsccfsDVTokTtAmG3wzmQERgR
LfcjR6Pdb/LPkM2DS0PoyetuxxCjhgoUnpwHv/0bxGquZOj9jV71tTPzwMte
ydcQQ4IqGqIGP56bh4DZTvu7ZcRoX9nIkPf8PJQd20z1mCFCzxS2Xj6Um4ev
wCTGpUGI1CROhTXrzoOcqK33AsNfLJOb6NHM43lIwzumU5Z/Y7S0W7z/TOdh
78vcoWr7ATaw2pN/0X4exnZYRRTz9zDZn7VvbrrMQ9Yve6q8ol9YdHO+ionn
PNicpZrA6ncxw+TwvoigeVBuNtXZPdzGaj9/iMmJmIcbmkrMRvzbGL+Xo0lr
7DwIjJzLNtTbwlYMHuwSZMzDcJZ0VUHfBvaKlYPRrHkeLMq33UnVV7FhilOj
bl3z0Hi7uVGeZQVDe4RJXwbnYYFDZ6tzfQkj7p2SaJ+bhykBYWvOygXMpLrn
7/zqPNARi62vFM1jDVm1tUS78/B3TUNJvmwO8/f/dleSZAH4awh48iZmsA3n
cDb14wvw+3vpVwaiGUzL/MPMU9oFoE+nc34iNI0xXzO3i+ZYgITHhOsPwyax
BELRUBJsAWz/7ecZhI1hx9bPPmS/sgBF90mcvLVGsWejNDzSNxYgWjcz8xP7
T0y0ZDPXXHcBtGjfdF/uH8KCvk85ez1eAFxocnKnZhDbDuu58p/pEX8NE/pS
NoAV2+b3dNktwPFX7WkkbX0Y25NvUcvOC0BugPh3p3sxV41wIzLPBTDiGjeW
IO3FlEUct2WCFiD3wsvYc4+7sY45jD4ufQHggX60in0HdqlPZKQ4b+Go38ED
+qh27HPN2YSe0gWgZIplp9Rtw+7HEYqTNy+A8nn3Rc79Zqw8YPM3Z9eR/wc2
cYrDTRjHm6lqucEFyHqgO9vU0IjN6tXesZo7yo9iXP5mTT2mqprP+mF1ARLF
OXrMOuuwNKlvU/E7C3DCUeub1HwtZk3/4WUf8SJc9iEIfyJWg/1pvRmMcSyC
X5RVJBV/JZZ5W0xljW8RZlhfYkbPKjDjTob9WNFF0MXzlXuf4lhbz6g+CSxC
/c3YnypVpZi7dvWpfJVF6N88/0XHswSTGvhWY3prESIQYuDRKsZih18INj9c
hDbxlPRQlkJM6+Hdn87GiyBID7FsNAUYxZjMJxGLRTi9QmTMdyofs5kk2g10
XoSElpCTjZdyMT6jueTLnoswALLVNlo52MhM8/0dnyP9jtlXlW+yMeWFkEqd
L4vAXGJLnLyaiR08e21L+XURFINLpV5dysTSlx/ylaYsgpuWs38JQQbGtM7r
d7Z4EfBvvJVUhmlYi/Vxhc7KRbC8l3zpGn8q5ra1tuneuAia9g9eUv35ji3u
FurMDizC989mX9cbv2Exr6KPh48vQtyZ6jPbVUnYnQO3ctX5RVAxM17QrE/E
Sv9eP/fj1yJY/KLNF1v/ir14K9qv/28RPE4NJNTRfcV4COk/0hxbAg936tvj
CvGYP8nPtZeMS2D1yvoVYX4spvSuMp6Hfelo/zpmvA/+w34dS7rbz7MELz5K
OxJGxGCPj1uVyEosgZJ6yycm4iiMwe+O5bL8EqgOG3eat0ZiTVTSnDFXlsDg
n/8H9sQI7BItoTeh1pH9xVQzXccwbD54Ribn/hL8I/9T1WL/GYtiaFo2erIE
Il7O1nZvQjEy5mDNBpslaCHNdHf+EYwVRzqQOjouAf+50NnN7iDM6syDQiH3
JfA1VRNuIw7CBs7ysAcELh3NBz/tmd58wnzjKDoVIpZA4bkuzceAAEyRe9Vj
M3YJ3CVsXsRf9MdSeAsW7mYuAclN99OPE30w/eQvUccKl8DfdNACf/kRoxN0
vV2EL0GRQ5OLxu0PmLOwat6Z9iX4/rjIoUXIG7uQIWzW1rcEtE3nLyUIvcNm
LtCyuo4uwdOB/iofSS/slviw69TKEqhHdr5JMvfAiPPxS6E7R/v7wCN3O8Qd
K5RKmFX5uwRpL3f039e7YZxyFjdTTizDqvpnz0UVV8xQ5imXNP0yjDTd8b9/
/i2WIGW8V8u6DGTXRbjGB10wXvGHCROCy+Cxnifx6JETZnpR19Hq4jKoNkn5
8Us6YskX7qr/lVkGzmd3aPyYX2OCwmp/mFSX4bvP3ykKEgfMXEi1K0l9GSz3
LWI4Ke2xNAHlZHGdZag91TvSxWKHifJiWuqmyzDuOmQmq/cSEz8rnObttQyX
3Bh1M5RfYHZsAu4MfsvwUzB665+AFZbPyqPzNWQZUjpsOWP6LTAZJjYS/Osy
0DS0XlR7aI45MjIP3UxdBkJPaVJh8WdYKT1D5lD2MiTm8VB/O/0UQ6dOPtit
XAZ7Ol7sJpEp9paa4qJn4zKcfO4xak9uglWcJCWn7VwGtZ0ISVlmY0yJ8m+O
8PgyED8pyqzWeYJdJV45bny4DFsyFsq2Vx5j7wkXJjZJV8Bww+9dAt8jrOnf
dIHryRWYOfby5oPeh9jNPyNPos6swGX6P/fk7t/H/A4GZATPrcCn51FfxS7q
YW17PdSFQivw4XHxxUoGXUx9p6WkW3YFchKIC/0J7mGBWw2BBkorQLI4hlrI
tLGujRrTNdUVGDO/mhF3+i52d7WU7rjuClwaXaNXu3cH05tLM1dyWIGVvHBV
mcvq2JeZZMWONyuQXcR1VZXnNjYylXBa/90KCGTyfGXpVsMejUdVvw5dgaQB
LFFA9wYWOxoecSx6BV59e2wmeeE6NjkSYhWasAI/0qichulUMaNBX9asnBWo
Lg7W6jxUwRL732+gkhUIoHDDOUlVsNlez/qWqhWo4hlWoWBUxsy6nF/Odx7F
2+0U2nf3MmbR/Lz57PoK5AuFGR8qKmADskHjQr9WoKCyreCcLGBXUgp2pA5X
oDtQIUH/L4axfCDiUD+xClF475PfyXKY1x6fxAO6VTizWh9m9EkWWzdVu27G
sgokNOnnlt1lsDqVcFtX/lVQfLEfEeYthYnll33wFV0FyfZCgblwSSyKZyom
XPJINgLytBwJ7CWJSGPmlVWIeMWTz0wijnFUVbNNPF4FIbHdsBUyMcxHbOHi
iukqpKfzdl7Su4DtxlJd27dchfpPD00TzESxlre6NqdcVoE/QXCPfO88JrX2
xpvNcxVkOP5oCXUJYfH6CVECPqsgqC9TtFkgiL3G1uoUI1Zhrba1NiqBH5tO
ox9Ri10FioUbFHEpfJj6GdkN3W+r4MJjKexXzIvx/vZktck7wuM1OAN2z2Fd
hSwv4jtXQXtTQ02klxPD+BW80gdWIX70ttI1Dk4sOcw4snhsFWwk/1zzs+HA
3tpn1nStrMLre41nN7TZscWZ3sHR7VWQ+Pm+S4ibDdO++3t18fcqBHyNiAz/
zYqdF1dhJqZcA8eibDv2dmYs7Ku5CPWpNfC9tB99q5EJI6ILvMzKtAaGrJ8S
RltPYwMbwxaXeNeA70mdm8s2A+aVYV31RGkN3C8uG4v9oMXW2cP6rVTXoCnn
C2Pp2insgX/pspP6Gug3hv1okDmFXbQ4djpEfw0IGAVmXtZRY9Ej58/HGq+B
w4WWN+yeVBj5TU3FtOdrYPlFed7/1klsVDDavMZxDUSLG8gqjh3HVCOrXDvc
1oCkL6PZd4cCy6WYDx15vwYuxFQsUqvkmM/8xYrtz2uwTBfUbnVIhkknNdDz
5KxBUJ0Gs0UAMbaTPEHfWLwGboaqz5ILibDs1AN6i6o18LtVM8i8RIidzzrP
kNe5BmXa9cNUzwiwpHx9hr/ja5A4LTmXSnsoz1H6iUF5fQ2eyKtcsvb9LR9Z
WcXg9+8o//l4Hjv5ffmPTw4+Pju2DjLaDacF2X/JXzWh86GiXgeDC75yRsI7
8iRPz/tkM67Dt3++RhomW/KV5so+2uzrsH6L3d26dkP+jaW+zwHPOlDXThQH
XF2Xl7N28IkRXofXJ3alX3WvyO+9/OSjJLEOdz3HEn00l+Tz7L/7zMqvwyhx
XKH5sQV5m9dVPh+vrANG5vAgZGVWXtR52Efk5jow82t7TxLMyC+/2fbpurMO
kYFR9L7YlPx3t5O+9veP7P+23mKKnZA38eT1ZXmyDvc3kpl1ecblub3Bt/zZ
Osz8RPqNIT/lxz/o+BrarIO4c1ntWeZheb2Aj74pbuuQvOBdalTWJ98TUuq7
+WkdhtTXXp5h6Ja/FbnqKxu7Dpcd8UfPiDvkG/7j8HPPWActGf7g8+NN8ryc
wn5aOesQG6HygqGoUd4rXsaPt2AdaizO6iTFNMgrJWr6NZWvA8/2E4NIvzr5
shRPP9q2ddBOtm4jXKmS13P0//hlcR1C/nw8fvNaifyuarj3uWMbAL1tTKdT
cuQXPWS+5VFuAMnU+TyJ8Wz5n2VDdSpUGxBhqTDxnD1bvkaMjewpwwZkpXTW
D2dlygcxx3v+4N6AJSI/+1GdNHmRhVQ3SYUNoIzIfOVnmSDPxa0WV395A97N
9Zxrjvoqz/BwtULn6gaQrnFftumOl//TcYHA6dYG8Nnd/pmkEyffVJj3Bn+w
Adeet9PT20bLm7zHna693oDbJq++pcuGysfwddvpZW/A3ZOnoZ7qnfzAWYJv
g3kbYBps4ZdxwUuelkl4QKdoA3g/2VNq3feU9yL3lr1XsQF+CU+l7Rrd5Z8v
yP6707YBPxyypG8SuMrLpca/V1vcgDP6FQeMUg7yAyI2XxS4NsHi48+LW5Zm
8rSSpyp5gzbhwtRxv/9obshXplc+W/fcgqbmK5QLuZTymTdj991MtyGRwS3K
vLxdbkhrY5bm4Q6czfwbtHrPXy5sVUzq3K1deOqlxSH+4ZZcyI/Y5/9EfoF8
cnTjHzdauZY+N4IBrj14IO7xqZ+yS/YKT+DrV2T7MB94RrhMNFT2Numnu9Ez
+7CMPm8wiOnJht4m/IT3H4DWSU+L85Qssqx4bMb3ot9wZpPURkh0TGY4PFs4
MP0PlCbH2ziTx8gMh21+Ugj+CyVjw8mp5gYyVvxc92xfHkLYYNxYvgqPDMZd
45Ro8g9GrK6slc9MSydxNim1nyNQ2N4UpNEuSpZuMlmyb/qPQEGB598bjnem
0oW2niPeTIQKrWUE3Vc/8UmrhOaKC3wgVKCoW7pub7kstbHIJq9KTKQgIFI5
G/45VUr+Drukmh2RgsxhRJ7z2RdSGp6fDehmiBSKiDao//RdkvJYvCqvo0+s
MO3p6HAufkvy7pNPFG7txAp2e5GUKqYFkrGktBqOncQK2o5jbJsP8yUXvwWH
v+wmVvhLb6Cg/zhP8s3yZz6TfmIFidPny03f5Ugm20Ur3xg74jvM3ae9nil5
4J3ixrBGrJD1XXNqMy1JMjatZv87FYmC6d40j/leqOTiLRXFrzQkCneri25r
/wuRlNiofx9FS6Ig7xyjo3oqRLJJovl0ACOJgrPMkLaOVpDkVnmnhC07icKv
X2uNDqH+kiqdo9ZIhESBi0Mq01XVS/LTy8dFUhdIFM486J8R1PGUHGaYJBC7
SKLwe/Ylv5e1h+QLvZkAbkkShZO92u+eVblJRkwt/SBHJArMjxl+7ce5SE57
WewQKpAo8BKkpJBpOkuK8K/J/1YkUZiSX2HYpnGSrHq+2byiTKIwLTQ83Fv4
SvIEtS3d3FUSBUScvOkf6yB5L2tHb1yVREG/rSE4K8ReMv6OQ/zgDRKFhH2i
Y1khdpLLO3sLXWokCvQ1Du1ksbaS/wNKDrlb
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3198#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
B5/b0OgR6l4rE2oI/wN8rySx
                    "]]}, Annotation[#, "Charting`Private`Tag$3263#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c4V+8bppRVsgvZ2dmFxnkfWVFIVqLMMkNE2SF9JSsjM1IUGSHZ49h7
k2TvPT62yvj1++tc93U/13Pf53nOe73n5jS113x4hIiI6BYJEdH/n1a5631Z
17vwRJqnAYOf8rH2HdOssEtduGoGLde2UgF2AfW8cBbqwofU69LxpQLsoDlP
DDvVhSdNDP9eVCrCwqecXrf2deI1v0u2Sy6VYjuC08Y5jZ14Vy515x2SMuye
g450ZEknzuJ11be/twzjPbg4ZZDYib+l2D8h9aoCKzm9gy0+7MRj2yhLcbYq
jN3Qgr7jTieOib6X4U+swvxSfi58U+nE2159mVDgrMbUxYui3YQ78e2wN83k
kjVY7dv1CbqFDrxMr8b7t38dFsLVEzrY1oG3peTmX+Svx/Sy864m53bgEU+y
zZjb6rGlRqcoCdcOXKDLoc+SpxGj39tWuU3WgctKGo3z0LdgI69+bp9ZasdH
bzhQZAy3YGkMRcljHe24OuPsAmVWK3ZV1HXfProdLwpkcqM2bMcemP7NCeFt
xw2J28pZSbswkdXB+7oU7Xio4jWDvpdd2K57GQXbShveeVmdDJF1Y0FvPR9k
5bfhdcSaxwPO9GD5jYenWxXa8N9b0kWy1j8wb52x2gj+NjztrVPZe/I+7MZE
pYPBiTa8ouFzS1JWHzby16dloacVZy0u2KIj6ceOi5I8JzdrxUeribNqVwaw
ztIpoS6lVvyN4nSqZOEgFqdc1x8j2Ir/uL0h//TlECZi+p8E/3oLLmogxsBz
YQTTfUs2o+TTgmsJ7Rm9Wx3DfvUyz341bcETAl1crF3GsXv0wnOMCi14X3Xi
p4BjE5hJxO2FmeMtuAH3Vtd14UlsqttsUX2uGc+8f3lKtHESM6d9ulTQ1Iyf
HzaR/2sxhT0Ki1v5L6gZ/+QgzDhYMI2tdmaurtg245/fnFOWM5/BHKlxgu6t
ZpxulUFPgmUWexY6uc5L24xLV7+9ZRI1h/kGn9+pj27Cs+06ei/9XMSOtaFd
EdcmXFPq6i5r0RL26sTt31H6TXjHF/8S5qRlLDjQ+a85axPec7FBUvG/VYy6
xX+v/aART2d3eeksR8DCKeL2pcYacfLzr1Zb6whYTEDF4fHkRpw3lIzhxK81
jLmpk8jerxG3/0DXI221jiWQTRL/fNiIi35O4CHsr2Mf/UlJUvkbcbLPE1lx
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
+OnSTQRAHuYXjHObmzksv82u
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3263#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$2394#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2394#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
UTS7tjndpY3HqhJjTmZcFkX/A55qqqg=
                    "]]}, Annotation[#, "Charting`Private`Tag$2390#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c8lt8bfl8hSZktSSJECmVFz7lfIytEAxllKzISsr9mZIWs7JUkK1lR
vfYmI1v2zt7bz++v53N9rvO57+u+zrnv85xLehb3DUlwONw9Uhzu/9/nX5c7
M2VaiclH03xvNAij5g29zOBbrcTtaY8sFTYRJIDaPWyuthIDHcJ5C51E0H79
Nz6MupXYqfwNe3bzFgoZs/Zt7GwhYiqR5/7liKLiMxvYP8MWotroqszaIoYu
PjFm+K3WQvzClrvU/RQhz5SumVy5FuJp6RV5tRaElPiLIhyutRAJwiQTYgWA
KsOWR+hnfhO/JkvfvdJAQAy763IqFL+JbfRtWZ87JdCAT9f62dlmIpXe8e/m
TJIo7VRR8tDvZiLnZvkVIX1JdJvXfs8iopnI88BOtG9FEhno7eQEcjQTy7bY
pWcu3UH5tQdnGqWaiAxq71FmngxyfTRU+f5KE5HLvmbLjkoWyY+UvtSkaiI6
hd75+9ZQFg3suDXMtDcSNcbcDgLOyyFyXtL/juk3EpuVXImfIuSRahjFhLRb
A/FPtqdu3B9F1POHcTJLr4E4Rqn90VZBCWkxXJs6LdVAPL7xS5+vWgnpvleZ
mSBvIAZXDX4yIt5DL4Kj5t/41xOP9ql/7x9TRgstGQvzZvXEq6PcSyVXVJAV
DXFR9V490ZkVOr+YqaDX70aXOejqiddfK3U1b6sg9wCejeqIOmL795GWWNYH
iKwJbV63ryNqvLvO6GLxAPlQqWyFa9QRb37Xw97/fIAC/Gx2jC7UEQc5wcdC
+yGKfPvrgDy5lri2GVPulPEIZXopU8hk1RB/F84nhPirI74qvWPZ72qIWgrj
pDcX1FEuqQ3lmZc1xPG4/JSnDx6jIo8PVJM3a4g+vU+CbFk0ULnbCI3392ri
TLGy5b1mTXSnbJV2IaqaSPFMS48MaaFa3FF6Nadq4jfpy5ecsrVQ039XT3FC
NfHroqVibYQ26na2PldTWUXc99RO/eTyFGn+fMPIm1pFtMrHe/LuPUUDu5Hn
I7yriOp04v09SAeNOv68YCxfRQy+ERHxrFwHzduTsx5tqSSyi+N72Dp1Ealt
JLdMXwVxT2mCZ/KmARpcJOUt+FVBlH+ib5r6nwEqNn15kz2pgvhRQybdrdEA
WejK3z7yvILI+v1Sf8xzQ9SrsKtIXC8nWtoamgx8NUI5bDovhenKiaQK2+be
Ls+RX1yjTepaGZEieTfxwsBzZHTulsOpnjKiXch5EUYwQeep6TxW4suIn+qE
EzTJTNGb7YrQ7GtlxHs/NiEi+QXSauUs4pQrJRZ9epS/fcoSCSuE/gjnKSWy
OMe/kL9viehqcGVkNKVEE8MUKad3lijQ/tv7mkwi0c8sKuk91UtkoHymEOp+
EX9cXJ5epLVCNPsDe7y4n0RHh/LIdwrWqHqlkPxkzQ/i7W8fZb5EWiPH6SDq
2YAfRMYmc5WxcWs08UfiUtr5H0Q22rnbRA8b9ONLqhSLcAlx0iBBJ7jJFhk/
NvejMf9OZJwiXUqJtUdFJn6OJ4S+E+ndf1HW79gjCqc0U8r9ImLf9iMOOU0H
lB43cpc0sIhI+e3ow+fMjmh2VJVqM7OQSG2+w1OW74QszSFgcC6f2EwvW1d1
2hWV/qfl3J+fTwytSnk6qeKKaIPtzXqc84kvtoJkRwJcUe63b4rtJ/KJS5PP
Iy0p3NDaJufJmmt5xPr8KmM5Cnfk4EHzLsssl7jtb2Q/LuiJ6kOv/fdFMJfo
utA+zePqic6nyluk7X0lEqL61L0aPNGPWs97SQFfib8zns3bGXqhgxNb1OGZ
OUSyh753+1PfIAr+iks7vZnE1FipJGX9t+jzgz38mkkmcbwx6H586Vskbys8
Mr+dQQz8+XJR6qIvCij5kjTCmEGMmzYoShvyRXTSoWz1GulE4z+MHTrW/ui8
piH7h95UomUO7Y07Y+9QnKyRKoNuKlHZ7+3mL/4gxCpk7P1u8iMRF3b63GOr
IMRN+3zaazWFmNh/2SV8PQiJ1rzItDqZTDSgm3FJOx6CfuWZDcyFJhF7Ltay
fnwQgiSSzKmfn08iUrHaLJXGhCA5Z8uXT68kEs37pI4+u/EefTWaMon0jCMW
FMj8WTMNRUXiM42BwbHEI8Wip8x+hqJSptnrXnExxEr24ypcNGGopW1h+WVR
FHHa5eCk1/cwNI82HO7OhhO7P9y312KKQGrXqU7vfQok+li/snnGGYWMxqh7
p8v8ia21D8J+votCtlH0cZ19vsRSo5rJ3K0oFEp+niOH2ptYbifLG9kWjVJ+
PnhRPe9C5FaXf3jsQywq59JcjWd1JLZZnTU8Tx2HhsP0nOxVXxPDZf7akHrH
Iax/5OxjJwsif+s+tb1TPGJpHw1+lHuJ6Ip0HHSICUgy/a5m3KocvHP3esNL
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
PzBOI8E=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2390#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1.}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-9: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )]},
                Dynamic[$CellContext`i24$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.834189619580703*^9, 3.8341899559906673`*^9, 3.834190167641316*^9, 
   3.8341902832534437`*^9, 3.8342235951991835`*^9, 3.8349692952670417`*^9, 
   3.834969627687886*^9, 3.8350360827282114`*^9, 3.8350478185105047`*^9, {
   3.8350479094799366`*^9, 3.835047957551081*^9}, {3.835048037570036*^9, 
   3.8350480824975014`*^9}, 3.83504813766044*^9, 3.835049022835271*^9, 
   3.8351044135157075`*^9, 3.835315896838654*^9, 3.8354437080911818`*^9, 
   3.835448002070318*^9, 3.835461979875081*^9, 3.83546231244777*^9, 
   3.8355255599090385`*^9, 3.835556416112336*^9, 3.835561416478913*^9, 
   3.835573943385479*^9, 3.835641474036649*^9, 3.835644320220892*^9, 
   3.8356445104010115`*^9, 3.835722636137182*^9, 3.835723373121335*^9, 
   3.835723745202732*^9, 3.835723867563878*^9, 3.8357240369310493`*^9, 
   3.835786324292692*^9, 3.8357873721229057`*^9, 3.8357942379691396`*^9, 
   3.835811520204309*^9, 3.835811883230545*^9, 3.835812577869569*^9, 
   3.8358162704258814`*^9, 3.8358170677194986`*^9, 3.835826610764491*^9, 
   3.8358661981036577`*^9, 3.83586639192728*^9, {3.835868825031026*^9, 
   3.835868886632757*^9}, {3.8358695224287853`*^9, 3.835869528011898*^9}, 
   3.8358696340271606`*^9, 3.8358779862685957`*^9, 3.8360096334253826`*^9, 
   3.8360752229220877`*^9, 3.836078526011904*^9, 3.836765188789554*^9, 
   3.836765231431469*^9, {3.8367652789515953`*^9, 3.8367652997606277`*^9}, 
   3.8367653329957047`*^9, 3.836765546373288*^9, 3.8367666796359777`*^9, 
   3.83676672468128*^9, {3.836767833792293*^9, 3.83676786219881*^9}, {
   3.836768637672381*^9, 3.836768677356091*^9}, 3.836769238576535*^9, 
   3.836769346860301*^9, 3.836831512690666*^9, {3.836831545565346*^9, 
   3.8368315647497587`*^9}, 3.8368316847343187`*^9, {3.836831887834838*^9, 
   3.8368319066613913`*^9}, 3.836832139368376*^9, 3.836832270591339*^9, {
   3.836832356062504*^9, 3.83683243231956*^9}, {3.8368325427527227`*^9, 
   3.836832557036284*^9}, {3.836832905869166*^9, 3.8368329511106653`*^9}, {
   3.836832982761159*^9, 3.8368330111900253`*^9}, 3.83683340216833*^9, {
   3.8368334326654577`*^9, 3.836833517692354*^9}, 3.83700611197012*^9, 
   3.837006199818571*^9, 3.837006247509058*^9, 3.8370062933938513`*^9, 
   3.8370077958299513`*^9, 3.8370079704388046`*^9, {3.8370207100987864`*^9, 
   3.83702073030617*^9}, {3.83702090453015*^9, 3.837020925042938*^9}, {
   3.837021039017241*^9, 3.837021061297274*^9}, 3.8370211439640913`*^9, 
   3.837110022403248*^9, 3.837110159124164*^9, 3.837110204973024*^9, 
   3.8371102639647503`*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"2882fc60-56a1-46fb-a101-ef4a6614d756"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"vWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"8", ",", "0.15"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"8", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "8", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "8", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"vWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"vWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"vdecaytime", "[", 
                 RowBox[{"6", ",", "0.15"}], "]"}], "*", 
                RowBox[{"valfa", "[", 
                 RowBox[{"6", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "6", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"v\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "6", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", "25"}], "*", "vbeta", "*", 
            RowBox[{"10", "^", "6"}]}], ",", 
           RowBox[{"235", "*", "vbeta", "*", 
            RowBox[{"10", "^", "6"}]}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "Bold", ",", "18"}], "]"}], 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<U/\!\(\*SubscriptBox[\(U\), \(0\)]\)\>\"", ",", "Bold", ",",
               "18"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Green", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 8\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 7\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 6\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", 
       "\"\<Plot-10: Animation for soliton propagation for input voltage \
0.15V and pH 8, 7 and 6.\>\"", ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "8.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8323262286744003`*^9, 3.832326271329805*^9}, 
   3.832328053662571*^9, 3.832328422372931*^9, {3.8331263789430857`*^9, 
   3.833126380435629*^9}, {3.83367144338605*^9, 3.8336714446735907`*^9}, 
   3.8341842336285295`*^9, {3.834189636830991*^9, 3.834189640880768*^9}, {
   3.8341901784802227`*^9, 3.8341901791785207`*^9}, 3.834190267591358*^9, {
   3.8350478270410795`*^9, 3.835047827685376*^9}, {3.835816340560115*^9, 
   3.8358164136403513`*^9}, 3.8358662223778763`*^9, {3.8358695415101213`*^9, 
   3.835869618470492*^9}, {3.835877890200179*^9, 3.83587789290409*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"15b9cca5-8c0f-47a8-8184-14433a284c75"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i25$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i25$$ = 1}, 
     "\"max\"" :> {$CellContext`i25$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i25$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i25$$], {1, 6, 1},
                 AnimationRate->Automatic,
                 AnimationRepetitions->1,
                 AnimationRunTime->0.,
                 AnimationRunning->False,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3333#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3333#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3333#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3402#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c41t8btkNkphAZRSlClPF+ziMlUhkRokLJSCUyyohEhEQ2kR2y9/7Y
e7z2Xq8VIUKE8vv+/jrXue773Od+znOd69yH/4HVrUcUZGRknynJyP4/WuT8
6s9Q7sKV9S08FcheYh1bDzICZbvwW02bsR0WrzAp1PPW7kwX7nJI50rCd0fs
X0ueOMbUhZc3J+xJnXmNPWQ5cYCfvAuvPt9Rlb7mijXpBo9RrRNxlvec+tYL
btinGVuftn4iHj+yL/R70x3bEpk1ym4i4i8v0R4NY/PA7lrfvhhcSsQnXDZb
aRQ9MaF/0jMGMURc3njulE6fF+Z7JbkUAog4g9Fa4z3Ce2zVhyNQ0J2I+3Ad
mPEs9sFKj2xhPx4RcUEtI93Lmx+w4/fN2Dt1ifi6V7Czf/FHzCNxYDH3GhH/
NVy/f741AFOTKA5zFCXipuoiS4d6P2F5Dqee3T9OxPNLywRzfgZhRyvDryiy
EPFT5B+YqY6FYHUhv0hsi534H81m7+K0MMxfoOfjSHsnLhJ67RxiisD0svII
CTmd+CgPi1+ldyS21GQbKvmqEy/2qhTKxaOxwtu3L+/c7cT7iyj0+12/YG4k
6dVqhU5c+c37orMZsRj73u9rmrT/6VdbaJjkxmPj3gO/jy514GFmpYYH2xKw
lMPFCZOdHfibggc3lH4nYoRzr/5ahXXgx+1Guc3cvmI05XfSLjp14NvlBUpW
pBSMqCKnu3+/A8/tiYm/cScNM3mwm+0v1IEnUFytdPPJwMR+jtzToe/A1eQd
498qZ2HbTuX0vCvtuHhBAZ/Bx2zML8TFJKOgHX/VqTe/GZCL6QjcZ7GLaMc5
97A7SSl5GF8WqiS4tOMT6j+pW4j5WEHT/pG2K+04g+rEHWOdIszt9mRd0Kl2
fLp51XG1oBhTJVVZGzC04+7jy/7nREqx8d03rYs9bXjex1ybzNsVWIr3g5e5
RW241kh8bAgTjtkcvnzSMaoNZ3uuMlJpXYXRnKNypXvYhu9XaCnVWtVgxLKZ
M11X2/AhmZsxrz1rsUiV+sFwkTZ85ItHXeC3OkzswTvJU79a8dc5HmXJZxux
7RXTiZ99rfiucRFUv2/CapyU/YpKWnHHwhslprvNmE4I7dzVN634bPdahBx/
OzbUyzWf+aAVF034uHbsXwd2l130O8eVVrxv/a8o7kzExrVg4fXJVnzV/hlj
qk8XZhykuThH04r/bAvN7Evtxma6H/5Q+96C273bTDQc6cFMWe2XCptb8Cde
R0Jf8PVhTwIjV975teAizfQGNxcHsJ/E9J8rT1twJZX3kV3WQ5gNM76qo96C
B+5oGhqyjmAb6l1rleItOJ6Y6xvQPoo5fJz+JcTagvcUnZPhTBrHdjo21/3X
m/GfcRrZJjcnMedDtJu/e5vxGAcjHWW9Kcz9w9mthrBmvER/M0Q3fhqjbkfb
Yq+a8YQhq7H66RnMm0HzT6h+M058yqtaIzuH0d94uPNP/r/1L2PuRyfNYx98
7XZNeZpxP8EAgYpTCxhzq9dex78m/P4TkntM3SL2iT7y74XJJvxoanJTv+MS
Fv6+cp8moQnfKh8//4l3FeNqJpJZeTThd2s5tOyF1rBo2mnygUdNODUv5Wc5
+IXxqWxSgHITLr7MqL1usY7Fex2g+nqqCafycrBs+LqBnWzkpGaib8IDRwJj
lv5sYik0Z2kcfjTigWOOqbnGW1iGpwatcmYjXsvpv1XusIOJ1z+gy/rYiEeT
x8XQn97Dcqns6I9YN+LW6kokxt9/MekrXgddbzXiuV70Jn6T+1jx2wiG+fON
eM7Or4dSm2RIrvYbo/rhRpzA76/cTU+BKigqDxX9bsDjf9bRSkhSopo3JGav
kgac1+68akcpNVKq3mD5GdmAV37eo/LlPYCayA6w6To34C+r3r07EEGLVBU4
2fF7DbiP6Zx88Rl61O565rAwNOBKb0Qfnh48iDRwjOMjXwOedEMzkCyWEXX/
Uz+yRd6Ap4rta/zzYEKDLracjXX1+KcB7ZdkAyzIoOId17nkerz2NIl0aJcV
je+Fc4d51eMH1Bb8WyTYkRHh27F983q8+8wD9Mj5MJp2quAxU63Hi1V7FU6M
ciDTsk7ezjP1uMzM8zzjW0fR952p4xcZ6/Hbd5L6PkxyopVXNAIHiHV4/e6+
6aIqD7IuOSpolVOHs9NmSTqIHEcb2yInBj7V4faNHfq6wXzIXgY7CbZ1ePXY
hkttAj/646Au9PV2Hb5hacDhWyeAnIuMhZku/qdnP329ZUsQ/fv94pTD0Tq8
y1XPJgudRFT24SLKI7W4lGVF0zuGU2hilepcYWUtfmjd/IKx02lUaml9/mR8
Ld5SydJ8hOwMsjJWJVBa1OI9xf7sDzXEkOpooYLNjVr8ZZB7jRmTODqhK6g0
de4//AnFXxMqCTR8Y+8m/rsGt1/iTqXjPo8KGs1viQ3X4Dpd3VVOSAoFKPbp
RFfU4OspLtnXX0gjJZlMQyePGrx164WfzGEZxJfHZbJoVoO3pY1FhnnIoh1R
L/M712vwD11PCobp5FG2oJH1RdYavM4tJEvPACHfmDa75M1qfLJsXejCYQVk
yinreHioGg+2d173pb+EuJlY365/qcYb9SwX1vgvo9/vX3s9eFuNy9pW3m9X
uoKIVD98u0yr8WIltXUGJyX0bqc2OEu0Gn96o+DFMo8KMrYTj+BlqcbZb6ff
6vpwDRFWP0d/2KjCCw82CcexXUdrs3bJlmVVuHPOMbhlqobajEhpwzFVOE5b
nUDDrYGSR9SyrrlX4ecPywgUMGuiu13CxcLXqvDPToFfR09poYs3gstDz1bh
bZaWsfw3tRFrI1k1NXMV7mpIT9Hlfhv5v8oLaszAcQfi69dJQnroipXf5yRb
HL+Uit87FHYH/TF5lPRWHscnWbaPW/IYIBONI0XQXIlrxVfVqFvfR1xXV3Ge
gEr860ayzBCfEeqUb27a1anEx6XHvCc5jJGcsNNw0UwFLrxOMd187iFaPaY9
HfKtAvdIEPN8qW2CklhFl17YVOB1T0gjYT6PEPO/8b/nyCrwOeGv34zOmaOG
9SKaQ43luId5UalarAVyWghgWvpQjh9dvvdZRtgSzfUq8qdwl+NS4tdkNJ2f
oc8t3CLvSGW4xR/9mQyh50izakPSJLUM13i1dPIQjzUq/5Z8he9iGU7GWRVR
cuEFsolzvfnvbykuylhG321gi4TD9HRG60px03CJ18af7NAnd3rz8FuluNK9
gi1emZdI+eX0c3vOUvzI0ahHn1Jfob2n5a+0J0twg/Hn4XQSTsjszjNf5mcl
+ApHd4SO12tU/NjXifFCCV6YbzPSJeyGaJ1TLOn/FePsiyfcVDnfoLQY0nUq
/2K89okCi77wW7STtS9PrlOMJy1nVMQreaDr1cfO/uMpxuOMfz6Kt/VES9M6
DNsZRbjiy/rAclpvRNh8sbdhV4TTUgbpb1m9Rx9oApfWsCLcOMri8ZklHyR2
urXtR3shzjVl8MXhlD96Lfe9/HtIIZ4bdLBY7sdH1HmdOmP2XiFe95cyQngm
AD1/Bh8mlgvwFDNyg94fn1CV612X0YICXOTnX4MEmmDEEvjq6ZBLAd6cPWe6
KRGCcvPybvYwFuBv7GXPM1SGIcp6Ikbsy8dLZTRjFvkikHb/smh7dD4+3EUm
8CY8Em1uCx9qFM3Hc+OlLuEt0egqvdK/2s08nDk725PO+wsK5X6wUlWRh4+9
cc5OzYpFMuhzR+nNPBwP5HtxICceeauXVBYdzsMDR3UDzJoS0JBRf2b+WC5u
mmliemQ1ETm+Zf6Y+TQXLzkVnH7Z9itqCRZ1/SadizPlSENPdwriTla1Svmb
g5/oCfMcVkpD5U0e6vEfcvDSEfaS088yEONwHHy5nYMrdtHxMghlofs/Ks99
5snB75B2kjqcstE+4x+m0IxsfEz97vqqfS7SOM5BFmSXjRNnz3Ys+eShWPHz
qx+xbNxvkDqLOisfvU0ejmWLysL3uF+sGJ4pQiea2d8wnsnCvVRU9zI8i1HD
DzXjA2WZeELWteNSGyWIVqKWf3c4Aw/q5D+Wx1qBUrX+km8+zsC9ohJuo/pK
pGp/kbSyk44/Mpe9FKxShT6UfYsncaX/dwcndfyxGiQ2Pus+mvYNr+5UMBVX
q0VEMr6H/XLf8Fl/TpOKZ3WI9WqwYIt+Gg5th4vuTTegPPMOyrrFVPxLbryB
g2wT0valnalwTMVpFYgyPgnNKJTonJgTmYIf5TUV1S1uQxfXCz2+iaTg9Mom
iVGPOtDg4TWTpNKv+L3NnMPbh4mI2+DRyYjhZHzZ0bZ/lKobxaiY6rAbJ+Md
OMuv4tM9SOCCmdfH+SS82OJq31njXpQsaF5M/ywJt7s3lGma3odEWCwWPDcS
8cA3xaNfGQZQ5j8LLnKnRHz8W6Xg1beDSHLp8XVn8kT80OLl3XSWYSTX+CTD
5lACbjCWwrTlNIYq85+OLwfH45tSLv4iBhNIMf4ZkwV3PN7trnH2Ufokavho
pTATF4c/O6r4/EHZFLrm8tza8FQc/mqd/1/QCAm1P7aOH86Mxa+xkKxZDs0g
TT2bntvSsTh5UbAwlfYsyjH9/jjcIwbfyKq5r3b8Oyq+tNjmHxiNq1W2DBl8
XUBVx5bEPGM+49SJtGduqvxATVvLAU7fovCZIbL+QsplROz++cu6OBK/s0/H
oDyyggYz1rTN6yPwYIem5Ifmq2jCe73wfnc4PlX9g5XpxRpaQVuO15dC8Ydi
EYcvl6+j35x/Ri/9CcF98GELyr8b6N/GDpKhCcGXmny+8d36jWiIe7FibMH4
W8f8ptnyLcT47R/FSb4gvFiWKicX/UHs78gecYt+whOOsX77O7iDjhlTNLLI
BeLNF7Vw7Q97SFeMgePvV3982G8l3uokGZjOMA0vVPvh95VoiENnyME+ki2m
f8QHL5G3yV9SpABPjSMPaje98cnBSNoiS0oIpuEWymbywpmeJuTpfaWCxHLe
xc+nPXGtnbckyi1qyLMRyHx/+S3+OalP/J/BAUis0HrSsPIav3iRETO0pIea
0wYbXwSc8AozkaGKowwwFfLA+ZWOA05cDpG4P8UIZBSPqbR8XuD9POSiuw1M
gI2Sjt5xtsJ36ELmCmaZwTF/7RTDjBmebxzldGubBYr9yGTx60a4oqBL+r1j
bMDXMx14O5cfF/Pz60TRh+Fy2nWDmI1rsPeTUdV9jwO+nvBmXBC5C/SE/RYW
m6PAIVdgX53xCAzv9AXp7nPCkHGy6aGrT0E/6vxUbxI3dNRd/yZqZQNRFf2G
gmY8kKV3RVBb3h7UyThLfl85DjZu0mxxPS7gkXL8am0mP4jQh9VPd7pBeUQG
kadDALi0g8i3Ctzhfru1esG+IByM+YjRf/aAqglElnvlJOzN+77icX8Huvfj
FtRihGBJwrtA3Nwb7B4bHRxhPAVjTh5rl9V8wLhTJr40+DRUMrlYPObyh7Cr
6a8cVs7CucQ+K8bJjzCaptZ1PVEMNI4dkR/sDgDGLAURMjlxqMq2uuQU/gnE
eqoYv5yXhO2dqLobTkGwkB9/7ZDyeRBXalLmvR8MBUnO0nWPpSB2iE+tWjAU
in0WJhbnLsCg4M2uTzRhoKZBJWB7SQaYn73SNlkIg6e/V0bts2XhDUW3/oGs
CLDeWSggEglQeuPf2GBgJChJ33Fs8UDwK1TEOM02CuadjD4rnlaAB2femt2U
i4aaxeem+XyKEGmXtcjLEwOLnkI/ViUvQw8+8nR1PwaqDj5xN7x9BQREuEqb
H8TC6CyvfV7HVUDq2U6SvbFgS20wnyGsAvq2V7EopTgwOXBcgybkGnyqtKl6
cioevkyYmmfn3IDMaVr3voh4SEur3v7yUA1aaL9cRgcTIDo6oDDkiAZQaLU2
MK0kQE27t38kwy3gfWns/dIwEfIZWR+/5tECueita1PERBC9UsPohLTBZl6w
PTcvCVaH/dNC83XAn6HUn/tkMmRZuS3XH9SDNAkNDY/QZNCl/kwQd7gDJCfn
ntuvvkKYkhXD+4934V8sa0jl4leI/un45hDcB66GFB3huykgREx136c0glvM
fUPbKBWs2+zFj/w2hmfSllHG2akgf9teVYf6Ifjok99r4U8DUaHOEN8TJlCT
KDoZRfUN7G38PRJCTWG8uTaOyv4bTG4Qf/v/MIOdlTsPn85/A9dzvr1vtS3g
vOy7OdSSDq+VKCWvmT0BjfvHUr7KZ4B1TodTEtszePI214I5IwOSN65XnRiy
gsT28aWpj5lgy669WDFsDVW/bDNVybPgTev20ep5Gxg9cvB5nk0W/PI74+1J
ZQv0OVGvakSyYWDhSyCNtT2E15oO2z/MBqbMMAJe4wBC/RLyZz5nwzT7QJXk
qVeguNu4F8SYA1EaVt/mJZ2ByBh0T+VqDjB+MX0SN+wC9/nuV+69zoEm45cu
tFGu4Ki04fpoNQdMNLgPthe8gbBfBjJDorng0p3jqdvvDvlfaldvWObCNRfr
68x0HkC8cSa1KiUXcjvNHTjUPWH5zydjqblcoCfXp49MfQf0X3c4UwTzgKAX
3j7K6Q1C2g+6uY3zYDlwHzsf9x6MMiUuU47mQVePrxZxxw9cDCJ27Tnzwaex
nV+I6A+RtOT5izr5IOKxvatrHACFBeZP7gfng7rzkZtHHgdCzwPiie6ufPiZ
1NeMvf0Eq0wyY0pMBTD14fbJ+owgYKj4ElJyowC2h8R98xeD4eoRK5q4xgKQ
KLhZKRYbBg/r+ivZqQvhkJ/oEWbuCHCzRg7eioXw6tCVzwcyIuEzb/K5PddC
yP6p12Km+xlKWhm/W1UUwsV6jrQg7hjof2kXO71TCPJVq4T9nS/w6+SYnq5M
ETBY7q6E7cbCWbf0ZpRXBB5j6JSwUAKoiLK7564WQSZhi1FDOxEeDTvJCYkV
Q7LFhU8QnAQxUte/MaYWg5VY2R/ZmylQNpX78M1cMVSkfelDTakw6M91bFOw
BIhBwV1/9b4By8KC32hMCdzPsqTewTNBLFRTSWO0BORrJ0dlbmSD6uWSv7Wc
paDBczLIVykHPKK9n30LLgX5spsfiP/1IVZ1Veh4dynYpCX+3vDMh4ot3YlP
TGVQ0xvDFVRSAL81hTUcfcogyVk2PVGzGNj2/WlXGsugS4tnV7moBMTTf1cZ
U5fDAX5ttRqxMrCgaZC45lYOdy1F1p/croR3eaKL5RXl4KTP9qqLogrijULi
xXfLociaEx+ZqYLRUhO2o/YVMOR5pcmjsQb+mLW1+uZVwKSYdKxNUy1wHJby
2F+tACkp6Us/eupA3Ypyc86yEjRSVzQS6RuhRjC+v8AYh5qOuhG6zVYYJ9J9
PP0Fhz5tHRUzlXbYdbFWjh7F4VaqEddiYgdwPeG7W3OmChoeLzT6lRFBu+Fn
W2pyFcgHJLccLeiBwx/fSPfWVUGKwWm5U3a90K/LFvOPVAUrjW87GS/0ge7C
BSut49XwW7loN7CoH47mNg24YNWg9cSu7pv9AAw66iukGFSDJ24+FnR+EPQZ
XrP8DasGbMhIWS1hCLj7mByFC6uh3Hwl9Yb2MIxGx5E0e6vBL4dC325/GKJN
z193/lUNxf7isz0JI3D/XH1eMnMNGMr9WX6hMArHt3WOdYnVAG2eb//D3lGY
rPrusXujBhhE/D8U3R+D2PeOyycta8DqT/hz3/ExML7FoKPxvgZ6nVwuHNAa
BwHumErHrzUgzUToNiobB9L0OeGk+hqgp6tCExwTkJBe/bFzugZaXIQFx0wm
wMROa/sPeS2cHQiC1sQJOIlmjU7w1cKdBqUgyf4JmKNxaFZDtaC5wyVWuD0B
XztpJV/drQXWx1ka9DSTYB4eGZngWAtvdDnfstNOwmnjs5Qd4bVgFH2l2Y5i
EhZPV1puF9ZCmXJ2sfXiBKT9Uu8V6KsFGQd/4nLVBFiWTRFurtdCsf7yjUzv
CTjr8SLJgaUO2JYU3Y8pTsDSDepD8efqgCpJ7UDZ8jhkHA6zb7tZBwaDFqWC
fuPwbPzUxG/LOuA95f2Smncczn0tVeb3qYMaGvdg/sQxWLW6kX09pQ4c97R5
rx0fA2vy529iZ+qgTnrwGmF7BCRbyBdbKOpBaKFhclx3BH59Crq1yVcPerUx
jNLZw2B7okhQ9V492Hn7bLSrDYH0soqfrVM9vC/nstgIHYTfBcMbMRH1oEDp
rx04MgAOyv/q1/vqwUmg/mX2vX5wfKxkHq3WAHSpdI5VBj0gf36A2PikAYTV
72ccjOmGvV1z2V8+DZC8o0cVT+oClw9+9MqNDeAKd0OjbYmAdHhfWM82wA3v
hzqZnp3wjzd7JIqyEbKcx9LpRTrALbsnfRUa4azAiEq+XytcevXoMPf9Rhg/
X9Uydb0FKBS3XJScG8G2W6qpjL0ZPHq41COLG+HWztV2rboG8PptvHZZoglu
XmzG/aNrYPVthI7ZzSZQNnzcSV1RDXosXWU+Fv/hahEyx2erQOSswruuuCZY
Nqni0o2uhKAShx8bFU3g+4/ucujxCti7mqVxdLgJxO5+LOzMKYMOY15uQ9Zm
yKIWwIKpSuDiz9tu7mLNcEAqt+NKXRHEOn+YTVJthtIPudWET4VgHbaXteTe
DI3nGg6f082H4RNSh5m/NMPera5xws08UMy1dDxf1gwcG9ekS9Vzgb19+Irj
ejNQh/TxnH2ZDS76rGnRTC0gfGhk3UouC+bmrzFVn2mB9kNRHvURGVBEUTJ0
wKQFtOUqI3OC04AvYBWdcWuBjZTbWLhYKnjznEpU+9wC3QUHy+4NfwV9mbBn
Ib0tYOick/XQJAlq6zt6ildboOSE2VeBS4lwVotGdpShFXiuV5VXnE2Av0/t
KAWVWkG7ja2lRTQOTHfTza8at0LombGt5Uux0OE9027h0gozV5nlv9TFQGyC
Vnh2QSuYDhdl/vCJAjoJ3789Xa1ACQ2jcociwaay5sHWciu0iMd4f0oKh8tD
EqJIqA1en8X2zBhCId3U4pOxYhtUP5ZvPjAcDOwbsVse99tAdJPTYb0oCOYO
Mde0hrYBPqsg9yguENQ/Kwv/zG2DfkUVKsNvAVB82tWPtbMNjv70beXw/Ajv
r6zo3DnQDi+l25I+nPGDX10ny50F2+Gp708tvjgf0De8xx8L7VCyOUdFdvY9
nHVs+zHn0A5tepAk4/IOQg5QadIHt0Oe+58ul0ue8C9YvlA0ux1OVKcozHN4
QGdWmpvt93bY/EA35Lf2BmQw0mwYVQc8kBy/wLnpBrEtnNfL+Dpg1vT+aQsa
N7CZ9T5McacDjMXqI7tjnGHEpsrxpF0HfBYmS3p50AmukG1PqAR2wLGyNtVz
/q+Ag9ss7WNzB/iXN8xzdtmDa0oMU95sBySs8f/l+mgH36X7bfvJO8HJ6/yd
+vu2UKKhBDxynaAhvtJ145wNPD5zXSNWrxPm2eheG3NaAxeNprGgQycwTewO
7LE9h5ZJHZvkkE5IW2txUyU8A8eyu29P53fCc/0S8YmnT0Ak9EFwencn8Aex
Tu2VPobh5+ZJ59b+z3/4jkLAAnjYSqe5jhBBRaJqqeSiKdiTYU/uChHhE2nw
R/S0CXQs4xvR0kT48iu4ozXhIQiNKLpMXCHC/GdDKSaHB/C6qZ6aX5sIdk5v
JpXuGkN/gYr/g4dE0BMmz7x/ywjEElo5Em2I0OXTcSIn+z6Mu3QJCwcSgepW
xfATPgO4YKmdbR5LBPm5BYNqtzvgrzcgk5ZFhEIxzq3lP7owp6Rf/aOSCDfb
GL44+OgAOj92TbSDCNVjLhV/xG9DKJ9R97MxIvzVpCedWNKCFcZp/ewlIlRp
vPCoKL0FMd+/W54/2AWG/UOFSR804Hef5YYtVxfgAQOcWcfVQa12xbnwdBds
SnF02SjehORsa+ptmS7YJlawNLy5Dv+iNz7IqnTBBcrn5Bsj10DH14HDSbcL
zuy+ajFWV4HMlzsx5aZd8PRUFMuH4atgqEWWDZ5dYH2b0tZD8goUK7yVeRP8
Hy5OjCrZUwRmMZrqmoQuMK86Meo0dAnMud9fo8rrgrDcdN6sRgWoomXoVqrp
gqjgY54BfgBHf/vre3V1gaRjkFR4CgbPp1mmmya7YK06ce3zlDzwVR7ZuL7f
BeUbe8GNCTLw8luk84dD3SD8+y+qPX0RiOE81J083fA9KvOJSYM0nHoX+4FZ
tBv4i0hUGi+lwO2FIMctQjfsd6Vm/Xe4MGiUHBN0vRsql40iyI5IgrjaaeE+
/W4YqgxWsSGXgMlT52T0XnVDqUlokv0hMZDhyK2K8O4GXIFyQfnSWQiglL42
EtYNNOOuTOUfReD7alHXsa/d0D8edvPM9ilQGJfTv1/YDaYeKdIHXglDeGsF
6Ut9NzTq1Z4fYhaC1WIFy6nebtD4mcN3qfIExAZddTZZ74aU1JlbpdoCsO3W
TJVM0QPc8Y8rrOT5QePZjQ/zLD0QKfaAnfw83385qvPwaf4eWJzKsx+w5QWy
a7diHov3QDWiE3oVdwz0LvQJpUMP6BMWjvAuckG2oF7WsloP6H458PHoTU4w
/nev6vnTHjDncb7cb8ABhzrON2Y69cD+o2GZca7DUBpN17H0vgcG66dfzv5g
A1asYMQ8uQd8M8aPb+EsUMngS0rO7wH6q2u+wtXM8HjUaGGmpge+/SqwuRzH
BDVODFtGEz3AobvEECLGAM+uk/7GLPeAm9WBb+SR9MDFXUw1ttsDj66dpeU9
Rgc2pQ9Z7xztBUorrzxjQxrg9ZHlDBPqheRWjlfneamh5Q4TX59UL5DbX/l5
4CclCPwpFdXU7IVjpm9uVtSQQ0dTgNRHw15grh3vqq0lA8dwU/n2p72guGyg
I5q8j7ovsl675tMLlROe1T8l99DrA9/VvcJ7wU0Ax7hjdpDIQIVOfXIvTF0S
s9g5/ge521uYXKrthWt7Rzw6HvxGYlfB0rWrF8S2qRye8m+i4cOHbSomesFT
U0mA9dc6kiyocpXd64VNy3XF5/VraNwj9J0DfR/Iqpz/q9awiny0n3woONoH
1cm3m7fTfiLS+pEoCek+KG/YvCt5cQn51y7HWV3ug3enBYyOxy8iuaDalAzN
PrjrSl5cK7iAPklaFZ5+1gdvPF3RWdM5hCiUKsyc+0Da35I+8sQsWuziqkvy
6QMK04dmzJvTSNG6oYv/6394w2ALZ9MUWlH4PGhY0Aeh9bcbu5omUSSzzUR0
bR+Qs3vrFmRNoF9ZPMuck31AH4FfsJAfRTGu6+u6K31APHidhTN5GKmqN++E
7PUBrRGp6q3wEEpYsaVl5eyHQy6/Ut0t+pFGpSqThnA/eJ56zl8l3If2PvBx
+Ev3A3/c/R+02z1IW7RNkP5WPzA5Hm2rbOlCZH/jRFSM+kH+k7G/RisRpbc5
SLx71g89Dx81P87vRFRPBIHCtx8+DsU4R0Ibypb/o6QQ0Q/5s97djGkt6O7B
zhuvv/YDu7qrJZxpRvlpjvo7tf0gKaLyre9JAzJy1DCW6e6H7xMgNS1SjxhU
hcztJ/vhm9Gn+n87tchkocvu114/yAYtlxq3V6PTuf013+kHgFvvn392dxVa
cRxhmjg6AEn0fy8HteLoFcNsaqvUAPx53zFZbFKOUN/C72rFATiTf86V1FuK
qGJWLhdrDABmZRVHb1CC/M9tjyU+GYCvPw6EByQWIq3tPZEoxwE4nm4kXPCo
AB2tJn8Z6D0ALy9tjz2UyUcJtw6yvk4c+C/XfL8XeCgXmXMzG9rmDoC4eYuo
KnMOEpthT39cNQBhmRMV+8ezUbEd71Xd0QEQ/RQjnN2WjlyQYNDNxf/8WM4n
8F/8hhQPnJq8vD0ASiwEcVJRKmoPl3AUZx/8r/9Lgq+2ktEn4wuNQgKDcLuU
j/9QfhLSE5Fn5xEfhAjtaren7omIVHYlk+7GILit2bFlacSjrx7XdvfvDAK9
0r2OOrU49OSmmspvs0Gw7Zl5Q28Qi7bGdUmkt4MgnXVLW/BCNCr/evfcUOAg
PJSL626MjELuz42dO78MgofMAAsjRyRioLDkKC8bBNqkc7UB18NQV4vVw9zm
QdBpC/X2pAxFoUG22SkDg3D+7Z0+z/ZgxH/ytWrI+iC8b+39UBn0Cc0tu4f5
kg+BrNGJH4L+gSi90GvmDdMQjEUISi2HBqALKoGvn50ZAmeJIqmjcR/QLnNo
q4nsEGibJ7oP7/uiqqHIowbKQ/A+TeVJgJ0Pum6ZmKv8cAjyznceGI31QsxS
qfuY9RDobd1JP679DvXvZdyQch2C5oXtxWxOT2TkXzTHFzUEZX6h5rUD7uik
bvn5I6lD4Ne9vvi44w1aPF7txlg0BP+udtB963FDdjktXDvdQ1A13OISzPga
yTl2mq1ODgG1IjeHoakzIrvcmz+3MgR1gsVa1v2OyKd3TK2HfhjOAcHBcMsB
aUSTopqPDkNBXwxxMskeHTad/44LDcOiy52mX6Z2KHZr1T1dcRjeKJBkq4+9
QI+qNjvjNYZhg89GPJrJBom83zkWcf+/f/DDXSllFmtUwEVV5Ok4DKdpq6ei
nZ4hXvrVoW/vh0G1YkroT9oT9O7PyF5X+DCk9/2Z+Lf5GP383nh8++sw3O0Z
1qMzsEB6g3mKvEXD0Dlw5Y/voBmqbvzy6ErDMHDJnWlgeWqKRIp8vR/3DQPv
v5o/8kceob2Qhx2F68MguSWTYfH1AXrkqb42SjECeZE1p9h8jVGHrTw7JesI
jPEYVKS5GqGLJsIXT/OPQLxKceFdWkMUq8Wmry4+AqdkjOJ0zt1DdJf3ne1g
BHS+XaxwtDFANpI/vkSpjYDejY1SbuIddIWldnb+yQjUPk8xj+7VQRlkWbSH
nEf+y90HVaNf3kYcq5FnpHz/my9xp96W0EauE+/U9CNHQMS0JNPn7y30vcPG
2i11BLoQ/S22UU2kWXk/OLl4BNKE+mUHWzVQaYZqUVvjCNS8mryXFKaO/PwE
/h6dGwG++k096bXraNPpEB9sjsACx6kEVWVVdN9yR/ER1Sjc/aLLXl6oghr1
5x75so1C6pAA7wGkjMRVu71zBEYh84/uhaoRJRQhW/ltQGIUinKPvwz0v4Io
Tqd1/FUYhZ6kg/qyty+jngPu7KqGo3BRV+vZI85LiLD19OLzZ6PgEOLQXM2u
gBLn7uiHuoxCg5UX5VVAiLFfyaXcbxQibr9nk7UhIPt6iVhS1CgcE3Pp+VIl
hybyeWppv43C0eCtroFTskglkW5OrHQUnhKavHRTLyKut1NnnAZHwZaxDXda
lkJvbdrV4uZHgV7Le9Q58zxaMi6xbvw9CjFM03ec3SXRbc2k4GXqMRiOrMnT
M5dAlQqBRWyHxyBpjS2B3FAcCYu7DMueGAOpX0xiKy1iKOC4xV/D82MguvTD
KWDzLHrwT+FyuuYYDMYGP6aIPo1al8+adhuNwUvuyqdhHKeQ1NjR99tWY6C/
MOJi+VUIRbdRpfO6jsGNE1ZXjqmdRDTlqx1X/MfAh5vZ4y7dCWT1bXTtcfQY
nK3q7/81IIAGI5vYA9PHIJ1ywbW4mB+lvYrVH2sZA8GDl0S47xxHbBZ+LpTD
YxDLd07zqhMPctZ7GXt6YQwGppPXZkq40ayySa369hjsBGoZKrFxIbWLGnN2
B8YhpeFSVafnUVQkRKD7zDEOobtX31IxH0F8HKfO1pwchxr3wWXH7MNobWPf
+tCVcfAeD11aF2NDmQ2ITeLWOES2jVzy52FFj8Nd8rWMxuHKddUdI24WNCO/
+zvceRxmuW3/ZrkfQnGMcuFlPuPAQLCnHe1kQPcnXsqOh4+DznNfAUz6IBp0
/+0kWDAOFZ+pKm5epkUh2tI8V2vHATe60PZ2gQbdErKtNO/6T5+atP4nnhq1
Na+RZS6PQwFN0eMn1ynR+yjxeOLuOEitSP17LkOBrj61urxONwFcqVG+dVLk
qIp52VNGaAKu/pdmt7P+YS6kM8IGUhPAnOtSF7Ozh8nlP25yUZyAYLcXtjH3
drF83e/0tfcngN6in1fDbBuzPi2cPvtkAnrmNnY9Dm5hYruPbtI6TUBTj/Nb
jtpNLCVm+uPNsAk4b9F9msl8HXv0XEDiedIE7AXciXPS+oUJKBp3f8qbgLzp
Q6031dawz7Pj7IOdE/CFWVnv7dgKdqeIp3BnbAKCBlp/x55cxjje39XlWZqA
6DKJfPl3PzAVjuUbElSTUD4xuubl+x0TcvWLVjw4CZ+WLicUi85j1N/PrGix
ToJOyOOyB9OzWE3J44/2fJOQSJ9mPuoxjcUK0E96CU9CQLOvaeYzEubqmyoe
ITYJWhQRq3tmUxjh3veuMsIkMMx7X7x1cALjavASaL88CYHzn/+SNMawP2LC
L8ZVJ4Evq0bucNYIVkhmyk5+ZxL2vlp7bmYNYsEW1I9YjSYhsoqF8bjGAPai
O7FA0GwSbl97Shqn7MfEE6d1rtr9t5+XjmlvXA92iPHtV13nSWjKMHpP59ON
LdsJbJu/nYT2bBep7jddWJqycYRv4CTsU26xPpLtxLyzyRY/h0+CQHHuxUfO
7ZgZZ6xc5pdJYDaPMz4z2Iqd+DE+QsyYhAO44emI3iaMQvv1WVL+JPSvF3kU
2zRiU+U8Lutlk9BpmQ6+JxqwGP+7vBwtk8Cidf3BVmUt5ry1+0y4axJeXKpV
+pBUg+kbReEyg5NwbUqzsz2qGjsiOWxkMDcJZhxO6uVmOKYi9vQz1cok1PJR
Fpe+rcBeipANZmxOAk2IiP1oeRmWIhTEpvt3EgyMVF8ZsZRigwJC6mTUU9Dc
HFAS61qM0R4v8UllmAK1PYMwZpoiTJb7RsMt9ilYqEvVkk8owCLZbLAkwSnY
PX5U6d6xPKyFifqV2pkpYJQdGO3bzMF2Dobnb0lOweub43F0U9mYCO2Z1Vi5
KSh4sPaloyQLM6CqPKOqOAW1gaNnR4kZmB+Zptn6tSlIE16XukOdjpXvTcd/
1pyCz3oUrG6307Bjm3RcP42mQEi6NlJe8St2Y+3z7XDzKeChvcjYOJKEOS+f
C7z0fAo8fg2S5nwSsfSFmrZFh//8LpV5qaklYGOzt2mDXafANdPzaf2JeOwQ
6ftlzGsK1gXH+k8yxmFo3Ml1zn8KqJ8/KTCgicVi+uN+y8T8528ZexCk9hnr
6JaSJCVNwdCpphzNyEjsX0fjU9+MKTiv8Py5FlkEJtaqnypVMAXZWfvDlK5h
mGHj8sxY+RQcJ1P3m2MPxQJq3fi86qaASFZGHVoVjFXhbHfF26bgY7G0Wo1b
EMZXLNvjPjIFmZUkzQLZQEwjv+3Q2ekpgFq95wTxAMwt21C1b3EKxJQVBl2e
+mPZ6b88X//6T9+MY9kv3A+bSvGsFt6ZApn+odMDEz4Ya9LRv0RyEuy/PPEy
9dJ7TDHum4wjHQnGa3Z+PS73wuIjurLajpKg+WDGi67fHlh3iMkPOz4SpAhG
LJfkvcUoP20JHT9Fgi2BkKbDHu6YlL/Pg6ZzJIhnEVMoMX2DmfjwxFhfJEHt
4lCUj74bFvwue4gLSMB/J1OCouI1Vud++XDdVRK0RYY0K087YyedLPw4dEjw
Y/e/t+HtK0zHYa8Rv0cCKtfONzY7Dti7Fx8pLR6RIPBUzfyctz1WaCUArE9J
UKGtERUpaofNWRY4ltmSgI3JrvLC/AuMw1yl0MSZBHqjmkde5dtgyiYja4we
JDipwNItGWyNpdwltzAKIsGTC756OoxW2KBecCJd1H/8hz9X68WeYrS3hSdz
40kwmJWwT/XUEpPRLOW+m0aCW3rRbroNFpjFzZu61LkkMMnuEzkma45FXpv8
lFlCAqktrd6WWlOsRelFh241CZTEqX7+MnmEiaAIpTQiCb6k/hjSn32AzRde
Tjw3SIKeECXdm43GWOK5FYqCCRIkXk2RECk1woxTwo3l5knAqyCUQXpliPHy
X67CV0jwx4Qp+2H0PWwkYplX6TcJmtKjDrGOGWDhrOEuLX9JMLLvK3f5oj7G
QrUs18cwDRsvHB+QSetiHc5hEfrs07CVPuma1Xcb89m8tD3BPQ0GPOIbJ3y1
MeVnSzqPBKfhvW2YgpC2FkY1H1qwKDINH9WkXX3P3cKqDS+xP5echgfvPl5D
xzSx14M/bDZlp4HwOjtLhlMD225WECe7Ng0VfWNiNm43sALFH/6eGtPAdZbt
+A5RFbMpC1mm15uGvxoWTdTy17BzUgo3AgynwdvR5gdrhTK2lL6YdthsGl7T
zB8vvH0VSz0ZQhf1bBrq7045RlAqYaYxYM5nPw1dJ/yuOdVfxiY/Bp884zkN
Am4+toFul7BoWvDI9puGPC9prmgHBUz/zQJJOngadH+XPf+6h7AjO0GXyqKm
4TS5KAQIY1ivDYpVSJgG6j4WtQvP5LHAH9//1adNA8cNpezNDllMzSTo3vXc
aeAZibl5WUUGa7z9nUunehouBHaoEF9LYx4dn16NNE3D3cmRPnNZKUxBGRs0
Ik7DRGKsPRw4j/3F5y/MDUyD0nnXcfF5CaxU5lOI5cQ0sN9I2BEZFMcccggb
q3PTsOLlOKybew6TEpm/Zb8yDaEfNcXdu0WxTG4C85u//9XPkU1xzVQEswye
e0ZDPQNMGcc6E/pPYacYA9t9GWbAeL7yU+x9YWzWU/4sC/sMZM2J+A7tncTi
/836hHLPQM9aP8+/rBOYoUPAArfgDLzbGwjrshfEjq3KqcSJzEC5tT+ZiIYA
Fjr1kTpddgYIb4gtRy/wYVr6ciYSl2bAxLDkxf03vBhzz0xNocoMxB87FBaY
dwxrv/6Rn6AxAzO3M6PZyLkxnzpZt2rd//glYvzK5pyYMjYzftVwBm580Bb9
On8Eoyr0x9pMZ4DrKGVHvQsH5vJ1eqffbgZyoj99X/vOhsnx+d+56zIDIoWD
8T5lrNjvcJniKY8ZyG2+eOz3FxYsj2Waw8zvP70QVQ+hEGbsuc8Hu6WgGdAX
ePxPXooJE6WU6bWOmoHKvAvmIwaM2KITSXIrfgZInDU9Fl8OYiZPL66S584A
47aETNcLWuy67kF/6pIZmDIavj7DeQCTvDRxhq5qBsLfEk4c7qHGyA57mTF3
zICGdKpOkiMlNv9Pn5q9bwbmNUJ72MwosI7vYglHRmeAVXAYL39AjkWV94/z
Ls7ANvdLoUHafYJ7cpqzwNoMPGGS1G3X/EswD3jNJbQ9A/sPPD5T5+0SLpgI
6YjSzMIRoa5nm8XbBB61nXVxxlkgvg80vGCwRaCS6QiUYp8FW644gVbm34Tu
g/bt8gKzcHIvy6ckZ50QO8FDd1l8Flgaeb/MBq0RnuXVX1FFs2B5gelnuNFP
AsHrqZvmjVnIHaIV0CNfItAbHC7X058FhuRnQmP/vhMGxSq2DM1nYUdG48s5
9TlCMsWj82b2sxCtp+dssTBNsO1nsHrmMQtP2pVdI+qnCJfS8tPsPs1C+Mnv
g5olE4RDr+/OOcfOguJLRV5vjVHCqCaVgEfmLEQmDHr5KA0R0k6m3/MtnwXl
y1leV/z7CS//aEV8apmF44bkM4X8vQT2uATmuLlZ6A7qJLrTEQnZKuteWRRz
EGKyXb3v10y4saq4X8E7B5Za868T9OsI82Gf7Nvk5uDPGRWvkQtVhI43puzE
S3PgoyObsB5fSci3lMvtUZmDvr0QVZ+1coI7kJaHdeYg4OM0HfSVEHjnJR4t
2MwB8xMJJongfIKuyZ9lD8c54L1bpnnuTh4hYKrKns99DiZYuhwpJXIJ5KPq
3rqBc+A0xm1XwZ5NmCE+/VafNQe2dVyKi/yphLTS1LW4pTnYImyXh+TEEKYv
WjtiG3MQ3cBnho98JhwrkKEc2p2DiBuFZOQCUYQPWY3szAfn4WFiarDoXhjh
eeLsxden5+EVxd9EwcpPhAv+/K/1TefBIqJ/a2j6HcHq4ALN76fzoB5L4eng
6UlI8c7+GGg3D+bmj9xpCR4EzrcQ1+QxD0r3Gc8enn5D2HO4V3chYR7OPH+c
/XrDiVBjHEHPNjkPkil9KzSs1oSb0ixhrXe+g+H5I2GbdncI2YIUhrNG38Hs
7sN9Gzo9AivrutC+2Xf4F66+fCtHhzC40lsoaf8dVq8GqpfJahMepIT3R3z6
DiUjpcKHWTQIL7n5OMxbv0OxYlcejfIVQiL5uRAqbAF2QjIuywuJE/bab/wX
WhbBwPjqlK8zFYFf/umNNIYl6JMJMqqST5F/2vqk9fjqMvyltHd27FGTl0lu
Yj+Z9xO+1G7oP3X7I1eR5vGBtWMVnoU3dDZTfpGLEe6x089dg73k2phVLxU5
1gss1UKffsGTRAZX27EN2erM6serHutgSe1lTXckUjb7RuyfN2YbQKcd8vLZ
RSXZYe21OeZ7m9AR97xT9d6CTNiKxMUTar+B9edzxoWbATLBGbFP9sW2wIMx
8+CHy/Iybf1vyAYFtkGuVVHRtnry4pWTga9e0vyBghEu77pmn4vq1AG3o2f/
QMkjEh/ngYsXQ9TJA/CBHZDtaRUncY5d4MZjs1JLduFm+67NyKLXhZHwXNHA
zD14Wxwb8H327IWRsF8BCkF/IXecxM5f0C9tdUpA1/bFP+isyLLmEX8rjQnW
OSWZ7oOa1bQQa7+wdDJ/i2LnCTKFq4YSp/ou9Ui1mP6wb/lCpsCzONspOGEv
VWzrMep1lFxBaSU5GS7wSF0NyZc6/Z5c4dZuFDH9ctP5tUUewjVKCgWfxNqb
F+Kenido8V64aUehMHdwQrXP68h5TY9QY7ZZCgW7zEbM4mid5NtFZYLefUoF
Bp4T96rkLCRvPwyge9NJqWCVTMYfFcEuGUvNqunYRangcMuTuuIWm+Ti16Dw
Fz2UClxEISt+PlbJ10uhwqYDlAp+mn9KXWeZJFPsopWuT1AqdKsv23/OoZXc
8Up7c/gnpcJtvbz9qYi/ErHpdX9SD1EpPDl2+qbblVmJRbWrlxKYqRS0HkX7
0K9PS0ivNXp/ZqVS0L0+Z+haSJJokW498pGDSkGHxm2A0WFSYr2yS9qWl0ph
Mi6v2uH1kMTVrnFrJEal4OoVdPrFxw6JgBdGJRfFqRRu237rfJ/WJjFymEQm
IUmlgL56FGVOt0g815/9KHiBSqFwkwW1pzRKREz/yKBFVArx4uORHJo1EjOe
TzfJFagUsnFZ7IVYtYTYqZ+E3UtUCouHpLx6eKokap78al1WolLYhqdjNnfL
JRiYbNnmlakUXpXYDD6LLJXQzdnUn7xGpTDtsW+kvlEsEa/lED90nUrhnbrz
1B3zIomlze2F7ptUChPdG5I/Nwok/gdl5IUk
                    "]]}, Annotation[#, "Charting`Private`Tag$3402#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c8l48Tt5PIHhEZIUSIjD7PcyIhI0qUSpSRFJGRLZSyVzZZSfYm67H3
3nuv7E2I3/f3173udXfv9/v+uNfdcbwwv29IgIeHF02Ih/d/a5Kz1Z+h0IVx
KZWcviL7gLTvv8gIlOrCRG8L4oKs7BAxtMfdWqALW/x17ta5HXvkpDlPGKHs
wtys3UoJJZ2Rl9SXz3Dgd2ESh+F0cOqCNGqHjBFtd2L9tz9zJWy4IkGzVl6t
/Z3Y9RtsTGdP3JB9/jm97MZO7KpX7APuix7IU4uHEiElnZgHl3Y6o/InhOdE
fPZJbCd2etuZz2PCE/G+nVwCAZ2YuOaCJK/CV2TDiyGQy60T25M0Jtup8UJK
GPeRZcNOrGycY4+JwA+5pGtM16Hdia1uMNFeqfdHPJIGlnKVOjGBHCz2VXcA
oiZSHGYv2ImZVHNf5hkNQvJsr5jpXurE5tqTZuQOghGmivDbstSdWPXdK4UX
uL8htd+2pmmXOrAXke4jy/lhiB9nj/9IWweWmtKOUjBHII+y8nCJOR1YwdX8
eNGQSGSl0SpU1K4DI5vaf+nXGoMUPnwod/i0AzNNIlqz8f2OuE6Lb1TJdGAW
T9+eMcyPQ+iO95Q0SDsw/lXJZJeSBGT8y8Ae00o7Zk345UNCbyKSQl+cONnR
jn0tkfn6/DQJwV2z+2ce1o4xSiC+371+IiRlj1MlHNox5wuq5XKrKUinorT2
qW47JiY9/LbeIBUxeHGU7cfTjgUOP3/8MiwDEVofeaZF1o5lFsas8z/MQg4c
ysjY1tqw99za/0JDsxGfb04GGQVtGO0dW1H6iFxEi1OX2jqiDdMKPx8nk5OH
sGehFTinNsybMzN9cSgfKWg8ZWy93YZNe1EXxeoVIa4PJ2uDr7Rhnx60X26u
LEbuTldaPCFvwwLou/szxUuQ8aOPLUs9rVir+IJA2ItyJOXLiw+5Ra0Yb7/J
SzlWDLGkl+O2j2rFNG032E8+VCIk14hczr5sxaQyK5/N21YjnaWzAl13WrH7
sc2LrH41SKRi3WA4fyt2qeVhSn5+LSL04rPola0WbLjwUffijQbkYM1oYr2v
BQv9Uz7/PaQRqXZQ8Cn63YKJv0yUXyZpRrS+kc7f+diCvWZQFuUTakOGepkX
Ml+0YGqOvKTT5zqQp3SCiwy3W7ChG6tLtB6dyPgD+OPM3YIt8xfq2wZ1IfrB
GkvzJC0YZ02QPXduNzLb/XJZbbEZOwmKUJaa7UGMaGxWCpuasRhrA+JJvj7k
TWDk2mefZsw1zN7leGcAWe9MX19724wl3N3cEHEaQiypsA2te82Yotu+viPb
CLJzr2uzQrgZUx7nfm8zPIrY+s9s8dA0YzkssWf6cseRw/bdbb/tJsyaw94u
X3MScTxPurvX24RZkirrU+lNIW6+V/frw5qw4lm9GwJpMwhxG3ogZNeE0bi+
HxdYnUW+kGv8DdVpwp5qNvLUys0jZCovD09uNmF+U1euyWcvIL7e1kdGrE3Y
+19+yfRifxCqFs/j9pNGTGuG8Wpe5xISRBb578ZkI/Yl2K8+z3MFCf9acUqS
2Ii5Xlf+M8q9gTA3deKZezRiqgGZW1JCm0gM6Qz+gGEjFj7rcOissIWwK+4S
gEIjdvnGakOl5TaS4HmG6OeVRuyTmn0fd84Owt1wgZiSrBGzNvxuuUC4h6SQ
XCWxXW7AcH0CB/ff7CMZn9RJFTIbsKYyG9om90NEuO7F2Sz/BqyHYc5hXPwY
ySWyJmO0aMBqHZ3eFRKeIOK3Pc+53G/ANI1vmjCunyLF7hHkC9cbMK0xYdut
YzxUuiaN4h59AzYiyl1CRUuAlhNUnC/aq8dKBrv4D6QJ0eqP01Sev+sx2YXg
5apaYlS+aod6PbIeS5C8/IOL7wzaiHeGVtuxHiNSDu29l0SK3pW5QIc9q8cm
F2jDSyXI0DYXAXpeqMckpqWXtmfPoeoYwuDPXo81zlZe+Z5BgXaf3GPcx6/H
Kvxo8p2DKdFBJ6sLDbV1mB7R6qjkBDX6pPwz87XkOixNd8Kvg5AWHT8OZwnz
rMNOr0k9vHiTDtXDpV08fVWHcfIJe2h8pkdnHMpZje/WYUfreGcK5hlQo9IO
tg6BOszrbHJc/DMmdPFw6pIERR12eJf61peVC+iaHQnnmc5ajP+eZqfzI1bU
4jcTl3lOLeZPPVm8InkJ3TngvzwQVItp4C3uno1mR20kEW6wqsU+uxrm7aZx
oH9t7/H8fFiLSUZT8sm3caKORfq8lBK12E2trDP0+JfRk733V2yZarHHcb1i
IYrcKJFNOL/CSA22Q45eqWC8gk5sEF0rrKjBSGa4u+U9+dASU4vr3Ak1mHco
0OWTC6Dm+ndxhCY12GOl5z8DdIXQu6OFMpYqNdjXR7dIVxiE0cvaXPJT12qw
22MNj5+Ri6DDKseq2F41pn+eOOGU6zpa0PDqvtBwNfbpSiTrsYIYGiDbpxVT
Xo0Fq11o1nUSR+UlM587eFRjfPOz4j7skih7HrPBknE1dsF7WDgyQAo9FPR8
9Vi5GkvuOKgNZbiJZnPpWUjQVGPnTTPWfpmgqHdsq3XybhXmTf36QdtFGdTo
gpQ9/VAV5jjVrR1OcwtloaRx3/5ehdE/0tE74ZdD9746e75wr8IqxuUDDe/d
RjuJlr27jKowatI/alKf5NHPhzUhWYJVmMokv/0zPkVU31o4go26CpusYt/f
jFBCcRvRMb47lZjQWzZqJ3ZldHPOOtm0tBIjrfgq22ClhrbqTacOx1Zi6yYZ
Ndmc6mjyiFqWklsltuIUF9XHpIE+7eIt5lWqxE7nstJORR6gEiohZaFXK7GZ
uZriLi1NlKYBr4qYqhKTsErNZvB9iPrZ5QU3ZGAYnQnDrojoI/S2uU/0DysM
6ylbuaya+Bj9a2D4w/0mhg1S+B8Y8T9BDdQZi6CpAmOMjkpYdNFFme9sYKwB
FRhlYtuj0Ct6aMfNpsYjrQqMMHP8Mv0lfVSa12G4aLYccztydSeUeoluXNSc
+ZZWjjVcfBcso2uA/qARXHlvWY5RqX5b2wsxRKlOxv9dwyvHpsk//zh78xVa
v11Ecr6hDCO2my9OSzdBHf4EUK74lmF3lPPtNMVM0fleWY4UljLMjDmf/Ly3
GRrdzML/eboUO3PsQe0s9A7VqNwRNfhVivHg0W5pcVugZWnJt9klSrEGvp65
szLvUct4F9WTfyVYTxvBpVxDK5Q37JHWaG0JFnedjGQ42hoNciN7FX6/BPO3
JfkyK/cBVfgw887mQgmmwceSRVFohx6/LbPTnPyNUTKeC5BHHVDjx2beVGa/
sQHvHXuJUGe0+LW3A8WN39jws7NduddcUVLHFFOyk2Ls87BhXALHRzQ1dlqZ
yK8Yu2pXQVko7I4eZp3exNcqxpZCVu763PNAlasuXj1hLca4236Oc7h8Qldm
tMgPMoqw+/qDB250X1Dc7vvjHesizEpRZtDc8SvqSxK4sokUYRYX6t31/nqh
QnwtrctthVgh4V8iRQk/1Fl6sWzxWyF2oYCeb/nQH+1QJs6Ye1aItZdLWNus
BKDvzMB3YrUAC0gJWePeDUIrXZ46jRYUYAMP3o59pApBqQPt3g45FWDF65J8
JrhvaG5enmoPRQFGSClrXtcUhhLWdSKdfflYr3kc90PBCFSzf1WwLSYfe7/8
+u3PH5Ho7gHv+QbBfEyBfQ/fZSgGvUMmf1Kzm4c51qyqp4R9R0NZXqxVludh
oZ7BIutFcagkGt1eopqHuY5QuKmVJKBf7v2uKKLPw37lNi1JdyeiQ3r9mflj
uZi8UuRDl8Mk1N6dyj/zbS72+ptnzLrLT7Q5RNAlTTwXE+FQzbw2kYKyJN81
T/mXg/2LVJnYvJ+KljV63EvwzcHUOKgyBh0zUIrhePj+MAezdFC9ECGeheou
V1yLZs3B1MMyCsg8stFTir+UoRnZWEJZjYGgay6qfokBL9g6G3su+2ghPyQP
jRO+vuGPZGMbzI+y9H/no+7Jw3G0UVlYep2y9cmNIvRyE91HCoEsjNRXT/Q4
sBitX1bTP1OaiXHVxBvg8EtQUpEajqPhDOydR+xFDY5y9NeDf/i7rzOwWJpT
7d+9FehdG4nptcN07Eb0bFO9eiXqW5qWMM2cjnU7BtJU3qlGhcbn3EZT07BG
vsDLq9o1aCce+8t+6TQsYc9eh8KuFqW5E8LVrJOK3Ur0L1hbq0fzXrUT1i79
wnik8iSL5BtRTW/S2XL7X9hy2LKCe3YTGtrpmJQTmYI9N7Smm61vRSW2Cz3S
+FOw1xY5n4is29FB+k2DHyU/MaUkegIOtk6U5Ykhd8RwMqYkFV1LeL4bjVU0
0qLTT8ZeMk5o2lzvQTlvGHv6L/zA4k5aH3qZ9qLJXK+Kycx+YBIumyFmRX0o
P7XJn087SRgtnfAFQ6YBNPPEhBnfIQm75STypNZ/EBVdea3siJ+EeYolBx6w
DaPSDW8yLM8nYkiVTgux9xhakf92fDUkAbMJHe0QNp1AZRPMKE1YEjA1omP8
lfxJtN7fXGY2Ph47DEswt66dQpWc3lk8vxKPtVyb58HNTaNtry0ShjPjMFv7
CO1HTLOoxiPLnoficVguueDRtu4cmmO0+DrcIxbrbfJQyhFYRItvLbX6BcZg
987mP/PK/4NWXlwR+hQbjR1vXtPR1FpGG/dXAxzSorACH7mIJJpVtLN7fcui
OBJjNe4V5l9eQwczNjVf1UVga663mwfebaATX7YLdbvDsVhJHN95x010Dd23
V14Jxbpa3I3e12+jexf+jt76+w0Tk6QSGTmzi57sHKKSJN+wX44nKanP9lCS
zuM4IdoQLJPg4I1g0z5KkXZCwM0ejJU/j75Sq/wXpfuMZ8giGIT5Dn9amps/
RC/qEzRQSwdi3pl4ARzRx6i2EDnDv59+mGxIG0OXIB4YzVIO/6nywYIeB53W
iuGDTSRtbP+IF6bS1GPzWoUAPqkzvqjZ/YK1Zlyv77QmhBASFp5sSk8s+OVz
c6ZcIkgqY1uK5vuE0TpXy1kRkECeJWfmVzl3jHV015f/1RlIKn/wpn7NGUtT
m/l6xY4Mqvme7HzndMAoTMZzTXjJYerbC0c7LVtMqUWI82iDAvAIXhM98HqP
vXmklhE+QAnI6DTTY0dz7InPWX7fNSqwz9+8Qj5rjI38JCAuxaeBYh88KUxZ
D3Nd127X46EF9p6ZwIe5HFiP7rbntxR6kEtVfhK7owTrtxvUg0kZ4eflLxR/
+J9CSIEy3R9nJmCQLrCpyjCEfn/JQXwKZhjSTzY6f+ctHDmeSX2ezwLttcpp
guaW8H48nS7GhhWyHt3m0rxpA2xHexlmDy+Bpas4bXyPE6iZTDoxFHMAP1lY
3UyHK6w/I5YmG+QEZs1g/P0CN9BvIK64TXYZzsX6I2TRHmAYvLO4do8bjhe8
7VjdPsM5ys03t1N5YEXkS4Hwqy9QLa2O9435Cow5eGzKqXmBuMK5BPkEPqig
dDJ5zewHnKlLCW3/rsK1pD5zikl/COmJDfTJFwL1i4w3B7sDoJmKdCBaVhgq
s81vOYQHAW2l9FllRBQODqNqVRyCoZg/WFhN4zoIyzcqsOmGgIOL52ictRjE
DbGrVXGFQrKySArr9g0Y5FLtCiIJA4pRZwt9NUmgMrPTNPgTBvetdPr4KqTg
I0G3zpmsCMhRS2W4PomDEpWTscHASJh8ME/O9A2FrVB+/VSrKJCksiSYF5GB
FwLuxqrSMfBpvbLGmF8WIq2zlthYY2Gsj81HEpGDHmzk7cZpLJjIXkJv690G
Tn7mkqYXcdBK0np+ffgOoPeyHUR74+AJb6txkpgi6FjdQaLk40GZ02ikOkEJ
giosK99cSYD0hFkO1ioVyJwhdeuLSADVzqE7B+/VoJn0uxx6LhF24uXTUHZ1
IHjQUk+5lggay+WDDxjuA9sH/S8fnifB9zvXLrfyPgDpmH2lqc4kkEsmJDdS
0gTLBa623LwfEGCW0jpYqQV+5CV+LNzJ4FdVQ1PD9AhSRdTVPUKTQefjxY/b
Ho9h2sGx56HdT2ilXvc5jn0KJ3E03yqWfsJNzRc+b+/pAnN9ihbv0xS4sBXY
lEauB/ep+oYO0F8wdfwvoudUH8zETaP0s3/BKzKRw2TKl+Clg/+smSMVbGir
79tdM4DqJMHJKKI06NFAGxYSjGC8qSaeyCYNnCfNO30PjOFw7fHLtwtpcMza
oqT4wgSuS32eR5vTIVw+17PM5g2o615M+XkzA5Y5UxwIL5vBG/dcE6qMDNCb
qpB2WDKHpLbxlSn/THj7QPDQdtYCKresMu/iZ0G/rkX0+S1LGGU89y7PMgsy
wzMum1NaAVlOlF01fzYkTu8/uO1kA+E1RsM2L7PhHJ3ipcIOW+DpF7kpEJ0N
KW50gavidiB71HAcTJED0RkmN1VlHaGTIviZ4p0ceMfixrm+5AS67LoVx845
QJoV0qGc7gL28jsuhhs5wD79mNQe+whhW08khwRzgTyB0iBh0g3yv9dsqJjm
wr201QUCOg/oVBH4VZmSC4aLx/KlOp9g9W+Qvth8LvwKv8B2XPAZyH4eXkjh
yoOgdvapM7xfgEfzRTeLfh6oPrlRdj3rK+hlisgRjuYBna9pfyKZLzg9iTiy
uZAP2NkvbQeTfhBJip+/pJUPH2b6UhVfB0Bhwas3uiH5wG4R/DXsfSD0vOi8
3N2VDwYjeYiWbxBsUEqOyVMWwGxxyo5zcTCQl3//9lulANLwfR9f2AuBO4zm
JPENBZBYZuZLmhEGL2v7K+iIC+FXQS9ewZUIcLVAbb/IFkLWBz1r99JIiGZL
vnbsUgiDzy3xGoyi4XcLxaJ5eSEQmNcozAjEQv8H67iZw0Kolz2w4SGJgy3u
sUfakkUgfMnsby1RPFx1TW9C84rgx6qnnq1wIigK0rnlbhRB/u8Hq8h/c2A4
7CDNI1QMQt/NQnu+/4BYMeU0il/FkHvwg0lcJwVKp3JffpwvBrlK+eCjvl8w
6Md8cZfrNzx8+efok3EaUP/54zMa+xteP2H+IdGZCUKhGvLqo79hf1xyv1Uz
G+7K/f5Xc6EEVo72TSLVcsAj5otZWkgJqI8ThcyZ5kHc3Q2eS90lkBBNG/wt
IB/K97UngihLQeG1Fn5dbQHsafCq23uVgliTpRiZbjHQnvqRrjWUAiXj1+J7
tb9BOH2vUp+4DAQfpmda4ErBhKReRMm1DDjhy3kHgwr4nCe4VFZeBvp5Jk15
ZJWQoPctQfioDLSIbKxYVithtMSAlsmmHBamU7M8Oqvhr3Fri3deOWjn7xf1
dtUAA72Yx+lGOfiUZLzLHquFe+aEu/OmFRD/IyJSmL4BqrkS+gv0Mbhr6naV
Cb8VxjvP+vN9xwCsLHw7NNvgyMlCIWYUA8XzcfQpOe3A/Ib9abXAf7zOnLel
qjtBs3699VdyJcREyfOLlPUAvf9H8d7aSsBf+Weq5tgL/dq0sSfTlfDaw6D5
JtIH2n9umD+4VAUf++relVb0A1Nu44ATUgWuB2+PG5wGYNBeRyblSRU0nJrs
R0oPgg65M/W/sCoY8ghjp0kdApY+SnvewipIkg8ZmNIZhtGY+GmN3ioI+e66
1k08AjFG15Udt6qg1/bl1MavEdC9VpeXTFUNqrjLjxXujMKlA62LXULV4Eze
PTA7NAqTlYseRyrVoLbm/Xns5RjEfbVf5TatBiONeCa1mTHQv0+upf61GuSS
9gt0tceBkyW2wv5nNZhe8huTx8ZheuYa74+6anAIEBZWZp6AxPQq/46ZapCt
Y6VtNp4AA+sHB3/xa2DdJIFZ7OcEcKNzepfZa6Ds9L0g7eAEzJPYNqmhNcAe
tHH/3OEE/OwgFbV7WgO4fC4qM5JJeBUeGZloXwOb0u/HhEkngU//KmF7eA3s
Qnz+XYJJWOKrMD0orIG/DDSZvn8mIHXrXi9nXw3YpaKrTtgEmJZO4VS3a4Bw
Hz+m4PMEXPV4/8OWuhZu0WKk32ECVlSIzydcq4UZlDizfGkcMujDbFpVa6HM
JhdN/zIOZuNXJvZM//Mrbz9kZh6Haz9LFDi8akHvGf5S0/cx2DBXyVZOqYXd
rB/hPsxjYIH/7mPcbC249GmXtm+NgGgz/lIzQR0891go4L4/AltBwfd32evA
cL6NXip1GKwuF3HdfVYHF3mNh4wUh0B8VdHHyqEOqlMaqw0CBmGvYHgnNqIO
rIIGfKZ6B8BW4aRuu68OuD+GWQ1q9YP9a/lXMWr10JzAMLqi2QM3rw90Nryp
h/tFAhyKYd1wfPRKasurHtLI6j23R7rAydeHTKGhHv6YcYvwmHUCqsX23mKu
HrILs37g23XACVv2SBRhA7iR7/Ens7aDa3ZP+gY0QMyG/8iaawvcsjOkZ9Ft
gIcMH2MsZJqBQHbfSd6xAZ706CYnnm0Cjx7me5HFDVDVFWu2+bsePPf0N+VE
GkE3z7YgNqQaNtwjtIxVG4HFz+DwdX4VPKLuKvUyaYRLS41eg6OVwH9V5nNX
fCNIigRJ0/hVQPBv2+Wd8kYIfivauUFVDsd3stSZhhvBNF2btj6xFNr12Vie
0zQB5+ng+8L9YpBYf+jqJtQE9maFBXtFRRDn6Dv3424TFFYpENt/LgSLsOOs
FbcmyB4Ib7JWyYfhy2L0VN+bIHCTLQhfLg9kc03tr5c2wYGVxusD+Vygaxu+
bb/dBCyDubv3zLPBSYcmNYayGVQ+r9AF8GXB/IISZZVAM0gFPbQt+JoBRQS/
h84YNIOcw8Zf3s+pwB6wgQq4NoOw2Y2wOvZf8IX1SpJadDPUvSMSkm77CTqS
YWbfepvhjGl2kOejH1BT195TvNEMads3tSfEk+DqAxKpUfIWODIJkSXnTIR/
b60JueRbwOJqNjnf5XgwOkp/dUe/Bf5SnI1uloyD9i+zbSZOLbBtni+rlBcL
cYkPwrMLWkCX5fLZhw5RcFbE+19PVwvshicVvD+NAMuK6hf7qy1gqKifExAW
DnJDIoIoTytQzoht95x+g3QjkyB92VaQWeahY20PAbqduH0P3Va4ZmYW9Cs9
GObPU1W3hLaCnurB9u2wQLgXrcC7ntsKyv71Co3xAVDM5+JD09EKjTwcamuW
/vD19prW4zNtcCb0s5MCiw9sdXGXOXK1gbl4RkNxoBfoPH/GEQdt0LbR8dGU
9StctW9dnrdtAyqK6hK+d5/h2xkiDbKQNrD8QunJKf4JTkJuFgpmt8G9ajqu
G+c8oCMr1dVqsQ3cnzLF0S98BElkei6MqB3EKfHCRZddIa75gnIpezus/XPe
YDh0Acu5L/QEj9vhz9PL+FR+jjBiWWnPbd0OCWqdZrFH9nAb72BCMbAdutXq
yEVc7ICBxTjVv6kdPnbpzWXX2IBLSixl3lw7DJ2fevfGzRoWxfut+vE7oEin
F2m4bwW/1eWBVboDVKodYoIvW8JrAWX1uEcd0PcsdUeJ0gKYSTT0uWw7gMg1
5osT2TtontSyTP7WAarL/l9f85uBfelTd778DuiYq2SmePYG+ENfhKR3d8CV
TWzsStprGH736se1zQ7Q/TiVzUprAqy0JTPMjJ0w0+bO78VvBDZ4yJunPJ1Q
+qwoUXzAANpXsZ0Y8U4oWFe9cyn8JfCMyDpN3O4E/npLPdo3L8C5sY6YQ7MT
DgNv6Gxo6EN/gaLfi5edIBN69OuHoh4IJbYwJFl2wsZ3xyzDWF0Yd+ri5Q3s
BHn/XuubVE/ghqlm9qu4Tvg0TmH2yeIx+D0akEzN6oSRoWWCiGVtmJfXqVqu
6ISy/h68Y0ctQK+PKQm2d0J0qkfs3csPIZRdr9tsrBNEikqu3ph8AGsUMzrZ
K53wAmUZcs+6D7GLi6bXz3XB7FRwYqG7Ouz1me5YMXdBLMXWxxPye6BWs+ZY
yNcFR1J+62PCqpCcbUF8INkFKYHfWXAWynASs+MrpdgFmRSP+QxblUDL25bB
QbsLorQqRDAZRcj8cBhbZtQF9uidksbWO/D8AV42fOoCaW6NhYc8t6FYxl3y
Y0gX5LwcZ769KQtUQiRV1YldgD03M89vvwWvWL4qEeX9x/8+y8q7XAYqScm7
5au7wEr+rIqTHQDTnp+OZ1cX2K6vdiWHIvBuhnqmcbILvIqyxcs6bwJ7BeOO
8mkXWK57RQyGSMKHtEhH3/PdkPmOWKqIRQI6w1mJO1i7gbLJY07wtzhc+Rzn
SyXYDZLppPenTcXA9T0Xw31cN4ikl837iV6HQb3k2GDlbhgwxzzwyUVBWI2P
t0+nG5QHs54y7wvD5JVrko/suuEEP4SJ71gQJBlyKyO+dINLWE4MlfBVCCAU
Vxr5b4/QE2Z/9HLhh8WNoq6LP7vBKW9oe33xCsiMS+voFnaD6BNLy7zXvBDe
Uj79va4bzk7ZKTwn5IGNYhnTqd5uIJBxvxiScxnigu84Gmx3g5GuyyN3JU44
cG0iSiboAZ1JdeUZYQ5QN1PxXaDugdQsDTJ6PnZIedJBz8fRA/PkbdyCL9gA
T+l+7GvhHmBh3E5f8r8Ij2708aRDD3iwuEZFDjFDNtejrFW1HliJUxQLQC6A
/smzyndveyCw10WdSY0Bzrdfb8h06AGfd1/rZijooSTmbPvK1x5AO36lJE7Q
Ag1SMPIquQdOb0jokxZQQwW593Ry/n96/F5o9xZSwetRvT+z1T3grrneW+1L
CdUO5Pt6Ez0QJFK+c42VHMyUp//FrvaAkYQDVchXMmBmKSYaO+qBMf8f/JHk
Z8Gy5CXNY6ZeyG1PpvbWIAE2L6kLYTy9EGZLVM5BTQzNjynZ+8R6wePBEm/2
NCFw/i0R1NDohYE8QYLSInxobwwQ83/eC4nbSQK6v/HAPtzoZtvbXpDCO176
GnSKdkvQKCl59YJXaU2GKccx6nxm8Z5n+H/xh/eNA3wPUf6Bcq265F5I0Tm7
p0P1F3WzMTG4VfMfnmHQ/QnNPVToDpi6dPWC2Wa27226XXSYnt6yfKIXWGQP
HJLmtlHRgkoXqeNekHUIcdIp2UTHPUI/25L1QdyF+N3+0g3US/ONbwFTH1SG
r6aLhq2j09uMUSLifZDaYvTSn3sF9atZjTeX6wNnr2Y928AlVDq4JiVDow9W
3xVjpHR/0CBR80I+sz7A087+evnRPIoSyJcbO/ZBAM755DHjHLrUxVz7w6sP
NkRVl30WZ1BZi/oujp99ULD73wVZNoWuyUQPPi/og8A6ZgOFikk0kspyIqam
D84W5AS3Rk2gW1msqxcm+2CKnlH3J98oGuuyva291gfKN/3WHnwbRu/eazr8
dtwHqpo7ChmMQ2jimhUpzYV+mE/OsnrxpB9Vr7hLqc7bD+n/6HZfMfehx77s
DH7i/XAwzRhlvtyDagq2cpHd7wf3L4XsblgXivcvnl9Rrx/ulnR25FV2oumt
tiKfzfqBT1RA93lcB0r0hgsIvPvhkHi/5rdgK5p986+8TEQ/fLfk8RaIaEaf
nutQcf7ZD3bO+u9UWZrQ/FR7ncOafuiYjdyO1q1H9ezV9SW7+2FuQmfOirUO
Jb/L88pmsh/4GWZi763VoAZ/uqy3jvvhFfGXSOrqKpQvt796kWwAVne1dU8a
KtE1+xHKCaYBYH2EfXlchKF25HO/WsQGoJN43y7pfhmK9v3Zq5IdgEK+Fdfm
mhKUKHZNrlh9AN6JCylO3f2N+l07GEt6MwDV/qxibKGF6IODY/4o+wGIKxW2
Jn9UgDJV4X8I/DIAKhJDY3YC+Wji/XM0zkkDIHGUwU5CmIu+YqF6bpU7AJ4X
W1j0iHNQoVm69NeVA6CRx0WRSZ+NFluz3dEeHQAiSzdtpCQddUK5glWXBoD7
zb5hNncaKnvmyqTcwQBQ9sd/MPj5C20LF7EXphuEjM0LT0oXk9Eg/RsNPJyD
YLxlwseW/AN9xH+TjlV4EIweNbDLWCeh06W3M8+qDEJoAVn8wu0E9KeH0tHp
40F4s3TQFS8Xj75RVVPcM/4Pb92O0F09Dt0f156edh+EmjbqJ+pcMWjZz6fX
hgIH4c9OTMbRlyjU7Z2+Y8f3QaBqiDOVIo5EyQlMGcpKB8HbtfLaZ1wY2tVs
/jK36b962et/VXa/oaHBVtkpA4Pg9mSkj7YyBOXgdr77bXsQNBv9G397BqHz
q25h3vhDcI1RY6/eLRBNL/Sc/Ug5BLKetYtCPgHoDcVAZzOBIaDuYro74+uL
HlGFthhIDUH0F6WGnFVvtHIokumJwhCI4DWBoYEXqmyalKvwcgj8xewQ90BP
lErs1yliMQRn769ejZH/jPYfZ6iIuQyBjqsFyd9zn1A9v6J59qghwP8YLuja
4oZya5ddZ/w1BD9Wy5a6qz+iS5eqXCmKhuAzc9BqfqMrap3TzHzY/V/83oOu
o79OqLR9h/HG5BAUeD6iGHzgiOLJ9ebPrw1B44d5/NVae9Srd0yth2wYCq14
CIsWbFH1mOmoJqZhOFWMJqANs0HpjRYWMZ5hOJgxzdt+ZI3G7W+4pcsOw09z
Bn2U6j1qWLnbkaA+DNlt++RNhJYo/9fDixG6w+AspAlMJBZoATNR0Sf7YSDs
SYv8bmyGspFtDKV9HYYFplQGvvA36Oe/I8dd4cOwYlcmpDz7Gl1fbLh08HMY
xKb0cfp3TdBHg3mybEXDoKt98cdEozFa1fDd8Hb9MHwWSH56X9cI5S/y/vK6
bxgam6adnpw1RI+/vWwv3B4GVYIBLfaoF6jhp3ubowQjUH3miY+7iz7abnWT
jpBmBNZefp9pstJDJQx4Jfg4RuBFt+3czLYuGveAVuee8AgExbMr0F58hp6V
O3W0hhEo15cL0dF7glqKLn+PUhsBnEd1IAX2GL1NXTO38GYENG58SnWv00Iz
8LJIzzuOwNi/7i7j1w9Rho1IATHvERgiv3O8x6WJukx8VtOJHAF7fFu2vY37
6GK7pYXrrxGIM4F1XKcGqlGhG5JcPAKlgY1N+ZXqaEnG3aLWhhHYX7l1K8vt
Hurjw/mPaX4Elr0EFJPHldFdh/PssDsCkfGMnL3id1Fd00NZQ6JRUHy8Eaia
rIg26MwbetOOAlwoJwwUUkCF73Z/yeEchcNbK4PX2+TRCKmKtAGRUXB6+Yxs
yvU2SsCX2v5PZhQeLd2a0FaUQ3vOuNHdfT4K/96d+/OP4haK238r8c5sFDxO
IYOETAZNmn+sE+o0CiGWUTJ0AihK0S/vVOYzCkF0KjGSz3GoTZ1I3HTUKGxd
LEqoyJRGJ/JZa0jTRiE7YmediEkKVUw6Oy9UMgqlWTInbhESKLP7lIDD4CjE
NSmU2k6Ioe6WbWrxC6Mw90qiXCX+Orqi/9uiYW8UGDCbaFobUfShxo+QVeIx
mHSlCUp7KoJWyAQW0dKPQe7fLVJiTWGUV9hpWOryGFSKe1y7VSiEBlwy+ff8
+hh4BAzRXZy+ir44kZFL1xiD5Yt2i43efGjL6lWjbr0xqFPHtF6QXEHFxpi+
HpiPQRLu3zuBcB40ppUonc1lDHL+CTVVAzdKUrbRfttvDL5XZxyPHHGh5mmj
m69j/tOTZ/webeFEByMb6QLTx6DTV0S0Np0DTbWL0xlrHoNThvKrG3KXUFoT
HyfC4TF4az7w/IkxK+r46EMc358x0DEY5eb9yYLOKRjU3Dv4rz5NdCMBnxlV
k1Cftz4zDgasNZsS1kxoEQ/ubDTDOLyXfB5qjMeIsjNcuVrNPQ5+DF+om+Pp
0c2dU4vzt8ehqE9EZIuDFs2sR2lF7o9DY22v4W1qGvR1uFP+A71xoLC26q+l
pEZnbx7thTuOg8Dfcsa9t+fReArp8FKvcRi8mc+lUEaO6k58kBoPHwetD0NU
5Zzn0EG3PQeugv/4OlZUm0VJ0W+a4qx3asZBxHys888QCXqfx6riVdc4fHxw
5QsuhBhtbdrEy1wdB4UfGTK3UUL0a5RwQufROIzcJe8juEqA3nlrLrd9dgLi
zy2ykvDho5VUq58keSaA5bLkMV7UCeI0LcD7RGwCmmtk6TvnjxHp/NeNTrIT
wLgV3Lpw9wjJ114kq9GdAPm4m8dRWgeIBR9v+tybCcj3eo5XfrSHCB0ZqpI6
TMDeA7skwfxdJCV2xl81bAJeODXfrNTZRgzfcYq8+zEB3bKWw4t3thBOWf3u
oLwJqJTQaXgju4lEz43TDXZMgB7pnI9a4xryuIi18HBsAjSiW4/DqFcRhq9P
tVlXJmAn/+BY9f0yosiwqiJCNAk5F1KyEuwXER4XnxjZc5PAZf3kVjXrAkK8
KLD2gGYS6KJzSNV655Dq36/9bdgnoaU8Ts/IdgaJ4ySb9OSdhAGHX9l7+tOI
i/cv4QihSTj3jY/s75MpBPdssasUNwkXPNyvTuyOI8z1npxtcpNA+i1A4jtu
DPkrxPt+/O4kzO3THa5HjSCFeEZ0+I8nYflVYeF47CASYkJsSKM3CVuTu2N/
YQB5351UwGU8CcXVvYcxO32IcNKM1h3rSSi7+n31RkgPcp7C/ae24yQk/kgO
uurUjaxacx68cp8E5AEBW5p1F5KqoB/hHTgJzinP0DyuDuRLNt5SdPgkTCtr
cM0btyHGF+KkM79Pgn2F5cX22hbk8vL4SGfGJIT56Oip1zQiBJrOV6fzJ8FA
o5zd4EUDMlXG6rRdOgm3XO5WsdLXI7F+T9kYmiehTcSPQzSnBnHcPzLj7ZqE
UMm8Uq/wakRHLwqTHJyEpu5JaXf/KoRRdFjvyfwkeB+o8LRoYIii0NtoorVJ
GJfep71gXo584McbzNidhDMO1Ko2v0qRFJ5gWu1/k4BzfbzNefobGeTkuYdH
PAXUQgyX7M2KEdJLv71+kU+BV/1X2NgtRKRYVOrv003BuaxXIdQhBUgkrSXy
g2sKhB2MX+2ez0OaKYnt1ASmgNCR6VT6Tw5yeC48f190CgQSPT2u9WUj/KQC
G3HSU3Ck9XbCIzELeUJUIXBXdgrKkGVYKM1AfPA0jLeVpkAi9kxl0mYaUnY8
kxCtMQV7TL0bB7KpyMXds8zrelMQzWYhPizyE1HZjH4Y/moKdDL+cuu1/kAc
V68F3no3Bf3ndNxNHZOQ9D/VrUu2U6Bw4U1stkwiMjb3kDTEZQoMorawfcYE
5Pz0ohziOQXLkYM7LPjxCDru4DLvNwVJUetDtHvfkdj++D3J2Cno+DPm4y8d
jbR3i4lO/5gC7EBj08UzEjlpb3jrnfFffyT6jvFr4YhQi84vsYL/9HIZuumZ
hSHPG1Znx8qm4O4W3Y9bxKFIQI0ru2ftFHzhOng6mROCVGK0T4Vb/8N//ypi
1TIYYS+W6nEbmYKqcE8CB8FARD2/9fzVmSkwN+XhKL8cgLhmP7/btzQF1a5T
0+Pafkh2+tYn560pyMan/i7p4YNMpXyq4j38T/9OcfXvVi+E5gfTv078aZB+
4WCYfe0rIhufJml/dhqmsnQqPNI8kYSIrqxWpmlQXPuXN7nggXR/M1i2Zp+G
K7NHaRk/3BHCoH2eS1emoeVvg+6kjRsi5uf1ovHaNIhapgyq6nxEDLxYYy0k
piFiX5N7TM0VCfmc/d9XPA2aQXzW5D+dkVo3OfraO9NAPXRpIb7dEeF2MPFh
0JoG/NwLNCYWdoiW7XED9mwarpKYf1L8Y4t8fu9PaGI4De+0Xr2t+WCDFJpz
As3baeiheLXzls0amTctsC+1mgYpRamrW4PvEYZXioUGjtPA62Nfdv6nJaJg
MLJJ4TENj7Wf/PjmaYGkPMU30QuehswFpkTSfTNk8FFI0tmoaegbD9dpu/AW
IX3IO5mbMA1FIea8qo9NEUmNEpanqdOg3yyBtOWZICaqqtrEudNg9HvLNoP3
FRKpNBmU+XsajnyEqozyjJBm+fft2lXT8HF60ffrQ0OEH42QT+2cBvPj6J6S
gRfIQqFc0rXBafiX00JoX6KPJF1bIyiYmIavgxO+jJl6iH5KuL70wjQ8Uw/l
vfLyOcLGIVeJrU3DXdr+hBPPZ8hIxCqb/N40OFkNmK81PkHCacKdmv9Nw2ai
nqDaZR2EmmhVuo98BiL4SlCxy9pIu2NYhA7dDAi8qf49UfcQ8dq9dTDBMgPc
XE/LZB01EQWzFS1DrhnwrhFO5rrzACFaCC1Y4p8Bht8tL55w3keqnt+ieyc6
Az/b+9R7KTUQ58Fly12pGbA7tyz1lUIdOWiSEcZT+i9fJWu5zFQFKZBd9vuk
PgNas7XHDuV3EcvSb6tkj2bApyrXI/2KEnJNTEYl4PkMpNZra7WlKSAr6Uup
9MYzQOwad85K/g7yi/vb2SizGQhsyU9X3rmNGMXCK3abGchJ+mpKWySHTPqH
cAt8moH6jfG6tve3kBhS8Mj2mYG4XnmxCFMZROfjn2nxkBnocg3MI51HEcbD
4FulUTOwO8mlJ0+DIL2WaJxM4gycV17VEdC5iQQuL57Upc6AHmoxzVgmhagZ
BD9Tzp2BYanIA9cbkkjDw0VmraoZGL9gvEdrLo54tAfZjTTOwJmVD1vh/GKI
jAIyqNc5A1eodjnU/ooi/7CFG/MDM4BvUEhKPSyClEgGfTOdmIEFfe5HnS3C
iG0ObmdjfgYaL2r100ddQ8T4F+7brM3AfauziTFlgkgmC47q478ZkJwxoJy5
z4+YhsybkRDPgl4Hz0P92ivIFYrANm/yWXhwXGbzTpUXmft08yo13SwUlGG5
aSvcSMLJnFcoyyyM3g/Rq4m7jDy3DfjDwjULLOTkOQ6vuJCLG9KK8fyz8OnB
/Mc0WU4kdMqfOF1qFgK8m1a4+NmRBzrSBiK3ZkGSlods9DUbQtUzW12oOAty
mgQm+rEXkTZlfw6c+izMhdJ2cawyI161Uq5V2rNAg4mSfHx4AVFAZsfvPJ8F
iRuLV4/6GBGiQj+k1WgWlJX1HnO9ZUCcfs4c9lvPwsZodp7YMC0ize73+KnT
LDwh9FpMzaBB9sIli6c8ZiFwPXR0PogayaOeYTD2mYXh3hq3kS9UyDsvX+uV
4FnAv3fJjJGVEhEklOy1iJoFB2vdKJo7FMiSw7TofsIslJuP6S16nUMM3kps
4Of+15+Gy+4PfVJEWfucH/HvWRD2BsFi0jOI6K0JgbOVs4BdoRIYriZG8Og9
janaZ6HuT3ge9xtCZOFEh5iubxaeMdo2P39MgLQvCiUyjs6C0GYWd9NDfCSq
rH+cbWkWGjGdj/mbJzi35FRHzs1Z4OI/SFy7+Q/3KsCZmedgFoxjJEl1Yo9w
Nwx4tARJ5qDmyrS9c/IBjlXtcFuYYg56mER+Vyvt44gk2wPF6OaA93NAgAre
Hq77nE3bTc45UBZ///VfwjYuboL1rJzwHEQcB7GUfd7EmeXV3b6LzkHGGZlT
OqV1HM7zrauGyhxcCjfy11pZxpE9oS97pDMHvYOBRhdWFnGDQuX7z1/NQfrE
mu0bdB6XTGB43dhmDk5qv958NzyDs+onNzfzmIN5a0YlqeIp3K3U/FTroDlo
mTy88SZ+Anfe+em8Y9wc4Oc/Vrl2cxQ3qkHE6ZE5B4UaDmMfRIdwqdzpz7zL
5oCw5ULLTad+3Ie/DyKCmuegdZbLxYWmF0cXn0gVPz8HJFekpsoOO3DZitue
WQTzoPQxguy7XRNOZUP2tJxtHo6jn5wXVK7FLYQF2bRKz0PGnsCEB38lrv2j
EV3nrXnworFfivOuwOWbSuf2KM7DVmMSt8tIGc4NpleHteYBz5zkkl/Vbxzb
gojhH8t5GLovkGLvkY/TNvi76mE/D6O5NoXGd/NwAVOVNuxu86D9S935Ilcu
Dn/03hftwHlQ6Tvv+o40Gzfb+TatLmseopu3l3+e/4VLLfm1Gb8yD9UOk1GH
EbG4GQkLe2RnHpzJblJ410XjLhZIEg4dzQPgP+Vgo4jC+WY10FGdW4D+p8dY
7p8w3LukOQlnvgWwgiae9Kwg3A0/DmcdowUYSjuXz9b9GWd+7g/J3tsFsD6n
VtNk9QmX8iXbP9B6Af7++i776KoH7oI7xDd6LMCtq1sZ1/s+4o5tn9XeSFyA
pGJN1ppxB1y1fgQZ7eQCRAvW2RQQWeBUxanDWh4vwhgFIcuO/mNcNhfB8zm9
Rbj+KWvNd08bR0OzzXNqvAgTFQmO9t+1cINrvYWiNovwu/2zaCefJu5FSnh/
RNAijIRJJL4mUsd9YGFneNWyCBUFO+vHN27jkvCvfSNC/sA9a7zl5xeEccdt
Kv8dLUsw+cLnOskbIhzHzbcqqeQrQF/1M+cXb8rNty1vWi5trEKg3Lkk9Lfa
TcnkRjruvHWozMfjuf76r3R5qocvTfsG/GgyVadajJWO5e2x1sndBOWi8/Su
ForSNDeoq3iCtmDlwTvdzaYdqarMqtcbHtuQrjH0mfIkQipbJe7vR+MdmOL0
/pHJKS81rLk5T/VsFy71ptAsy/2RDFsTkbistgc5Rc9bESRAMiQj7s2p0D5c
sHJSZOO9Kdna/xFvkPMAFFO1v0ZlTUrc5g60+0DyFwTv/dnKSPeSuEcc8DBm
7i+MD0as//cRSHy7hx+ADRzCPbarCeR/R2+wYHFZv34fAWLCf16/w/PGSHiu
YGDmMRwyb/JQ1V69MRK2FSAT/A9uXFYKp4zsFze/wqlt9f4EchXfJgwxuYsj
XLUOP4xOYcUK/35SMa94MkezbMdlPJnAnRc/U/h6xJqNlm2av+PJNGhRei1V
2YgVW3mMejLhy2gIvtxXoGIVu/MtX4zvK75M+pl/o4lcjdc3l1hxSoQEMqnV
n4XM7d5exz1gu6FqTSDzbvGhWJUx43UNj1B92jkCmRvSoBp1XCPqvqSAe6RL
KPPvb9INJUYT0YcvA85+7CCU8fmYJC/lSCcaR0yjYd9FKHPnxVCkgASt6NLP
4PD3PYQyBm+3G+RIaESdV0J5jQYIZeQknj3bLaIUTbGOkVeeIJQhV7mRqOFH
KnromfqRfp1QBt+TacXJ/J9IXHrt31/niWQeqYrSrHDPiSyp3bmVSEUko8yx
mfm4f0ZEfLPhSzQNkUzpRgdZSNS0SLN4C6M/A5GMirGVwpPnkyLbFV3iVmxE
MnVKT+nLHw+J3Okat0CFiGTemJ41f/iyXSTgvd5vCWEiGU+RJ++5P7aKjNBP
44mIEsm8nVz4NVjWLPJOZ86f6waRzG7iH8aYzw0iETPLGaQokcwLwUDa8BvV
IrOf3u7iyxDJPB9d/hRGXyUidGUdd3SLSOYyi1eNK0mlSPWbrZZVeSIZw62H
fi+ul4mQU1rRLigQyYj/5Pi18L5ERDtnV2dSiUimctsUx9dZLJLwwDZhSJlI
xspX7Kr5nSKRld2DP92qRDKMxKeJF/sKRP4Hy9RuKA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3402#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
XjZ7bZlsI7m4sT3XcZ1MYaYju6Qjx1ryf9sg5S4=
                    "]]}, Annotation[#, "Charting`Private`Tag$3333#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c80O8Tt0OFrIzIyA4pm89zKEqlkIRKkVVCZJRRZiorKyN8ERKy9/rY
e++VvfcOlX5+fz2ve73v3nf3jLt7OA2tNI2JCAgIFogJCP6/Ps3a7PtxtRNX
NNridNlwx9p+Gf4IlOnEe2SurLUVeWDiqNvDTqgTNzjUOmn60RM7bMq5gFF3
4v/+0gw3K7/Dnpw6d4yTsBPfYJr9oCnmjTXcC/lJstWBF+b09AbzvseCpm0/
tvR14AaT+ZSzoh+xX4IzjzMbOvBW3+tfO6/4YA+s70qFFHfgUee2g4WNfTHe
Q4np+zEdOPP07N2zTf5Y8elf2JJxB07pFr2RxxyEndU3pW+/14G3/6PdZRsM
wjwT+hezVTvwv/NclJaxwdgtscIwR+EOPO6d2RWma6FYjgO/pf7ZDvzp4jnu
cwKfMaby8CtKp478CzG2OtGFYTWhm5N0i+145/GHDV9IIzB/ru6A4dZ2XKFI
i0qCKhLTyciR/5rVjlPnPn9cyvkFW26w/XzxdTteaEKlaGYejdH/2VXVIG/H
r23G//f+Rhw2+r5/l2m5DVfqe2b4nCgeS2Yo/Dre3oYT0F3jGa2Ix+RFX/+1
CmvDHSjbvdLvJmBkpbopUk5tuAV93Fb++USs45rsvX/6bXjmHr1q3IkkzMjw
d6Y/bxsuq2B1OWz+GyayNvxQm7INdxxr//RsJhnbcyqlZF9txaVzvJ9lLH/H
fENdjH7kteKS3R60N8+kYXkN/063XGnFi5+cafd+l4m53h2vCeZvxeNPLGpe
k8jCrk9WWN8/0Yorn+BuVFjKwkZ/uzUvdrfgtxYHKagsc7Dk94avsgta8Oky
cUYvuVzMhuEyj+OXFjxBrXbk1ak8jEyU5C3Fkxb863UJNcWBfKyjZFqoU6UF
b+m6VdbTWIBFXqsdCBdswWOFmGsMawsxEcN3F/k3m/FXv19TMI8UY9qh5LMq
bs04bXo+4ecQHBvsYZlLN2zGP+mkUsS+rcAe0AvPM15pxv3OM9ifxioxg2CN
xVmyZnwGijTmOquw6a4nS7fmm/An3Ovax1KqMRNa++X8xiZ8TITz1qBPDfY8
MHL1nW8TXr9C8eyuZR221pG2tmrRhH9s03mxYlWP2dDg69q3m/DICqY4OpcG
zCFgapOXtgkvH7moxF3ahB207Wz5bzXilsdbpfnXmjFnKvKd3Z5GvLGTc3NT
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
Y1khdpLLO3sLXWokCvQ1Du1ksbaS/wNKDrlb
                    "]]}, Annotation[#, "Charting`Private`Tag$3333#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
xkc=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3333#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
7PX46dJNBEDDm4ps/bKbOdCY4Z0=
                    "]]}, Annotation[#, "Charting`Private`Tag$3402#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c4V+8bppRVsgvZ2dmFxnkfWVFIVqLMMkNE2SF9JSsjM1IUGSHZ49h7
k2TvPT62yvj1++tc93U/13Pf53nOe73n5jS113x4hIiI6BYJEdH/n1a5631Z
17vwRJqnAYOf8rH2HdOssEtduGoGLde2UgF2AfW8cBbqwofU69LxpQLsoDlP
DDvVhSdNDP9eVCrCwqecXrf2deI1v0u2Sy6VYjuC08Y5jZ14Vy515x2SMuye
g450ZEknzuJ11be/twzjPbg4ZZDYib+l2D8h9aoCKzm9gy0+7MRj2yhLcbYq
jN3Qgr7jTieOib6X4U+swvxSfi58U+nE2159mVDgrMbUxYui3YQ78e2wN83k
kjVY7dv1CbqFDrxMr8b7t38dFsLVEzrY1oG3peTmX+Svx/Sy864m53bgEU+y
zZjb6rGlRqcoCdcOXKDLoc+SpxGj39tWuU3WgctKGo3z0LdgI69+bp9ZasdH
bzhQZAy3YGkMRcljHe24OuPsAmVWK3ZV1HXfProdLwpkcqM2bMcemP7NCeFt
xw2J28pZSbswkdXB+7oU7Xio4jWDvpdd2K57GQXbShveeVmdDJF1Y0FvPR9k
5bfhdcSaxwPO9GD5jYenWxXa8N9b0kWy1j8wb52x2gj+NjztrVPZe/I+7MZE
pYPBiTa8ouFzS1JWHzby16dloacVZy0u2KIj6ceOi5I8JzdrxUeribNqVwaw
ztIpoS6lVvyN4nSqZOEgFqdc1x8j2Ir/uL0h//TlECZi+p8E/3oLLmogxsBz
YQTTfUs2o+TTgmsJ7Rm9Wx3DfvUyz341bcETAl1crF3GsXv0wnOMCi14X3Xi
p4BjE5hJxO2FmeMtuAH3Vtd14UlsqttsUX2uGc+8f3lKtHESM6d9ulTQ1Iyf
HzaR/2sxhT0Ki1v5L6gZ/+QgzDhYMI2tdmaurtg245/fnFOWM5/BHKlxgu6t
ZpxulUFPgmUWexY6uc5L24xLV7+9ZRI1h/kGn9+pj27Cs+06ei/9XMSOtaFd
EdcmXFPq6i5r0RL26sTt31H6TXjHF/8S5qRlLDjQ+a85axPec7FBUvG/VYy6
xX+v/aART2d3eeksR8DCKeL2pcYacfLzr1Zb6whYTEDF4fHkRpw3lIzhxK81
jLmpk8jerxG3/0DXI221jiWQTRL/fNiIi35O4CHsr2Mf/UlJUvkbcbLPE1lx
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
+OnSTQRAHuYXjHObmzksv82u
                    "]]}, Annotation[#, "Charting`Private`Tag$3402#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
T3ebOQ/p3mE=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3402#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c4198Xp4RUNolIZCV70/uejGSGzCQhI3tFWVGp7MzsEb4yyoqM0sfe
ZJa9996bfv3+us95zj3nvM7rPveMqyb298xO4eHh6RHg4f3/tCzY+P3lTicu
Nbw9OjF/B2vfNfkSJtGJ86arYszi2MWEUfdrF+5OnLVVizjbx13spPkrP0bW
iYPLFP+lxu9h4VNPA1p/d+DYiMOiuPIPsN3r00b5jR24/36ZS/PdPMQMHLXF
Iss7cD8+m4RRtRxi7CciUw+SOnAcmYoZRetHWPnFXWzRrAMn4+V1itL0L3bF
0IL6l24HrnPIktSEAA/5pv9ZKFTswBU1hXNY6+GhuwKl0e48Hbg3qY4XC87g
o9qojQmqhV848XPD3mSupxD10Y6iBvEv3M+bQbz9386gEb8/O3RL7Tj9r3Ly
9ZyEKJOmNG3sVzsuRrv24tlEQnSTz+3YProd94vTm7MqiAiZmhzmh7C342jJ
LBlNAs4i3tXBhzok7Tg6bz5HE3IStOfxg4RppQ1XLKfQdTWWBAVFeZl+KW7D
aSR8yL749Rwqbvx7sVWuDffrS93FtySkyEd7rDaCsw2Xv/AJWDNJkdJEpeOD
8204kP+qe6hAhkYOX7YsdLfi0lAvpq5Ejgj5CLzPPm7FLVsWFP7JpkA6UcQz
8i9bcNZejtxdDdSov4d+NtekBSf2wq+LCdEgA2qeOVq5Fly86dby+RIaZByh
sTBD2IK7/MT859kCWmQTFrfyNqgZ56AU5Y0a6NBqx+fVFdtmXO2z60qqWpeQ
EzluTUetGScrTUfnPXUJPXs/ucFO2Ywj2BUKiyBlQK+Cb+zWRzfhGCWyPIID
GdGZNrTH69aEu1n6A8MJMSG/8xr7H/SbcBTRnS9yR5lQcKDLoTljEy41QDYs
+CozivH/+ZcwrRG3Ky5Qr5Z4FdE3deDZ+zbijC4NGnzAZ0GJxJP4f8wacTp4
y60Xn7Cg1HdEBJ84G3H9N1wVTqRY0Zc36sR3chtwUHtT+hceG+KvMzmb974B
h8+xrGX0nA0VEriQXHRswCUddVHFbbCh0tex52eFGnDb38+5yK2yo+qXE+Tv
yupxxeIlYoLnuNDtqi2K1bh6XJCuS19NLBdqxCOi0vWsxyVLlNG+5L6O2ry5
aTigHretiE/QoMeN+ryeXmqorcORmuzWRQzxoAcVb+n5MupwZK3eTeFvedHI
UQxD9Ls63HfN4eD7wnxo0qOC0UKpDlepjp42q/KjFTdCFqKOWtyNiX2GpDYB
5FhGx2pfUIu7sB5QsCsoiLb2rl/7E16Lm76Nj8LjBNH+MzX2T9q1uJvEnb8r
HIQQgWvM9TuDNTjnU7EJTyRF0OgaAd+3nzW4X2P0WtdzRFC5taMQW2oNbszN
Yk+GSRTZGyvdPG1ZgzOzeHOSfU4MDagcqeJ2qnE0L374VBNIoOKGJ/d4B6px
e++tTDP8JVCoTK9OYkU1TkqBhl2FQhLdFs995OFbjas2fsZOxyWF8lmNHMUo
q3FVFJ35jzwxFJjU6pKxXYWb3K8jP6FDyPyShDtNfxVuglRFb6gUIQYyyteb
yVW4CB+nU2r4t9Dbg5rIPJ4q3I4ALRmdkTQy6OQo5VCsxD2KfbOu5S6HxFQi
f3y4UYlbflFsST8rhygb8KrOkFfiws64pV3VuY1C3L5GNHzB4TjL6kLYpOSR
qfrFEmj6iTtZvD1hwqKA6OXXcIyhP3E+9I76kakK6JdUU+Ohzk8cvXJFhR2b
IpLk8BgomarAJX86pNIVUkLkJyPHfHgVOLUOZ7NIRxVUv1lCSNrwA0cQ55yR
RayKPOZDyZaCf+BEHX5YjKeqopkemauZDD9wtDkkhodjd9GPnAw5ZrHvuFsV
orixanVkcd8ukNyuDGfr1sx7rkoTlVoFelwQLcMtqg5ITnFoIWLPTGuSk1Kc
90n5z55QLZSdNKFMEFKK06q5uMNhqY2WJnXO730pwbH1Fsr9FtZFN7edj7Zc
SnBjHllFmV90UTBh2NI6VoLbU+QUWOPUQ7xcLa2Lbd9wv24X/KTguI8c7CB4
dLkYZ0EkRkUr+wBVeht4DRUX49xihckJOx8gijA3236vYhzeF8mz/cYGqPDr
V9XuC8W4vjWHB6ZBD9H2HgdpA08RrjvX3tX0tBFyf03+Pte2EMd55YJl1y8T
1BzJ450jUojzaFoPrhF4jBgylOwzjwtwathocmHUY/Sj0VctNbgAJ8N9/2bR
Y1P098I+2Ycv+bjLgzy3XC6ZI/UrtHgRLvk45ZVmZd8gc5TCL7T2HsvH8Xaa
mizgW6DXGQMpVPF5uMZntjlLmxaIWKDm6uHAFxzp7c0C3h1LlKV5jL9t9QX3
o/Ox430vK6TkKjaxcvAZJ7vduyRLZI2Cv+ekTtB/xp3m3PkYxmqDKOUjWZv1
s3EPDyTtv3rbIYYHZmyxAxm4F5l6jAwLjihJwVyH2jgDp3jWVsRQzQmxiFq8
ez/7H07HwDl/+JsTuk5hOf9mKx1XOueWXhvkjCQbbL44kabhvpAp3cvQdkE/
i2xHliNTcWKvmp1QuwuSSbUjs2RIxZkK/bjpo+iKFL0cHB9xfsT9THPSwRSe
oQLzOasY3yQcncs9K70nbqhUeqE1JCwRhzN4arGz64YqLy/xvklKwH31vSFQ
GeCOOrpWNxxL43ChV31lrpR7oBW066689AFX2KGbSy/zAunynqc9/hSCS57W
wX9G8AqZT5ENzFcF4aydLKnVrF4h1ziqpN+DATiGP8Y95l2vUCQhA3s+2Tuc
rc6Mu1/Wa5ReoWlTv/IC94Cj7h6JyxtUzfVgK5nFA+cb2zmsufIGjUeZeLrp
PMNJBS4fKVm9RdjQBN19T3vc+kxX/wurd4i5ezJMu/AqbtvE0qQ82B/JZis/
SNpSBGvSbxncTAHo0zW/C/PXDeDb0RvjtoIA1G+cYU4qbwuEua0/FiYCkZOP
CNXHbi9Q1woySbYLQT/JvCyt6ENA/63r2X2mcMSX3mt/Yew94D96zOD9Ihyp
X74o1dcVCqhIuOxoNBxV5ttLe8SEw81ztQrEWREopZ/5bhXrByD401oRqhWF
+lhVO8MJo6FFeLoevy4Kkdu5aZnOR8NzvmsBNWIf0MtTXfpEebHwQ8dGw+pa
NDLhfm2hKpkIVZy6VdkMsSjOJW+BiTEJvt9vbT6TEou6cYO2a3+TwEtu/x09
RxxiuU5f3mSSAiv2aWPZWDwK/+lUacOZCn7NvkrnQxKR0yxrW+HX/0BSuOv5
GbOPKOR8eQgDWwacn1eRLan8iLIF1NV9P2QAb02hpQpTKprw8OzWdvsElh4h
7QqjqegeeW//HsqCMKWuti9u6chOxDreOD8LDo6dlhOm01GAPv7D5qvZgOdS
d7pO8z9Unc4zFk+QA/3alHyrohlISOLtDGr+DE3cUQSn6TORuuHlzE9SX8Ds
7t1KsthMZPO60JL8yxd42RctWk6fhdLbRpbG3+cCmdVx7RX2bERSEO9WfT0f
UoTsa6oMPyP321veZmsFcFfKmc63MB9FbzwQ7+cpBIsrhxJHFAWoKLlmTcW6
EAjucYp+cC5Ay/vhxsIzheCU1tlghBUio1wB2dNDXyGi9h5XydJX5PUg9tD1
UhEIEPRzpBkWoThi/KIFnSKwHIh7Sd9dhLpNOq51dRZBEa1583RNMZK/aE/4
saEYyk5Gp+LqS9Dj2t8/qc98A9ffZ+oD75YiH0f0zE/mG/znuznzpr8UlbVc
mLOv+Ab0GR3lg3tl6IbP5yb0tQROgUbK+Uc/kAIP9avCtRJgxxcYlcWvQGYD
HpLsvKXwcpcxmv5TBUoSVs65kFUKPjk6NfvHPxHF/HzQUFIZqP/2N3ZYrkS8
HzRuqw+VgbzqrrDE3SqkJFt2XHOpHA7e4cy4C6qQb6KfXU5kOVDbnI2q8KpG
Oxoc6u4B3+HA7GCVQKgWUf0NIV5p+A6muVIJrzJqEf/nnUrjMz+gTWs3JvJy
HbIkrBdQ9PkBf57+7sknr0dD5aZUdK4VkEQT+8STvhHtW7S2BH6tgLDHL56r
pDciWhph379rFeDGzfCMX6AJqdmf3p6x/gk+2CaRh1YzqmZN/V1sjIPd/R82
zDWtaKTj7HuuZBx88/t2J8KiDR16Od5JHMJBUibV/UKydkRvw2xQzV0J6pUz
EYrWv5BW/WprVkYllBT1SrJydSKa9y9Femor4eQU36yjfyf6rUuVdDJRCdv8
xOeGFzuR7ryoveaVKqgROvdIvKQL6Z9/QXEcXQXJUv2Jjyx7EEMvmTvHtyow
/1OStzTYg4YSP05o9FTBud7GmCP1XmTIV/c1g7watFlsE4ZlfiPje+d11P2r
QYVWo1nmTh9iYUj66f6pGphLbs+8+tWHJib5OP6rq4ZXliYJOP1+ZOqiubeP
XwO/rtkjJ/cB9CQmLi7NvQZ2qSiFssaGkN0I5+iOdS0EVoe6Bt4YR3yfyu9c
DagFQlcZh6WgcbRmr5KvnFkLdDwjyGp1HDniO7xMmaqFKBphoqXyCfT0Wgmr
0sM6uF5b2WdqO4VElhWCnnrUgRzl2XtEY1Nop3hgKym2Dsp/u1/g0Z5Gz+6c
1G321oHzzd5jyTszyN3q9pPEu/WwPHpe96/yHJIS+tPRYFMPrZlMpno9c+jo
8InERkA96L4u9s19NI+8goNI7jTUw2U6dvso7wXkk9/9eQ0aIMGlb1tyZgm9
2zFelxVohLJbTGW/+NbR2utYHQvVRghVyxIs9l9HehSd3wMsGyHPW6bTYXod
Xb9x623nx0ZI+ShNF5a6gdqNmRgeUTbBJZ5YqffCW0hsVdvnFW8TGP22OsSS
tlCKZ/D0f0pNsBc0/YSGZBs5Rh/lLb1qAilP9MV6bhtRtw3IuW82QdZFz0y8
ql3kpU+ZnUjWDHk8WhcRtodmZhXJqribQZ6rR/TMjz1Ucqqsn8i0GSzC84fN
qvaRvni0XVRPM1yLsUvYXjpEKWmaMfnFLaDxi+S9qBUenBUIPO7ubAFf4cQe
sko8cPpZbbK73AKpBqf3si7ig2y/AA9ibwWX3o3c2634MENKXt3yoRWu8ORZ
cqicBrWEOxyrha1QuRIwT1lwGkq5vIMof7WCMQsjMSkdAfjLrejcJ2qDLfok
G8MlArjh3ro486wNTAdv2KblEUIUEYEGSWQb7B8yE8izE8FJpNQ3nvw2WCJe
rddKJoJfedk+T+faIFH8v/z5GGJwmvajOXW/HVRf5m09ziGBMvXbwCj5CyoU
1TgY9cnAiltZPUXvF6SKc2meJiQHekINY9ZnvyDwpULSmhE5uH83eM1V9As+
sg1WjV+mAEaq8kn6ix3QcjGo3jyXElzxMBsD9g7oYn1RZ05HBe3LuK1EkQ4g
CWsYwflSwYvGujNXtTpAfevSSKEpNYx4dXJwhHUAf4WeKqssLYhaa+U/SemA
Jqqf5o5VtBCi90c8O68DGAuyPwTKXAQkNKzI094Bg8xti49V6SBpbs5a6Fwn
9PaKy7m+o4edXuutp/SdoLdRGrXFyAB3a1Y8v3F1QpSh8ExDCQOcJG4FSyh0
wqxDql7Z9mV4pImXD286gZOOgW4j4QqU3not/jKyE771/73IzMkM5LyEVdVp
nRBxf5a55jUzVBKf77pd3Qk9FX+UrktfBeafF7eU/3ZCX0QMcUMvCzzPifMM
Ju2CfFKjRx9usUJHDOOZX4xdYPylLa/6Cyv4OLPS3rvZBVN0y+sW76/BGCef
uJ5bF9itMhTaOrKDOG1hZaxfF/xikInOWWOH0NMiioPRXaCWHDhU5sQBt0Yk
9Q2/dUFv/jXrd96ckBIh72m62QVJxNy4sorrsOfTRJBxqhsOo9SfK2tzg7qd
SvAsRTe8S0jrFV3jBjzFe0lW/N1w/UDrmTk/DxifPKx0sO0GnQiqXq0hPiBt
F2rI9egGkR+UNI9k+KE88Wz7kn83oKjGTbUYfqDEigefZHSDC+P2ZoCiAFR7
nN81Gu2GT28YrzlWC4Kd8sRx0nI3eLdJ6ISxCQE9QynB8GE3FLCLU/4IEAKn
8seU9+l64GK3h7DBA2Fg2S/n0dDogcz2z5N4F0WhvTFU+P2jHgi9zVrwJVAU
3GPMpdpse+COrzhR1Skx6BKjVFQM6AFiVP5HdU8MXrlamkrX9EDlqRFdh1OS
MLF5MV5ApBcafvvwyiYjCKlZ/mgv2wuee8qnem8BSEbUZH7R6IWyT0l4pdMA
4YL237jsekExeOflYMItkHGs77z6qRdeNTz5pUgoAyu3EvoeFfeCuaOkq6aZ
DMSRO40m1vSCLUvMolq9DGzkMS5fGusFp+f+h4ohspC28pSY8tJvMJDSu2Mt
dhvUfyqRqXP8hrcnekmCn27DUTAzbYjIb0i10suVvSQPWjytrCT3foPuiW6q
E8EdILBhhVOBv8FE0GPAcE8BTOc7XTaOfoM3LXsco4kqcBX+rp4j+QMXdge4
/fdVYcV9kGyU7g981u0SOIy4C27np7NahP/AegVrD1+XGoTw7Q2n2/wBxrdx
t1slNUBz7+h6vPsfCCr56OgWoQF0VfjPw/z+wDXJp4cLyxqQdu8c5Yv0P6BW
9qEMZd6DUhcmed2hP6CiVHEvR0gLvBBrhOrCH+BSUqz0jNcCGSLOMdm9P9BI
LsRteEYb2mIE3Pmp+2A195uY+6g2THyXyz2r0gfvmdlLZHJ14fwpa9of3/uA
bBFmL1c+gM5m+8eFTX1AM/cC8d41gA8RT/Mz//RB8arU0/OjBnCV7YVS1GYf
yEkLB5mfNQRRhbAXdtz9oK0zZU4ubQSH5B9aTCX6Af9zvgVVpBFU9sfRPbjz
T0/wQqBkzgiUrdML7zzuB2azwha8aGMwCimZYY7vB8vaRx9eEj8GNt0fQhez
+mFqf8va3vIxLFyp8rlQ0g9k79xIpVsfg0tBM/1BVz/o+XwmKIo2hYCe4bvd
JAOg9OnB41F5cyimJyh54z4AF/zenScmswImkrX+HP8BaMLPMqRLsoK3+4NH
nTEDsGX+V/cavzXo9X2VYSoZgJ8Ui4bWD23gKOpx+7fNAZD/3VXzZMQOzN6o
rQ+dGgSrTu14onf20P5Uivo05SCcwht/EXrJAVI0qfTV+AdBwjd3+nSLA8hR
1EzP2gzCtVD2r4pyTvAFL4+Y1HMQ9kW3ld0+OQHtWhy3cOAgeP6Uoco97wxz
7U6OPlmDcH8gt0R12BmCgliO6WYGoZjTsdU9xgW6iV5RKz0agvVbJ6zZ3m5w
c9dWzMFuCLT0own3idwhfea+/gevIQgRqVjfCXcH1zqBlIn4IbB09p/hLfAA
+tfj3B59Q0BUd0A4SvYCXju13f04OwRjrslE27kvYMm4zLFhZwioFq9TM2h4
w89bYSVUNMPAftVk3lTNB0xObsl+1hiGUhUTvqD8l9CyfMO8y2gY3ht2IJIL
r0B4mM5/z34YiDO6p2WtXwHhj7V2uZDhf/Xt62MCnteQ7ZaiP9w8DN5/j4mf
1vvC+tZfR1K5EXh8PhxvXMcPcusRlcC9EciyzmOabPIDqxivIk2jEXgwbHep
BvnDlNThToznCLzXqlAV4A2Avlc7HqzFI0DG0MOhdS0IKsmX34izj0LVnlPu
qngoeE1wczwQHoWh/Wv+r16FgmSRVaOXzCg8upS+ytkWCkW6cyQ1hqPAmLth
X2IWBplJk+9Vo0ch1nsOR5QeDgq0yyoCBGNAbNSV/konCti9gxJlzo2B2oMa
uuWCKDgzx72iSTkGJZz359xJP0B1mdV7V+YxCHQ+1fa3+QPcfDjX+f3mGPhc
1pRM1ogB/vRJHXmXf/pnfwapI+PhouCA0YOZMQgIGM+Tt/kICry2CQQrYyDw
N0+IM+8jPL+O1/dlewxYRy5cs9v4CH0s7Gp4Z8Yhj8aEg8I9FeKonLD/WMeB
OF7H41xwGlzePku/ajQOVNesmBq+/wcq6wnaMU/GAfvQ8KAfPwM8l/nCpB3G
gfnUpzNDdzJgeFqbONJ7HHR+bH8M7s6ApN8fd8STxmFXfb8pYu4TMJdKdL8a
/GevRWDChpcN6kWtpDcmx6F3+941v1vZ4JP/SKl3YRyM+n2+Cvlkw3jmmyqO
g3HIl1VREjvOhtTYzrxWugno5bW9+2UpB7qiTBddmCegMm5zjYr9M5wO32W/
wjkBgaHW8haGn8E0gDHJUWwCRhuS0zJaPgObh2UQrc4E8PSES6hHfwGdZ0cN
uIcTYGlqxTVV/wXeOr8/bWk2AffTCWQubH+BGeti9+9PJ0Anudp5RyUXaJ8o
fDP1nIAo57ezqa65cMd0cP2C7wSQl2EyFUm5kGmAb2kUMQEsVwUNLi7kQp9e
ZPrZ+Al4IeH17faFPCDW5hgrTJ2A9xEsojjePBDXKGcwyJ6AGJzOicfdPLBU
VdU9UzgBbcxdIU9t8iBOcSw8t2wCxJVfN3z0y4Pm287tulUTUKV3aekoNQ+u
o9jb2R0ToKrwkvRaVx7MfpNN5+v7l0+T5Mi7mTxI51s5VTw6Aa1x9vHU+3lg
nBljLDk7AcoX1jcnCPKB6apsJW7ln3/JU/PK5/NhMHaZ6fbOBBA6P7euocyH
GMoYr+bjCaCXod24Q5cPWoEyQ2pnJqH4ReyNvsv5QEGwLNl7fhJmT5kRODPn
Q7tndKw+9SS4p11IvMiaDwHb0nujDJPwdrVJq+5aPtyxW9IxY52EKp3aWg+2
fCCY/VC8cH0SuuzUqiT/yVWPpKkdBCdB8vrR/VP/7r/oW3TalpgEjeWw/q6r
+SCl8aHTXXoSzPzm6j4z5cNe0y1+PMVJ2BdLHw2lz4dimcWQN+qT8G6m+6oP
TT44fY9aJtGbhEYCpyoPsnzgE76lEvpoElrMG2+8Ic6Hpc8L2TQWk0DzpYQk
6d9omMUWdTbe7h++gjrn0NU8ME+CJ8yukyDi6518bigPWC8u1P/nNQkPn9Hz
Fdbnwdj7SDbuN5OQEvqIxT8vDxKJwTc/aBKacxZHoz7kgf7L+QmRyEnwoPAX
HPHIgx4nlHIrbRLe3Jj9T1I6D8IW507qsieBPGVC1OBqHtw1jXioXDgJX5a3
RHv+5kKD9hy9TtUkjBHPMc6U5IJve7jbYOMkKFhK04WG5cKtO1ifUcckCIcL
fcy3zIVy8fAo69FJmNauTnpOkwu5DDfJXx5Pgl25zxtOgy9gHTljR3hmCuLu
0t/wv/4FOC+EtQWen4JQo5ysz7ufIfVkOuADwxRwbCUWmYV8hg/j7898lpiC
i1goVVNuDmjqS5oKSE9BEf/owydPc4C8e6r6m8IUEJsy4TFL5EBArYRPle4U
4N45EhBUZoPXp8mD3y5TwGCV5NxRmwWmtmJr+IVTECwYR9T/9RMo654LOVM2
Bc6FWFPc008gKD3KfbZyCt7zyIVeE/kEeDTvLMjbp6D5u8RCbnEGxP/4PcK0
MAWv52gt7Ir/g65zrm1SLNMg2e/UG1ucBmXbitbANQ1kZw86uFzTIGWU8aws
/zS0RpDFL4qmgd3XOjklNA1SQz3Wl8pSgeQBzQ89/WkgfpqsklH5EaSzi7Jd
wqdBgMQp41llMnBG+im4xU7DgHzcX3yVZCB9YTDjmTINKp1mUg59STCkQcDy
rzVDcO9XiwtbifB8XzM2vHkaluxPTbeJJkC+wua7vFMzoDjecDdlOQaiBRvY
vp6dAX7fa9Vq/jHw4nJ8zTfyGbiw+SqKjj0GVNZk/lYwzUBFKG3YoUk0zEaH
u7ZKzkCSYU4I80IUMM0KmM07zUBNLhMXK28E6JruL/u6zwDROplUWU84hI5X
ujK/moH09KyYeM9wwB9S89MNmwFSjQvq0BEGUx22OXV5MyDf6/yq820oMN4V
ETYumYG2q4YzsWKhoNNy9OPo5wyIT3bnou730FAX2C7UPgMWLRI8eakhkF2e
tf5xaQbe8nlxPTEMgkkxR3ds6599j+Q98e5AuFwsfrr/cAaCdwL5dJUCITiv
gZr83CzgMy41PoEAcEifFnvBNQsifvqvbsj5gWjI1Rf65rPwzMHu8ttCX7A/
N0+4YzsLXPETtLKKvpDpl/8+zGUWNjVt7WfGX8Ol1/Cx0XcW8lS1ROvoXsPR
s4e1ommz4PflVxJ7wksQ2b6m2pU9CyRdn8n0pV+CndNSr23hLLif/nMLzfnA
qI3HbHrVLAQwJUSdSPpAtXEsCdXYLNC6e8rem/WCwxGjiNzZWeC2iJvTU/YC
YQPOy0qrs//6CAuFfqEn/KdTwvPyZBYCn9Lfpff3AD/lXvXVy3Pg5uMajum5
gaoIRXTL/Tn4FGXf+svJBfJZTz2aNpoDH3rHd07ELkBJucn+12IODnM2Gy+k
PIW+lZ5vgq5zoHLuPf/5XmcwyYz5HRs+BzMU+kUy2k5Q98E/6WvsHGSaVxLX
7DsC5xt387aUOfj2x/v2YbIjLBsb7ODlzUGDT9Z1l3UHeM7ATPukZQ4Ytrnr
fNTsYfAsxcjLrjlgifm0bVxoB2gPPyO+fw7oN3u5gc4OTvdOivyanYOnVpk5
JUs2EBLySVuUYB70ddqkBUusIB2fL4oAm4e356WveDaYA9HalYdMcvOQxhNL
IahlDlYj5GziyvOwSb32gWXSDPi+bxRZ35+HPzm0T/2JzKD86beeLpd5+Brr
W3vv37zN+PhTwpLnPLhxDxhUEj4GH40YU0LfecgYCme+lGECt3ndtyTC54HR
czLMYsEYOmYx6o+583CFjyvZx88IhH7zDpUXz4O00cbWXWEj+FB7Jb3nxzzY
LdW4va15BA8+4gsTt8xDiQdN2uErQ5jRr9O0n52H1ssUHI3sBnDUphKBMS+A
6cWnvHrbupCvJiC/yrEAHcQTa1kOumDWSbOfwrcAfXMLLF0rOtDeM2JIAAtQ
YdFla7mpDSmDDtdbHi5Ayd+nhoyXtUDrofawp9kCJFICb8BnTTg7KhHKa7sA
i6bNXAagCU4Tp3bCPBdgLdhM9sj6Htyej6zSi1+AaJuawu5RdTiwcntKkrYA
LP5+uaSv1CF36SHHj+wFSDaUi73Lrg50a+zBV8oXIOlGluLj+buwsFOqN9O3
AJtaqWE4NRUIIRhedaZdBKpJs8KGn3dA5m1VKhvTItz71XTxteQd2CXK0P7D
tgi5zw+5GMrkweic/XdJkUWICSrfTP15G4Qo8d/hay3CI/lMZ7t5WZiLmJb4
+mDx354aJGzlLgsJNM1Lpo8XYT7hMUn7BVkgvBRxr9FpERzWCNRjpWSg7wob
0/uwReD6O3x+uOAWBH0823krdhFq7nCJf9O6BdKsK683UhbhpOUAu74JkM1e
Mq+d/w9PnPcL+3AEnjyKxZd/LUKrQ4J827EU8OfxPGn/vQiydqTRvsZSMM1P
yeAzsgjfY/5L/dgoCXeFB30mlxeBUkiGrzpFAq5K2apkn1+Cw6HK1U+uYmAi
YckiTr0EDywSH61vi0K6mNleHcMSaEi93j54Jgrswg/Tx68vgRTnDSIqXxG4
zqN6RKe4BF4SlrwN5UJgza3YlaG+BK/H8Ne97wrBZ67bmcJ6S0AqkhjpPyUI
fOyYlrrFEsTlMdx+eFEQhK/wfH73ZgnWmxTuFX/gBxdGrlc0wUvARzwglCrF
D98Y2PTSIpeANiNYjqCODyToGAlwaUvw8tJa4rg1LyCKCwY7VUvwpC25ZmCK
G+6cXj5ndvIPL14FibEzB/jhz49vnFkGA/uQ5yEb7ND8d6rE58IyXH6zH/vi
KTuoHA09Tri8DDoRCmNWPmygvt36vVtyGQbh2HHsGyuEbTaGGcssg/djdcYQ
JVboWq+1WFVcBssbZxVCxlhAe+UH1bn7y3D/etRrTSoW0J/9bC3zbBnyI1hl
k8KZIX46U7rjxTL0xfemBIgxw9Bk+kXDt8vAv6FJ/vvHFXg0llDjFrUMCbom
38sfM4FpfxBDwddl8BMTYegdYgDbFpuWK2vLMFL12qnb+iL0SYaPce8uw15n
cWLKJi3IZZdsi50sAxd/kORvL1qg9z/FrH5+BezuGn9VjKWBevmYpz6cK3BB
JCOQaJEKBL5V+AfxrcC8Irdpqy8VJLBNJsWIrgB7gGZ6IjMVOBPwNuXLrQBb
TnyUlCElMFfXMI4brcDE5pKmyho5BArMCy5brECpi/fh/Vhy2EkhVdi3WwEn
iuASNjlyaPW+70ThtQJvivyqP2Fk4Iat1kvHrkCRcfuc2K/z0FVK75DauQKR
613h/d7EgHHeepPbtwIFxcUvqU4RQ2a0WVz56Aq4/How0/WWCLxd82u7llfg
imlZXG40IdwQlr90mmQVropSfPLuJYDoNGteMopV4Iy6rO9vRQCnqMJkGehW
AWmsE5XiE0Df+qCtEPsqXOiOCdITPQ1v8hyrH8usAu1A46B3CT6sMUX/sVdc
hecllrb+BvhgEPJjyUN9FW449c+YncYHQVuii5GGq6AkFafppIMHI9cTrWvd
V+G9lKVBxdUTJJ7RSM32dRUo21zb3yTvo+3Mceqm8lV4yRo895d8HxXmHFDb
Vq+C2O/qxPA3e+hGwQ2a4s5VoLK+YlTxbBcx/wilub22ChP86lYPX2yj4Z9Z
NPO7qzB9E6+5nXAbxVVV0wT/XYXUl6cv9odtoYDHBwFWRGtw5JV0xjtvExFY
3ggspF0DMwF/yfdEG8hkQTzQl34Nnt4TrpJLW0dV1rcDdZjWIO/0EA2n9Dp6
YWcYeMC2BuYTy9t3Xq+hPefQQBmRNTBZpODShBWks50QSC2xBh+0xO9QRC+j
YteswJmba/B3uEzm2cYScnKrDgyQWwM10Y71+a+LaOnFVmCX5hrQtb26pfJo
Hinh4Qel665B2Juxq5xdcyjr5YUg1wdrkH5pn5pGYQ6Z+7IH0T9egysPb+iO
3JxFY/56QSZOa/CnqDvDQmEaoXNmQcKua/Db5qTiVNcUSgxyDCJ0X4PWSk8z
fsMppP8+ICj75Rro5sm7k7yYRD2RP4I2QtegiGdQ8+bAOBKkbQqqjVwDF66n
Mkuu4ygsujfoQ8wanCvn+FhLM47uxq0ESab842NPcPXn/THUmMwc/Crvn31K
cKHQ5jBiv8oTrPV1DZ4IUw9+UBlGb1IlgtlL1mCrL643JmsIyfx3L7j55xo4
k8ld47IbRBXZvsGU7WtQ8cv/vsmVfpQ/xfYlrXMNblEtCLYl9KF0poZW4d41
GL25Xj1yuQ8FhZ89rzu0BuwknAK4a3+QvntIQPzCGlBIv64nuNeL7hbxZd9Y
WQOnqsJWwckeJL3S0VSx/o//a1d7Ulx7EKcJ1dmxvTVgk1syIE3vRjuKMe+u
Ea3/q+v8MTsXu9DCa4lPxSTrUFJ1n3+hrBMNVwzUy5Ouw5e1qqT6h52oVoCR
0JJmHZKDhL0pczpQ+KVU3y+s64Daeev7i9sR73zOS9Fb60A5num/R9aMWFhV
PzbIroOuQjONj18Tonm4Uql3Zx3OvVdtbDjdhI46+PE87q7DULXad8NTjai5
tPgFzmAdekLlX91gqkc/N3SS1I3WwTCAsV04pw4V3NirGH+8Dv3+TnnhknUo
JkXy+LT1OsxcDZhnMqpF5n44DwW3dRCXeFgpXFeN9KuN4vs91+Fyo6tT2uNq
pHqE/93KZx3YZkIVLxBUI2EHuYOgd+sQJq1nk6VUhU7pNT3vjFqH9N3vd8YG
cSiJo9tFv3AddLjnRT3Ofkd9V/A+9Revg1Ml7vdn73JEScfTp1e2Dtfn2PoS
9srQG+J3krqV69Dy3lHXZ6MU2cxL/tVsXwdNF6bdEYISlDFuwd/duQ69DBEq
ge+/obH+SON7vetQRVicGnz5G9JqXqlRH1oHxyT6FVOsGEnlpPqpLqzDVTF+
9SuxX9HTtF9lrcvrQMvRdUtK5CvKjT9aUF5fhyNtPC2t7kLEEqSjqrS3Ds8V
m/y1aQoRiS0J5R3CDThzM27YNy8f9fE6xd9i2QCiEaVuB8vPiJIjuRXHtgF/
RsTVU/pykMqV1mPEtQFP52znC5RyEI6M3Qjj34AA1gebt8SyUcZa/zVJtAGn
7YuI3vBnorE5Qp0y6Q1Q2NqYkyj+hOjHhd6J396AtdAqkcc3P6GQzuB5UZUN
6PMbuT2ukYFcCqVzhfQ3wOf+U92bMekoN9tutPDhBuw70A/L8qWjudR4ckHj
DeAIiLIyaUxDBhHbTvxPNuAwT1OsHC8NyT3NEuNx3QAqKcunJX4fEaUoRRV7
+Aagjks+8oOJaHu3ZHY9agOY/Ewva4omor4yQ9KK2A3gXm4mXo1MQInY5wea
HzfgCAuPeGsQjzhv39nxzt8A5m3VvxxUsegc0cpl5aINSL9YGp7sF4NWGiNl
aUs3wD60+BU1fgz6qjIR+hm3AT0OJ1VFBx8Q0vLi7m/fANKpYUVasih0lfba
vfSuDZB0bS+qiItEBH3Nz+1/b4BwTd7cLGckanpAV39mZAPEqc94BKtEIK3H
X40ElzdgYd/AKCcvDFk5zUcFntuEesEWToriYKQqHPpDh2wTrudyNq+RByP+
HdHJq1SbQHI/hveBQxDadvPlL6XfhPVoSfNXEoHI5+WVlimuTdjZdPhBvumH
HsvWr+fxbMKBhUiIhKUfkj9jS+chsAk1ZhPzDybeoXP+5WYUEpvQFvZ8SHn4
LfoQqo2HFDZBxVTFlmXLF7ndO2I/q7IJMrwCJYY+vsiAOk21R20TNmfWI+jJ
fNHVmLU4K91NKKpSvjwg9Bp9Tg4UiTbfhCkVZ13i2JeoKrfKas13E1xO6RyT
vPdC4lzH+e5+m2CToHfNf8cT5aeJ7xIEbQJW+peN3tgTpcTkvb4UsQksqcwJ
IuCBXrxKTJD5uAmNbxwosxnd0M5R30Rr+ib8JXJyp054juyeUXPpZv7jo4Xt
OQPjc/TQJrDYOm8T5O+cj2xif4Zu6ri1R1ZsAvF7qU5M1wUVdRRRX6nahEiK
UgeW+afohvKaflbtJsS513KA11PEcMtitqJlE9x8nZU3c5zRAZc23mz/Jqh5
v2GgZnFCpcf8ghI7m3BBA2PM67BD/M9tntfsb8J4hWdVgYAdytz49FP1eBN2
N0sK56JsUfQsk7IJwRbc/iSaX2Bhg1w7z5sGUm7B53SVtm1eK7SirJBNQ7sF
J4e8rCOfLJF5/eu15Etb4FJH4+7Naom0vx94FjFvwZXROplilidI+L+5qGHe
LdC4dtvBBczR5yvXhiwEt8DQeHo1p9UMXYt7xLIhsgXqgn2fBQ3MENX737mE
2BaI3K96iP/KFG08r23gU94Cu4fdCqazJihfJWX/pcUWNH1gefiXzAh1hGqL
6FlvQY0pPekrm0dovYfEkdd+C4yfTAit/TBEgg9d5gZct8Dfcn9SxPIhKrZV
+iP0dgus+k/8rizro98FfylJAragaMoqLVdHH+1sF90dC96Codazd97W3Efi
L67UB0VtgTjrB776DD1UHrJVNJ2+Bbvc8YnJYTposCtr7XvmFozUTPK8o9JB
R7SPboR/3gLn7G/SfDHaCEtuSkNFW2CujN/0OksLVeYlhUfXbAFDqlxQ+sI9
NLap2W7bsAUJhK+ONn3uIXzxsyRyLVtg9rhiOezSPSRT6fxyrWsLYoJlSN9q
aKC6DgUHxYktyLdITVgtVkMz1Cc5V2a24FvCY58aAjVEeP/r7Pb8FiRaWt9x
0b2LFMYZH6Wub4HgsnXwZWJV1Ly+oXqItw2XlYMFJCOV0KJIpn8nwTY4OqTv
lv1VROfdH9Z9It4GaRM8h2d2ikj1VONNLfJtIL/BafdYWwF1UCZyf7myDaff
rZ1hvCOP1nTuWbxm3YaDFcaJ9ObbiCKeKO0+xzZoyW5xT6nfRvdYnegJ+bbB
5k/oJxUzOdQrdOfsI/TPvsOzgv+zDNp5diQnIrMNrA99GIZlZRDtjwKfc/Lb
UDN86mHHsDTSk7u8V6K6DV+ZBlf06KTRgNb6DPnDbcjxYH6DVAFJ6woK9xpt
w0rm2f7XHxHKvO/8MtZ0G/xXhDWf7WPI1XCbgcVmGwgbk8zoim4iyif76kIe
26BZE2HJeU8SuVlJJu2+2Iafk9f4qqok0JiNx+L3V9vQuyHC7yQsgXIdj9/I
BWxD2l0nvX4WcaTogf9dO3YbFjOYDXaviqJ8Lxli+sRtyKUucgzIFEG0Pq+1
R1K2YQtvrbBEQARN+Z5ZM8/cBoGTD4uflIWRT8hZtucl2xDwQtbYJEEQlX6k
eB/Xuw0nlHJy71T40JX0e0OG/f/iB0u96UjhRW8zIrhYh7dBKGbld8MeD9LK
oanNmdqGv+lZ9x2+3kBrRZf2f2xug4t+uFqIxnWkW6Iv/3L3H38B+ibXq7jQ
z7L4iNuH29BG4pc0IsSFgn4y8raf2vm3r4sTq7BwIs7Gq49HKXbANIW83uUq
O3rfbJKfRrMDlz/YpJ7LZEM7rWnHFpd2gFJKLF5KgA3VdrLFrDHvQIRiHK2A
8jVkNMjVhs+/A6Hzi0+241lQ9IqA2LW7O9CTfwqvQ/kKCs8iSv+ksQOLyitx
QTlMKMR0mJxbewdaKd9Me5EyobcDfgsCBjsQW6kgVDF8GbnWjyaC1Q48zynR
302mR04vi0lqbHcAcTwrS75Ij+xuBj6Td9yBm2OLCqfCLyHzQlEN1ec78J35
qunPEDqkkxRM8ODtDiib5zQmZNCie/cfO47470BSCPtEkiAtukstMWIcvAN6
b4h2NippkHzAVMmTyB0QJKGvMZ6iRqKuUtauqTtAlMGyz3CbCtHene8M+7kD
xPFMCc2m5IjyLA7RVO/AIZWm1R9yckRaG5kTU7cDDxeOpK55kSFCyVtvklt3
IKwIb28YI0U7bNHiXwZ2oDg5YbRy6hzaGLP5j39kB4RsPS8saJ9DK/EylEXj
O2BMfq5gpYkEzVCsLJbP7UDLTXVG9fKzqPdYLrlxZwdc/Qj3FsuJUEcp/XmV
gx0wHJNjtpAmQq3Oa89/He/A0K20UPVmQlQ7H3/vN8EunF4+jbs5eQYV9W6c
maLchSZnBkEefgIU+SXF5i/vLsiWe1XV3cBHEoJr7e2Cu5CfN1vt1oaHRr6B
QJLoLjzdveOHHPAQZ+XI9k20C+L0hcGxz/5i37sue7ur7sJA5gxpVPcRZqRr
M66osQu/E7TjUoWOMIKh77KXtHch/NHAR47oQ+zutD5xqcEunC9OTVJ+coBN
7MaEbVvvQp/hY/cD/j3snefcZq39Lpxr+UBUmb2L3cAX14l03oWj2moDO45d
zJXkD72Qx//lcPbbXDvYWUaadIeAXfCPU+y/obqF5X40JbwVsgtZac/K3w1t
YvfYi56Qhe/Cwt2ij5p2m1gCnyZPbuwuPM59mkgcu4Hxy4R9W8zcBTHqaaYX
Z9ex3voxuu+fd4GA+8H4dvYa5q7M7xGQvwvwM5HL/e4aVqv1C7hKd6GT7SbL
jugqpmtxocm8YRf+bjbeMYxZwo4WDbhFW3Zh2sXSuGh/EUtx+Bx85tcuPF+n
63M3XMQW3JTvpf/ehbpzWpvnBRewF0H+g+PTu9B/Msyl+HcWY6Xoxwrm//nj
LHNgcZ/FGqM4U3yWd2HUPvPNyO4MRpncYHplexfof980wx1OY/8VnFkxINiD
OlpvcjfWKUxJVFv9BvEeFF111/7+dRJbKU8vPDy3B45KyQmW8pOYeK3ssziq
PZA6EPve4zSBtf5+idfHsgfflR9svZgZwwipzV+Zs+/BR0L2B9MhY9gtDSWC
ba49ULiz2EEhMYYVtVASUwrswU/T4f/42Uax+Mo0MhXYg/tW2lEthUNYz/G7
sAGZPdhnY+0kYRrCSKVsqCzl92CiJ4FGNWgQe1UsfPGt6h7wCjtFJzgOYFbZ
dUyVD/bAT0x3te5hH5Y+m5Vy99E/fwPVkW6jf7CRayEswyZ7cL341Oj3x3+w
e8k67AeWe0D8oOVjifNvTCJylkf4+R6405nc58rvwYhfnMUyI/cgeCfaKj+0
E5P5vvxTNGYPlGzIP6WLdGKee5236uL34DZG+sthqANbc4qTm0jdgyDrvAEr
vg7sjwW3yuWCPTinSJ/Q2t2Gkf9H1p5dtAe3Qqn7BCTaMKWJTTWJ0j04m6vt
WPqxFftp8ENTB7cHZN2jnPMeLViGhuqD0LY98PRtymPXbMLGQgSGmTr/8atH
6zrxqxGjb6V59KVnDwbqyz/KqzViIfIjJs2De+B7K0m7U7sBc5GytyJY2INx
a9dv3j51mBxbmNtzwn04zPrdFCFdjdUy41/YPrsP13lKnrVMVWFylx1THC/s
g5/fcf6AfxV2m0qjwYp6H3Qa5V7r91di8vgUNA9Z9qGF8g9l8yUcVn/kk9nP
tg9rp3tFyz1+YvJ7a1I6XPvwUDAku22sApNf7TBR49+HjV9FRFeKfmB3hkPz
pdE+UBOeyaz0Ksca+/Dkfkrvw+IX0vNMu2WYQo/DH8nb+4AFy+RzOP+TW9RP
hFT2QYnnfOZZ51JMoYxchV1/HyQVfHISQr9hSlGhsySu+2Bo9vOqk/hXrDkU
z+Od2z64XzHnqvldiCkFOZASeO2D48ZMOsGzf/JrdZHj1/uQK8RWIVBRgCk7
kr9eDfuXv65WzI1H+VirjQ+tTdQ+ZCq/3ts9l4+pPFnLmovZB5KQCfuep3mY
yqOOjvHkfdjrlO6VFc/FVFRDmXq+7AMfuW/lwWQO1qqAV6hesA9Zo/EBUjo5
mIqcw+22on1odflYptKSjalKqdvUf98HCgop/U8VWdhdLvLy0qZ98HE2qf9Z
9QlTOxOqnTi9DwFurTj9m+nY82a3EbP5fWAg2EgYaE3DUt8/tuBd3ocoA9OB
ykdp2NYlMTfc1j4M8BAMBAalYjG8Iwnjpw+g5eDZre94H7GqzQa2bKID+HYk
YXwuLQVbKC3IdTp3AJcfTZU/upOC3ZR9U3ma6gDM+bcaO7mTsTHdG1NsLAdQ
RPjZLSs84V89pLVdYTuAzFcJbBLb8ZjgxN/tb1wHUEdurHHjQTzma9NNpCBw
AN7GuqMb/HEY10t3bqtbB1BhoT1EeioGc8pudMo1PAAiNcYzHDcisXj7wkNX
kwP4IxbCiVcRgdUKJ/iC+QHU0zyuxNQjMFqc/YcO2wMInLwxWOAVjn3vpi3f
8DyA4uez3EybodhUDJ7sd58D6FT8plYWFYqRGi60vPY9AEyGgUxXMhQzmqsY
pg46gJNHnMlDlO8xgmNTfLH4A6heMh5v9AjCeKrvBvxNOoCwtOj43yOBmM47
carG1APY7r9w5fbtQCyT4jzb/ewDECLjeHrAEICpsH9V8Cg7gJ9uTMu9K++w
KDX8UNyfAzCpfiiLd9kX02rzFr8zeADHtgxYYNFrjFL5ZKx95B+e/onn19Ve
//uPhwIj0weQvKJ+zSPgFfYW2+4+2jwAGknji3foXmJy3509fXcPgBRIDbUq
fbBTEhvXzh8egI103mV2Kx/shfCqC8OpQ7DJCk+dfuONuXLPX5QkPwS2D/XR
HuRemHCWRWUV1SEQpAmZbrl7YhvsM08ULx6CcrvFc7s5D8yOZbJMj+kQPOmq
1jhb3TGLS8MPnt04BEOXBfdLxc8xPaLO5CKFQxgNx0tbxHPBaN+oKdxUOYT4
6qaJocinWM+p9rUatUMgVcojO7j+FFM/aZbu1jmEzJmNssCHzpjidu3kuukh
6KVdeDw+4IgRO8sGuT05hOKPAZ5nvB2x+rUqYXybQ2jwqrpxis0Rk1n6+Ybc
+RD+qoz5PnJ1wCQnSzn4Xh6C0ZewJd0HdtiekVjHN99D8Lrp7X8dZ4t9Gyl+
jvwOQSL8eRozuy0mOFDYpPr+EFh//SARO7bGrnd+trZJPARtUqN4g3ZLjAGX
kpdV9o+fyqIdgjUz7BVhrKpXxSEoyi3Q1LuYYfOqYYvqVf/4aci05D8xxUqG
XnLsNR5CbtDLgjpaU0zzwCRZvu8QRHYd3liYmWDl0g8w+qFDGKBGBVMnxthV
f83B5dFDuFJscikxzhhbvSh3MWr2EIzPq3KE9BlhgSJs7yd3DsG5mChKecAQ
2/Bk5Ck5OIRn+w/HDXkNsfu1NC0BJ4fwpc5WjP/tQ4xDk5BIkPAIyIz8SMpv
GWA1DrMvfGiOgOJpvQMavY9dLx29rHXpCIzrv4xSqt3Hwv7+KedgPIIDH/s8
kmo97FFI4077tSOwkxgbZSrQxQ5zsuwYhY/gglKkKVGhNmay+fH8utgR6KeN
bF6V0MaaJOOya6WO4PX9WsGRai0suilgxlr2CKqg+wn+iCYmNGttWH7vCO48
z+y1FriHxfGaHgXrHEGWd9IXklYNDN/VIM5Y/wh+HFU4jzzRwH4RqP4mNjmC
5LLBkc1MdcyahfeuruMRQOVR9+XXd7EuS/al6y5HwHGReIOmXxWTKGAKOHl+
BL3m8W+rBVUxoltk9f/5HIFq5AeiqTVlLO3hGrb1/gguv/uWx/JBESP5b26w
IeIIJswGX4UQKWKOS2Nu8dFHkPqkoI/aUwEDj85imeQjSGk0hRt2d7DBmEKe
sNx/8d/ynZQ+vY39iYFF1sIjWMkjfvaX4DbWHdOa+a34CAgae4sCo+WwlpgZ
1qEf//Dj7Czka2Sx7zH09BwtR8Az/VOUWFgGK4n59Kes/d/7RPH8h3qlsa8x
wlEqXUfQuf0iw+S5NJYTc5fcqf8IFN9E2irX3sLiY14RVswegXTjQy6OSYRF
x5DVqi0ewVciMSUNGYRFxCS8nFg5goE0jYXKdAwLjPl2RLRzBM2d54ZvON/E
PGIWNu4RHAOpqTK+g7Ak9iDm3ugc8zFoVd7hdpISxXRjRhM8rh2Dx8DuwJcG
EUwzxkaflPMYDD3nH8jpiGDKMW97hfiOIezPuzMa7sKYVEx5ywvsGNzH1ig/
DgliYjF3/Cmkj+Ezj3+0pbsgJhTTI58udwyxDi4BAvSCGHfMSlWT8jHYFhBp
f3gkgDHEsJRS6x+DTPl/qol4/NjFmDyXTw+PIeXvNG2EPh9GFXNTSNL4GJ4b
RxuqlfBi52J0ch89OYayMDqqL+482GF0QHq26zGkX6MhYePgxgajN0JvRfzD
l9E7++AsB8akc86o6sMxWBecUfkewY4ZUV/jk4k7BkvW73edmdmxqVDtNtmP
xyDsHvyy4hYbtuJfevZO3jHUDX3YdYtnxZwIFz4pfPuHtySVHutlwXZfMcgr
VRyDSNoznx5aFgzP88Ur1ZZjiJnXi5LPZ8Z89/KY1bqOYWJoSySIiBk76zL+
U73/GNSoCLx2m5kwSju5Q83ZY4heFDKPf3IZYzMieap/+gT4ZEb58HnpsOwh
KUoDkhOoqBjo9pe4iPHet81/SHECdewnjOV3aTHxex1LRldOINxeg+R9JDX2
ox0/0IT9BP4XOAXH+gdJn9t7xBM9QUszKWQt/j+Sw+ZkoPwSPUpElmVnO/4/
cTW7kUeEET3OwMcDaUL+P/3dTMEt0xA9Uz35oWpJ/j8HVdd/EikQPVw2XN5t
V/4/Cg+nL3/RDT1vKCJXdHP+P05/5RksYQk9RjhH4A17/j/u01cAUEsIPRxI
bGmngv4/GHmZ9FVBBz3IZ7Z72pH+P7KvQjMFTwU9nnfbBHSZ/j/UNe2/umUE
PXWHAI4Nof4/51a0Z2qGAz0ip0qgQLD+P5OjY8kH5AE9+LZvKdq3/j+wPjXe
KCABPc/GlLJzv/4/EDzdX6pkAD185t7Eps7+P+gKWH/HCv48KQYp19nd/j/P
pN6aCIf7PNYlc+kM7f4/+jfK9ys5+TyDRb37P/z+P0k7O/WuHPc8MGUHDnML
/z/eZdSXby31PN2EUSCmGv8/OdLGcqRn8zyKpJsy2Sn/P+K8Nj7Vx/E8N8Tl
RAw5/z+/ZHYM1ErwPOTjL1c/SP8/cvKWIW7b7TyQA3ppclf/P97ZINelW+s8
PSPEe6Vm/z+xEhDhahHpPD4lYQzVdP8/rqyVfaMa5zw+J/6cBIP/P3VQMB9A
S+U8PymbLTSR/z/bOgS7KqDjPEArOL5jn/8/ylPAK4sW4jxCL3Lfwrv/PxIo
E3bLut48RDOsACLY/z/s4gMcaxraPEY35iGB9P8/2OA7vlos1jykHZAhcAgA
QI+jqeHB1dI8pR8tsp8WAEBhZ+Jxpf/PPKYhykLPJABAITMevFwuyzxKSk6p
LjQAQCyx0DucxsY873LSD45DAEAxh2N+ohXDPAT4ovx5RQBA7bBnSdWqwjwY
fXPpZUcAQMq1gMRdQsI8QocUwz1LAEAMFNXQO3jBPJSbVnbtUgBAh+C3IqD7
vzw4xNrcTGIAQE2paSOlzLo8TEmryThkAEBk0F1Kqza6PGHOe7YkZgBAdequ
vvijuTyK2ByQ/GkAQPA8UpIgiLg83OxeQ6xxAEAtqZXzunS2PIEV46kLgQBA
LVXvbwbRsjzKZut2yp8AQPB7zNZMbKo8AsuBbK2hAEBu2ECiGNupPDovGGKQ
owBAID8IYAJNqTyp90RNVqcAQGyftIzrOag8iIieI+KuAEA57c3ISzamPEaq
UdD5vQBAFmsYAResojzB7bcpKdwAQMUd2JvWY5o8uHSE3IcYAUCN85wWY1uK
PEaVtDQpiQFAwEfuwIzcbDzx6h08SQMCQP55nkCSVUw8PFMeNk11AkA/E/dm
RokuPFGElmET5QJAQM7+mWjiEDyD6kc8WF4DQIhF/G9wvfA7VWOQCYHPA0An
fikjLzjSO6AFElF60QNALZ6ipXzP0Tvqp5OYc9MDQN3jN8sjadE7fuyWJ2bX
A0Bg3zZISaPQO6h1nUVL3wNAnm31PBNjzjv6h6qBFe8DQHzXZEsYV8k7oKzE
+akOBECzVGd7Op/BO+pORkGjEARA78+M8fY5wTs18ceInBIEQH+e9E/51sA7
yjXLF48WBEAffwHRmxfAO/O+0TV0HgRACRTLhPhjvTtG0d5xPi4EQGjcpPpb
grg7kHNguTcwBECjjYmzhPW3O9sV4gAxMgRAVy4zwtZrtztwWuWPIzYEQPkc
Bp6uYbY7mePrrQg+BEC9RXXQSXC0O+SFbfUBQARAGj4pvtb6szsuKO88+0EE
QMYLuJYGiLM7wmzyy+1FBEDPaPLFEqqyOwwPdBPnRwRAXA4V09E+sjtXsfVa
4EkEQDBkIzT51bE7olN3otlLBEC/WGsTe2+xO+z1+OnSTQRAEAa76kkLsTuV
vraj
                    "]]}, Annotation[#, "Charting`Private`Tag$2464#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c0198fJrJSZFVERlYyo0Lv+7Ij42vvMlOZUSkzKxWyZUVCZWRkr3yQ
7D2yZe/xsbd+/f665zn39bxez/Oc87rnXDZzB837JwgICPSJCQj+fz76vv47
63YnTvqNtUR/2TbWtmOeFSbeifuPbWzggsgOJoq6fZ/xdeJsg99cbc3cwY6b
8oUwqk5cTx6La8WXXSx86mlAy+8OHA/5eLJYxT62c2XaNLehA8dmFnbSTfEA
M3bUuRFZ1oETqDK8m9R3gHEdi00ZJXbgDL59D60/PsTKzu1gi/c7cJdbxYRl
nP5il+49oGvX68Bd5Q3P+HiKAPml9i3kKXXgxs+tnWk3IUBqwiXRrvwduD9M
m7sWpwlRbdT6BO1COw50S42tPU8gusNtJQ2ydtzuwgv+3KqTaPRN3/b5pTZc
Tq/Af50iJCiNviRlrL0N9059FFP6SoJuCbocOUS34VT3rAfso0mRpflBbjBX
G+7Ezactu1HkSGB16K4uRRvuA2Hho+sXKdCuWwUFy0orLumjmb7oZwoUFOVh
mVXYiiutOXMtE3cKFTb8Pdci14o77OUluXr+DPLSGauN4GnFtUsXG50tOoPu
TFQ5GlG24u5Ns1y6pkeFRg+8mxe6W3AdbnculGhQIxJB4pfkFi24OsEW9vG8
s0g3imxGwbsZ19YxJKXUSYcGehhns83/4ddkN1tu0yNjOv45BrlmHIU8/9Ba
FT0yi9BYmCFpxpk50XialTMg27C4Ff+gJpz9xdYfgV3n0WrHt9UVuyZcrQCn
+ZDJBeREjcPr/teEY8KtePyHv4Ceh0yuc9E04eiPoqmXGZmQz7urO3XRjTjM
i4iJMpYZnWxFuwIujbitE9PKgdIs6A2lxt57w0bcvUtnSxqXWdC7wGcHVsyN
OOVje9JlHlYU87byL0lKA461qU/y3mc2xNjYQeDg14B7sTdG2U3OjhLIJgn7
7jfgPruHVPk+ZkfJr0mJv/I04Dpm17eb5ThQ1it1stvZ9bij5fUJOwpOJPTL
nDwnpB7HYUjBe92HE+URP6M451iPe/+YXC/tkBOV+MZSzl6rx1VOnntUv8eF
arwnqF+X1uHUb66mZTPwIvnqzbOrcXW4BMYAYZ/PvKiBgJRWz70O1y7T2ulz
4wpqfclHzw11uOmCMFrt+3yo3+PphfraX7gU3s3SOwv8yOiHP6Pgl1+4b9qf
7WMiBdDoYQxT9OtfuEyX9K85MoJo0u0H84M7v3CRWmY5ijpCaMWFhJ20oxY3
OD4m0NYrjBxLz3M4fK/FZa9dxelKiqDN3SuX+8JrceGac1psKSJo7/l/XF91
anGPLK6iXJdriNg55srtoZ847xVDY0E5MfQHTyxYVPkTZ1Osb81ZKIbKbByv
cSb/xEWUqno84bmOHMzu3CJ69BPHeKujSonhBhpUOVTFbdfgXoURLyhTi6PC
+oeaAoM1OPyHz6F2UeIoVKZXN+FHDS5Wa9xEk1kCyd/MNnHzq8F5Wp56niQm
iXI5TB1v0NTgCKUs5w7fYigwseXZl61qHNEk05UpLoSsLoi70g9U487RvR2g
rEeIiYrGd+NjNe6BcBRxAZkU8t//GZnDX42jtbFwYn0ojYw7uUu4lapwceR6
8e2+cuiGSmTF+6tVOB9Cvq56vByiqSeoPkldhbvKJDZ4wlQeBbvkR9Rn4XDh
pS1fHeUVkKX6uWJorMTZbL/0COdXRIwKeBxzaCXu0QDW9zdLEbVLNjYc6Fbi
2r99MT4nrIQkuN0Gi6d+4N72Znd7wB1EfTx6JEjwA0dKmpJQ76mC6jaKSc7U
V+BKuCXfcDCoIrf5UKqldxU4c3cju5RcVTTTI8OWxlSBS+yaENdcVUMVmV/k
WG+U43bznCMzmtTRAwP7QGr7Ulzv4GWiW01aqMQ60O309VJccLGforywNiJz
T7OhOC7BgUfpiQdx2igjcUKZOLgEJ+yUknfpiQ5amtSl3M0qxt1bWi79DHro
1taTw81nxTjvzI8TuSV66B1J2NIaVoxTTXWSFhHVRwK8zS2LrUW4bKNNnmYR
A/TYHt79WS7EDd1yFm/9zwhVvTT2GC4sxG1wLCz/HTFCZ8Nc7AY8CnFevg6H
DA7GKC8/X7X7dCGu3+Z9rkDcXbS1y32mnr8AhxUeDIxSmCJXX+qQbLs8XEI9
M3divzlqiuR/mSmWh5Pyc3b6IWGBmL7ccUg7+o67/2L3w1CiBapo8Psv+d13
nEP2qjays0R/T+9Rvc/KxWk0+zW1clgh9UsMBBHPcnGheSYstNFWKEnoGj4E
y8XVSxDG5VI+QL5fBpNo43Nwb82XGTn/PkBkwj/ZDgazcCtqSRsGJ6xRutYR
4ZZ1Fq5Uazqw9q01uuN8Y2Jl/xtuW41DEE9rg96VZyZPMH7DDRsZ3qoVskU0
CpEcTYYZuPILRJ+Jgu0Rk9F9ztjBL7jVp3pU/uuOKFHRSpfO7AtuWsKecU/P
CbFff/A6ZPYzTrEiIjYd54SunH00/2ozFceQ/XF8K+oJkqi3zXI6k4L7fvTw
Qq7JM1RZYDe6HJmMWzP58cC7/xmSSbanesSUjMsTE/58pOWMlDweO5rwfMJR
2jJFXtN6jr5bzVnH+CXispLvjqk/dUEl0gstwWEJuLa4FcprxK6o6uKSwKvE
D7gZvycBMtGuqKNrdd2xJA53+AblC9e7oRW046q89B73Cvf1lJm6J9IToGQ4
+hqM8/iUP79H6YOspqgG56uDcHlvap6feOKDnONoE38PBeBeRvXVKQ/5oEgS
Jq5cqte43srMse48X5T6Q8u2bsUT5/NWJU3o5StUw2u0+ZHdDSfjc4OoYPcV
Go8yd3fRfY6TDX4uOfPUH2HDE+cN3B1wTl+WZCOfvUas3ZNhOnlsuOdH2mM9
sW+RbIayUeKmEhh/vEIfeCUAfb385vT8FWM4UcWj9KQyAA2YfbE6o2AHsDOi
xY4PRE5eYrSf/m1imEeP6hmPYFRJ5fHImjEYWK/MMkVyhyPB1F6H02MhkP5k
evL263CkfvGcZH9XKNhqhF/ZnAtHVbkO0m4x4cAX+3zXJC8CJQ2wqlVzvAcp
jftChfeiUD+Hamc4STSQySycN26PQtT2LtqW89Hw3aVkQFvmPfI+0WVImhML
Z9H9M3aC0cicz/eBqkQC8N/4ryOROxbFPctZYGFOBO6AUD3xb7GoGzdkh/+b
CJw11ZPB1+IQ+xXGskbzJDizhi2k3olH4ZVOVbY8ydBvxFTB/iEBOc1ytObl
fwaihMh0TbtPKJiyLJiJ8wv4ju0HCjV+QhnC6up+77/ApxPuBetcyWjCzb1b
x+UrhDF8WVWeS0aa1L0DuygduHnuOzn7piJ7MZt4s9x0+Nkg/TZ2NRUFGBLe
bWLLgJH0toztu59RTSr/WDxxJkieD4Ng6S/omrj/DGr6Bl+J14YCONOQ+r2L
aV8ls8DE8ai3JzUN2frmPaLOygIzwtH2H1zpKLV1dGk8JBsoye+pp4pkIIrv
8S41V3Kh/MHHVH3bb8hVfvPlffx38Izpu+Bfloui141uDvDnwQaJ+N2rjN9R
wcefeBWbPKilOPbbcvuOlvfCzURn8uDTGksKm0IeMs0WliUazgcDTlyy4nY+
8jCKPXC+UABcgZJVNg8LUBwZYcGCbgEsHz13ZhopQN3mHZe7OguA0MRH1ait
ECmccyD5VF8IU3ePM8m7ipFF7e9KupNFMF/6+tEtwxLk5Yiev5Epgi/PxCdc
pktQafPpOYcfRWDbR79veLIMXfX61ojyi8EstL6g0LYCKfLT+eThi0Fdjvmz
JNUPdH/QTYJLoAQm3Bu7zQt/oERR5czT6SUgIG1uNUeJQ2fn54OGE0uB7bL+
p9itKiTwXkNefbgUXqmTvgjTrUZ3ZEuPfl4oA5a/w2X5pdXIL+GNfWZkGXAF
cWml+9egbQ1uddeAclgtPn37161aRPs3mGylvhyEvB5ecsutRULftqvMTlYA
tt8YWMf1Cz0iqRNW8qqAaKbxYAOmOjRcZkl73vkHRDBd4ObgakB7D1qaA/N/
AP9skfb13AbEQC/q9xf/A/xFPm7cwxrRfw5EWzM2lWDgVONww6wJ1XAk/y40
w4HQPWJdys4WNNpBHsL7EQfQdta8/VkrOvBwvJ0wjAP5FHMnKZY2xGjLalzD
VwU/Q14jb9d2pF232pL+pQpil2TNngp3IvoQb7Ge2ipYuFhCux7WiX7r0SYe
T1SBbZnP7XebnUhv/rqD1qVqOF30Gq9c1YUMKT3PHkVXQ1S7l+HtJz2IqZfK
lbuoGi79PbClnOlBwwmfJjR6qkHIEiJ0jHrRPcFf+V+oa8DwK9fkN9XfyEyT
Ulf9bQ1c8P1SeUarH7EzJVa6fq2BSyTuQWFD/WhiUpD7868auJjgYUfzYABZ
PtPa3SP8CXHrA2sarwfRw5i4uBTXn3DK91RX4cowsh/l+bNtUwuSze7c86Lj
SPBr2W22gFr4E4y3dYkaR3gHlVzltFq4R5USzr07jhwJH3snTdVCrOSYzOna
CfT0cjHHnbu/4KJN0Quj51NIbFkx6KnbLzincFH++sIU2i4c3EyM/QWC+0Th
USbT6Pnt418bvb9A1ivKnVFzBrlayz9MUKsD3WX67WG9OSR5ra+j3rYOuHe/
MbiMzaHDg4fi6wF18Eb1zy9a23nk8S6I4nZ9HajW25u+CVpAXrnd3/BQD54J
NG+NN5fQ622zNVnhBiD1utcrfnMN4X1jdR+oNoBNG0eqcvga0j/bWR7wqAE4
WZ97i66soStXpfw7PzVA+0AxfV7mOmozY2EyoWkE5sSAj85oE91Y1fHyEWiE
QY6cIIO0TZTk/m76851G8CFTkLCi20KO0Yc5Sz6N8CZmXvXKxhaiax2Uc91o
hPDG5Ma0lh3kYUiTkUDVBDThK0kcSrtoZlaJqpqvCYzpwJa3YRcVnygdILVs
Avf4wP9Ote0hw5vR9lE9TSAwgo1k7R+gpBStmNzCZvhNbfRUyYkAyIUDj7o7
m+GReLaUagMBOFXWmO8sNwNdUX4TDSshyA4I8yOuFhj7uE9A1ksIM2eoa5rf
t0BeaTR5mg4R/PfhNvdqXgv4NutE/SojghLel0E07S1wqlykfoONGN7Krega
kLbCXzNpz6xtYrjq2rI487wVgrYMnLrKSCCKlFiDIrIVtmVlV3KESeE4UrKI
P7cV7tmsNu9nkEJ7TobX07lW4PXI+XLqMxk4Tb+hP2HQBp+4XZ6+K6GAUnV5
YJZoB7fn5Klxj6jAmk9ZPUm/HQa7b2munKYGRhINM47n7SAZkzZI9ogaXMuN
fXkL2oGCX/iVHudZYKYtm2Q81wFjFUn2qcU04EyA2RpzdUD6tM+NATZaaFvG
bSaIdUDG/PLth8G04Nnw6ySbdgeoG5L2N9nTwahHJzd3WAecE18s5lVjgOs2
2rkPkzogO/x3Q1ELAwTr993MyOkAo28WemfVzgG6NqLE39YBj8Wu4uwNzkPi
3JzNtVOd0MHM5ZEQyQjbvTabTxk7ofeq15wVHxOo/VxxL+LtBIGfc8f+v5jg
OGHznbhiJ5yx/ch9jpgZTLQIcuFVJ0iHtNKlfLsEJVK+N70jOyHbI+oepxAr
UAuQVNekdEJ+fafAdiArVJFRdsnXdEJQgeNBuRIbsFae21T+2wnTVqub7H/Y
4UVmnPu7M10Q9I07j/sOB3TEMJ9sZ+4CrZz9mIBiDvB6wsGgeasLcMnteUmx
l2GMR/CmvksX/CodiYh254KbDHlVsW+6IOf+DAf9IReEEokpDUV3gYn+ZU9L
T26QGpUwvFfUBfP1J6NKAnkgKULB3XKjC4RpJe9RNF+BXa9G4i8nusF2ov5w
1pwP1O1V3s2e7QZPirQV1mM+IFDSTLQW6oYsnovLeMQPZsd3qx7bdUOghcaC
2JIgnGm7Vp/t1g0vyMo6XO4IQVkCedvS2264+6sOF5UkBDRY4dDDL91wVXcr
lFdTGGrcKHdM/3TDnZqojJZmEbBXnjhKXO4Gv9C8dyyC14CRqYR45KAbIrQ1
Cd0jr4FTmQWNwfkeGFzQqPC7Lwrse2X8Gho9IPaWdYyU/Tq0NYSKhpj0gMc2
l9Dq++vgGmMl2WrXAwa2fhg6cwO6btAoKQX0QMQlclEF4pvg4/zIUvpnD6xu
cL63p5KAiY1z8cJivTBLGFkelo0g+OfyJwfZXnBJmI17qg4gEfEzLUujF4pu
BallbAGEizgU8dr3gla/2ArvZymQcazrZPvaC7XHv31VqWRgRepDv0lhL+hH
/+rxt5eBOGqnPwk/e//t1/5yfrsMrOcwL18Y64U/L/EKNDGykLLylIzmwm+4
2l5eQSYjD+qVd6jUuX9Dr3oCM1mePBy+Y2UIFvsNVI85jDUvK4A2fwsHheZv
ODaPFtmhug3EthxwIvA3dD2qWR0hVgLL+c5n64e/IUts0rHrsSrw5v2umaPo
g1VcYMtbMjVYcR2i+nO+D9T12S4qpaiBC+V0erNoHzxyMl67OPEfBAvujqTa
9oGJCmOejawGaO0eXol37QN+Mich+Q8acL6a8EXYmz6wPTZemtzWgBTNUzSe
qX1QbHwBF/ldE0qesSjoDffBwGhVZR2mDR6II0J1oQ/eKp3cbf6sDTKkPGOy
u31Q7R8oMkGlA60xwq5CdP1AVut1ZL2gAxPlctnkKv3gcUKImLFMDyhP2DBU
lPdD7x9a1v1WI+hscrDIa+yH73+7dzWMjeF9xNPctL5+eHOaj/LFsjGwcXre
idroh4bJUUqr8/fgumKYpz3fADBQUtZdVTKFA+r3zZbiA/CoJqdL/4MpVA3E
nTe6PQD2x2OPudZMQdkmNe+2xQCcyshjqvtoBqbBxTOs8QNguk59+uisBXDq
VVw7lz4ALMFpMYxPLGDhUrXX6eIBWDex6bv42wKefW9i3O8agGXZDw0bnywh
oGdErZtiENIFqmPWNaygkJG4+JXrIIicvtmwwWQNLBT4gcy3g1DjpZemlGkN
/ntDh50xgxDiox/6AbMB/f58GZbiQWD7+TP7mY0tHEZZtBVtDELUkm9f2rI9
3H/139rwiSH46sC7EvPeAdqeStIR0QxB0RBlmA/bY0jSojX8T2gIYip7hJW7
H4Pc2Z/Ts7ZDQNBq8Vhe1QmyCHLIzrgPgaH5Q9XUXCdgwMfxiQYOgeJD7Vvk
DE9grs3J0St9CMivB82emn0CQUHsR+dnhuDQJFqeIuUZdJP60N0xGYanuq+J
KYNc4NaO3Y3H9sMQzam1GkvnCqkzBobvPYahgkVzv++jKzj/Ek6aiB8GxZV2
74hKN2D0Hedz6x8GXf5oS30WT/B1alX7NDsM+kJTbkU/PGHJrNSxfnsY6L6f
b+U0fQmVUmHFtPQj0Cijpi2m5wXmx1Ky3zRG4JNw5+FeiTc0L1+16jIdge+P
VVeS6H1AdOT8212HEbj1zJSB+KkPkFTg2+SCR8DbhMT5wnVfyHBJMhxpGoFV
+jpriQ4/WNv863hGbhTeMRpI8Zi/gew6RCusOQo/ltiGDHrfgHWMR4GW6ShU
yY0MPrrzFqYkD7Zj3EehZ8s3S1wiAPp9tt04CkeBOO/XMqdwEFRRL7+6yfUH
HH0+WfFLhYLHBB+3kegf+LR30D30NhQkCqwbPGT+QIto1HFCTygU6M1R/Lz3
B5wVNCMs7cIgLXEyRDX6D4gLlxxxfQsHRYZlFWHiMSgZhheBJlHA9TIoQebU
GFxSijWlLY+Ck3N8K1o0Y7D+KutL5bn3UFNqHeLMOgZUDZV2nj3v4dbduc7y
W2Mwv9WzHW4UA0Kpk7oKz8aALoknezExHs6JDJoazYzBYAVj2WOnT6AoYPeB
eGUMdGbvKBgXfoIXVwj6s7bGwOYVUW3m7ifoZ+f6j+DkONRVlRqaeiVDHK0T
9pljHEIywhifR6TAxS1yxlXTcTA+4CxVrvkMKmsfdGIejsPiyNWsu2RfwH1Z
MEz68ThkJBFKmKh9gZFpHbLIl+MwqkV2mnLwCyT+/rR9M3EcbjqeHz9a+Qqs
JeLdPkPjYKuzKXuTJAPUC1rOXJ0cBz6lKL9AhQzwyjW507swDmrRRX5c/hkw
nvaqmnt/HCxqsY6TRJmQHNuZ03J+Au4su7hwrWdCV5Tl4jPWCVAxtGZ+xvcN
iMJ3uC7xTMAQjbRVjsU3sAxgTnS8MQF/HtK8Lu34Bpxuj4IYdCcgw2jBZCk+
C3SfH9bj7k5ACRcfl2lzFvg/CSF6dH8Cmpz2Lj3cy4IZm0LX8qf/6qemFSk1
soHhoWKRpfsE3GMZH4l0zYbblkNrp/0m4KcwjVtAcjakGRM+Mo2YgOPx3JiY
5Wzo149MJY+fAEPaxJqP1DlApsM9lpc8AdeNSdTXhHPgpkYZk3HGBAh/kbd9
pZEDj1RV9U7mTcDd4qiP2g45EKc0Fp5dOgFVl3506QXmQJP8kza96gm4+DtK
883nHLiCYuUzOibg/NGFp/o9OTBbJJsq2D8B/4VONIfO5UCq4MqJwj8TcIE4
O2FtPwfM0mLMJGYn4MS1uDvlJ3OBhU22CrcyAZTBb6ZPn86FodhlFvntCYjh
NJq0p82FGJoYj6ajCZBRpq8aPp8L2oEyw/+dnISU4XohXeZcOEu8LNFLOQnO
OjcvD7LmQpt7dKwh3STcYLD5+YAjFwK2pHf/ME1C2gNqp+PLuXDbfkn3Psck
qA53tyVw5gLx7PvChSuT8KfpXb78P1xtIk33WGQS7hbpim3/43v2LzptiU8C
cYR7ag5bLkhqvO90lZ6EZ2sGQU4subDbKCVEoDQJEdeo8oExFwplFoNfqU/C
OBnLhfP0ueBUHrVMoT8J7W9ndw/P5IKgqJRKqMkkhJufrlslzYWlbwsZ9A8m
gUHAzmDqbw6kc0aRx9tPguUJRzbKlRywSoSHrM6TMO2ndMFoMAc4zi3UffaY
hHMrLuO9tTkwFhLJyfdqEp6zxPl6Z+VAAhn45QZNwmjQoINFZA4Yes9PiEVO
grS/gau3Sw70OKEkqZRJsGM6vBiIciBsce74V8YkHHgkXfdjyQE1y4i7ynmT
IL982qbnMBvqdeYYdasnITd/cTimIBv82sJdhhom4cXnoFvMwdkgdRvrN+2Y
BNfAyY3zVtlQdjM8yubPJBRtMP+MPZsN2Uy3qL2PJoFw53PlL70ssImcsSc5
OQXp2Eg+KVcW8JwOaw2knAKBh7ZOpze+QfLxdMB7pik4Vdk8+e7tN3g/HnLy
m/gUvKHDzwWmZ4KWoYSlsPQUlD+VMKFzyATq7qmaIsUpcMgMECq6lgkBteJe
1XpTcLM0LsGxLAM8vk7u/342BTR55//uVqaDpd0NPGHeFBzol2d8yfoKynqn
gk+WTkH139eVZvZfQUT6Dx951RToVcZ9nBb4CgT0rx9Qt00BrVDwC6ucLxBf
8XuUZWEK7Ls6KplyPkPXKedWSfZp0OHZ+aCZkwKlW0o2wDsNSYYaBTMOKZD0
h5lcVmga8jo/X84SSgH7/F9yd9A0ULzi6JjOSwYKI/oKfcNp0PUl4Qku+wTS
GQUZz8KnwSDy++pQwUfgiXyj6BI7Dc5nzEfcpD7CGU/jGfekaWBLrEcErYkw
rEHM7pc9DSXWb5Sb5xLgxZ5WbHjTv3mDgnTLfB8gV3Hjdc6JGUjoGzQJn4yB
aJF6znzyGXBg8UN3X8aA58X4n0XUMzBy8/sX6YsxoIKX+fuDZQbSHZquGRtE
w2x0uHOLxAwoKRnaro1FAcus8P15pxmov+7M3MsZAXqWe8t+rv/wz+Unb1vC
IXS8ypnVZwbypFb23j4NB8Lh/97ohc1A4h+1j48awmCqwy7zV84M5LjN1Dm+
DAVmNTFRs+IZWFQLEtYTCgXd5sOKw8oZyPJUnl+vDYH6X4Ft19pmIPCGiFlv
ZDBklKWvfVqaAYP3pcm2GkEwecPRFducgW2fUxee1AXCxcKbRAMHM9A3eLui
HguEdzn1dNSnZoGIllxK9loAPE6dvuHJOwv5TnsUPTffwPVgNk9Dq1lwK/Sz
z0zzA4dT8yTbdrNgx7v/MAr8IO1NbkjYs1lYFbHhvN/vCxd84VOD3yzw9079
iaPyhcPnd2uvp8yC7mPJ6eQIbxDbuqzalTEL6rTEbsc3vcHeaanXLm8Wkqta
blCMecEfW7fZ1OpZsF3eHTx3zQtqzGIpaMdmYUjg10ZmvwccjJpGZM/OQqWK
9cu9Wx4gasxz8c7qLDD8dLGRSnWHz7rF/N7Hs7Doadjxxs0N3ij3qq9enAP6
B/rCOcouoCp2NrrZYA4e7Afp0j98BrkcJ0ymTeegYvSi98LRU6Ch2eD6+2AO
2tirjIujnkL/Sk+RiPMcxCtm+zA0PwHztJjfseFz8NJTYpNYxQl+vX+bmB87
9+8f563zHe8IPK9crVqT5mBAxm+ULtoRls2Mtwly5uC9d83lybnH8IKJleFh
8xywFVbSJIADDJGfHfXumoO7b4Ymm5LtAe0SfokfmINGxrfmG2T2QNQ7KdY+
OwdmkaQvj0dsITj4q8514nm4ZTNNGpJuDamEglHE2DxoUYVMN5dbASn+0l0W
uXkQ+cqOlStagfUoNedN5Xl4dfY+01TffRAsXy+wMZiH4Mr+9yWHllD2tKin
69k8bCrhVDRMLIDZ4uuHJfd5sHjMb4I/NAcvjRhLEr95eFshmOfywRzkBVw3
xcPn4eKxYxjXuBl0zGJ0n7LnIftUE8f6S1O49ltguKxwHp5Wy5Ev8pnC+9pL
qT0V83CtvJCHJt8EjD4RipI1zwOZblEO75N7MGP4S8thdh78Ga5s8pw3hsNW
lQiMdQGK3wfIDc/pQe5/wgqr3AtAnls57mipB/c76feSBBdgRyXMf3hCF9p6
Ru8RwwI8OVSK35zVgaShx1ea7y5AhNElh7iz2qB9V2fE/f4CaNUqxEolawH5
H/FQAbsF8Ndwr7gjpgVOEye2w9wX4Nzqz8965pogPx9ZrR+/AO6S7YYHv9Vh
39rlKUXKAhSeYKy2clGH7KW73BUZC9BlUXH2N7M6nMdzvbtUtgBTMbFjvANq
sLBdoj/TvwD279iaRqVUIJh4ZPUJwyK4L3yvl8+7DTL+1cmcLItAH6izLy9w
G3ZIv+j0cS4CdUe2BVuWApieciiXEFuEUKQTw5cvD9doCF8Tai9CZyl/7uKo
LMxFTIvnGy3Cz0Ore2yPZeEDfdOSpcUiPH/9aPoHkSyQXIjQbHBaBC92wY1t
YRnov8TJEhK2CLfFjN6QpUtB0CfyTqnYReiLd3SkUZECaY4V3/WkRaBZNWOQ
mQDI4Cqe18ldhAY/4jNSPgjc+ZUKL7YvwutfViy7K5IglMP/sO33InxUM7Em
1JKEaSEaJq/RRXhFbpNjXyYBaqJDXpPLi2AECcFXIsSBTdJOJYNyCfwVrB2v
Wd8Ac/FH7DfplkBtQym4av46pN64v/uLaQmuPA62oLS9Dlyid1PHryxBXrRF
Y+oLMbjCr3p4XmkJnqDvZUq518CGT6nri/oSoGKFAEm5a/CNVz5NVH8J6kJp
SDwGRUCQC9NWf7AEN4SUJipOi4DoJf5vr18tgaLHxfE/74TgGTOvD/27JVBN
Pd93KCIERUyc+imRS1CQF5txrkAQxM8zE+NSlmBjsU8z00gA0NnTxtvVS3BZ
tNNlv5cPbhMtn7p/vAR/ibrqB6244Q3h/Pj6yWUo8xB9pjLDBU1/p4q9Ti8D
G4u+xcuHXKByOGzx4eIyWO/mky8/5QT1rZbyboll+KH1V0HnGweEbTSEmcks
w+W5u3a3pDiga632warSMkR5+w4+/c0OOisVtKcMliHjs+Gpr+TsYDj7zUbm
+TIc/W7irnzLCvHTadIdnsvgGMO4PCjACsOTqefu+S9DhYLAo97MS2Ay9uGn
S9QynFDwiXTUYgHLgSCm7/nL4MNqwTzVygR2zbbNl/DLcBvfSCRlcg76JcLH
+HaWodohXUp1lgHkMoq3bhwvQ/YjLL3akQEY355gVadcASmvJ4Q57+ihTiHm
qRfPClz4THZfc4wWhIt+vA0SXIHtZ0mtqq608IFzMjHm+gp8zOF9o81AC0+I
BRpz5VbgtTqFrKE2DbDW/GQeN10BciMzN4FZaggUnhdZfrACn6/9iLUOpYbt
pDOKe/YrwHaLeMxCkhpaXho4nfVYgSiFu797rlKBC7ZaJx27AgZPx6a/4yih
q4TxcXLnCkycJbqV7EQGGI/Uq+z+FVD9nBN4aYsU0qLvx5X9WQFKxYk9VldS
eOmcW9u1vAKGUnW/3QNJ4KqowgUiilUgmXshBU3EEJ1iI0B1dhWkdnY0fEyI
4QRtmCzT+VUQVF8Vn98mgv61IbtrXKugFkM+ss1HBK9yHGssZFbBTuZB1mIW
IeBZovsclFYh+KHROS4tQjAOrlhyU18F6ybBxyL7BCBiR3ou8t4qFM9/qo1X
JYDRKwk2ta6rwFYTyG9/9hjd/NJAx5m/CgLpng4pYXtoK22crrFsFeRlLoA1
0R7Ky9yns6tZhY5G4ROKL3bR1e9X6Qs7V0H2fO1pYpsdxFoRSi+PX4VJs3St
AqctNFKZTj+/swrM5Y2sVgebKK66hv7d31Wg0bN4nuO/iQIs9gOsSfGw/oDD
tj11AxE/uhqYx4CH7dI++dqjNWS+cDPQjxEPf8O25nJi11C1jXygLgse1Nx4
BBturCFP+3uB+5x4OOMIgWqueLT7JDRQRgwPGlOnLcYEVpDu1odAOnE8lKLn
9/f8l1Ghc3rgzC08ZF2++F/JxBJycqkJDJDDgxitMEdf6iJa8twM7NLCQ/BU
xF83jXl0h4AwKFUPD9R7lddTa+dQuvfpIGcjPFwUmh0YkphDVn5cQYwW/3Cp
SI6Y0Cwae6sfZO6EB0Ge4MnWW9MInbofJOqMh5XlzwzpdVMoIcgxiMQVDw3e
A8/ptaaQYUhAUIb3P7/MbTsPn0yinsiKoPVQPFgsvNL07BhHIgyNQbWReBAX
UztvaTeOwqJ7g97H4MFV8vtlR8pxpBa3EiSRhIfCdk6bTvUx1PCR9Z1PDh6U
W5qafk+MIC42/nfa+XiYH6Y3j7w1gl4li7/jKsYDz5v0vpXYYSTzWfNdU+U/
/Rb8tldMhtCPDL93NG14qBasCEw9O4BypzizUjrxUMXVYKgb0o9SWepbRHvx
8D3qglMWVT8KCien1BvGg3UCdzXd+T5k6BocEL/wL8/cMS59hV6kViCYcXUF
DzHy1s41fT1IeqWj8ccaHnKoF0JsbHoQjzkt+dguHh7Y7eUox3ajbaWY15dJ
16B3XTz41JkutOAr/rWQYg1iz2reE8ntRCM/BusUzqzB4guhQyntTlQrzEzy
iH4NquxMb6x86kDhF5L9sjjWoOGUWcLf1DYkMJ/pfV1qDVzqaC2+EjYhdg7V
T/Wya0D1l+vPC9dGRH93pUr/9hp8Vm0nIt9uQIcdQgRuamvQFG7odXWrHjWV
FHrijNcg76PJjxM0dahyXTdR3XQN5K5PDih9/IW+X939MW6xBlJnX92eFviF
YpIkjohs1oCvkHV2TrsWWb3BuSm6rMGZgQybP2U1yLDGNH7AfQ00+OzdfA1q
kOohYbm11xp0hn74wLZfjUQfy+0HvV6D8OuLAhzS1eiEfuOLzqg1aM82CtFo
wqFE7u5nhnlrEPqEMT90vwz1XyL4OlC4BpqrL4dPO5YhmvP8/fql//wzbczd
XihFr8heS+hVrYHgyipr+VQJsp2X+KvVtgbd4iv+PLtF6Mv4A6HuzjW4GxqI
0fsWobGBSDPN3jXYM+3O1qUuQtpNKz/Vh9cgrpTrRZpwIZLMTH6jurAG2pG3
PykF56OnKe2lLctroE4Y9vjDlXyUHX+4oLy2BiFEgSqLDXmIPUhX9c7uGrTG
35zTPpWHKOwoaG6TrMPNNYElxS+5qF/AKV6KfR1C4o3u5Rt8QzTcH1twnOtQ
QjcRJtKYiVQutRwh3nVQP0GkFi6ZiXBUXKaY0Dq0oYATpTwZ6At+4LIEWofC
l0s9jBxpaGyORLdUeh2wDPUvtGlfEeP4tdc35ddhtOVm4EvBryi48938dZV1
CMC5jnrKf0HP8qSzrxmuw/QzwxetQakoO8P+T97ddXjVtjN15nIqmkuOpxYx
WwfYEBS1+pGCjCO2nIQerkNcWjvf1e1kJPc0/Qa/8zqcehi5s+v5CdFcP1vN
Fb4OZ3ROB2U0JaCtneLZtah1wGN4HRquBNRfeu/Mj9h1qA+xdSN99QElYN+M
tD6tA7FK4C9l1XjEI397+2XuOnSwzp0QPhmLTpGuXFQuWIfgsEbYco1BKw2R
sgwl61AlYi1auBGN8lUmQr/h1uGFtkXezPJ7hLQ9+Aba/vHJjjz0iaIQG8Nl
zdSudSD4PHpXKiQSEfc3vXD4vQ5DTUOp6cyRqNHofN3J0XUYiTqv2ygdgbQt
8k1Fltch0tuEq+VzGLJ2mo8KPLUBzEq9z56nvkOqoqEVulQbsMzLJ55H8A4J
bV+fZKPdgBQeleZnpkFoy8VPqIRxA9xSeb8pXQlEXt6Xmqd4N6B1/m4G0/Qb
ZCFbt5bDvwEdjwqYwozeIIWTdufdhDdg6Y+G03HPa3Tqbdn9s+IbEJxXF/qy
wx+9D9UhQIobMHxuRtpqzg+5aB5ykatswMAb9d2Jp37ImC5Ftee/DXD/s/Rn
hMgPscXg46z1NsCsh+/5OV5f9O1joFi01QaA2KWXV0K8UXV2tTXebwPssD/J
Tzw90E3eo1zXNxtg4p0xoDDjjnJTbu4QB23A9zDiG3wa7igpJsf3QsQG1Dad
spkTdEOePgkfZD5twITFkOk7Khe0fdg/0ZK6AbiWFXap4BfI/jkdr17aBswM
1pEGU71Ad20DC21yNmBN8UfRrwvP0S1dl7bIHxtQSLW2cUv5GSroKKC7VL0B
ZO9XmE1GnqKrynjD9Np/+Zrvc5Q4PkVMUg9mfzRvwHytosp40hO0z6tDMDuw
AWMrgo9GzzmhkiMhEfHtDfhE7fRbHWePhF7Yvvi5twFfWzb9v7Hao7T1r5Wq
RxvQ/nGhXOKVHYqeZVE2J96ETy+/nsrSs0XOnZSWgTSbQKJMsizIao1WlBUz
6Bk24cePSQLL2EfIqs4X//HCJrTmPwn7j/4R0infdy9g3YSyxCcm9PQPkejn
uagRgU04eSYlZ0rECn27dHn4gcgmRJkvxhtV3UeX40zY18U24fmRuBub+n1E
G/I7mwTbhFug9M3a2RKtv6itF1TehGZDy+sFw+YoVyVpz/vBJjwc9uGcIzFF
HaE6Yvo2m9A0pxpWYmiC1nooHAUcNmEtndblbeY9JHL32dyg8yYoMrOpBOvf
RYV2d/qu+W/CkDbZzsiIIfr9/S8NRcA//c4iddW3DdH2VoHa2LtN6F6RU1wq
MEA3PS/VBUVtQha1bURLjD4qC94smE7dhGOju3ZdfrpoqCsdX562CS2JkWcJ
SXXRIYPJ1fBvm7CAL8heCdRB2MfGFFSwCUwjNU2NCdqoKicxPPrnJrga6KfO
/NFEYxtabXb1m/A+/LjE0VkTEd4kp5Br/sev9CS6Q6WJZKqeeOO7NkHZIf9s
zm0N9KtD8bHSxCbY2hjlzaX8h2bojjMvzfzrh41ksW6oIRKD/Nmt+U3g9l8w
FVVQQ4rjzCbJa//ykizmi91RQU1r66oHBFuQHP+r9cKrO2hRLO1tJ/EWcA4d
hC7jlRCl691fX8m24I/NZdEjEyWkeqLhljb1FixO84q/ua2IOmgS+LIubcHa
1N3vNhIKCK+r+cCXYws4TNRIJSrl0dl40hQD7n/3SfGylXLySJPDiZFEcAuy
XYiFvhnIod5rt8lN0BZ8xEmJB3ySQdvPD+XEZLZAp0eyzFFcBjFUfPc6pbAF
bmz3fid2SyN9uYu7xapbYM370zT6jDQa1F6bob67BbJPsPF7koCk9UREe023
wGksP+1kKEJpBk+8Yy234K02s6/+HIac720xsdtugSsVk1Jeyi1E83BP/Zrb
Fsg4eGdflJVALtYSiTueW6B0s8edNF8cjdm6LZb7bMH7K/frybjEUbbj0Su5
gC3ojKm2PkV/Eym5EZbrxG4BxbQBkSr9dZTrIUPGmLAFFj9luTk/iCEGL1+d
0aQt6KvXOY7iFENTfifxVmlbYNR65gK5lCjyCibnfFG8BRcjrU+Uhomgkk9n
Q+J6/82nC74SKSGILqVqDt8b2IJLaYNKECKA/L9E8HKMbMFIi5Ll+1l+pJ1J
X5s5tQW3aucsd5OvInzBhb2KjS0QKfW54SRzBekVGyp47/zL77j3m2keL6os
jY+QP9gCWzbTgPucvCioklmg7cQ2yHSrXnCg40E8DWwWf85ug9rwZsYPOi4U
0mSem0K/DaGfuMZj4jnRdkvK0YML25DiklZKycmJajs5Y/Cs29CsyvPlFVxG
pkO8rYRC28CRqfpCKowdRa8I37istg3V2s8cG8UvofB00tSvGtsgmZnQOB7L
goItR6j5dLZhyin0+OoRM/IffLMgbLwNWs8MWxlbLyLnuj8JYL0Nkzw+SQmh
jMjJu5Dip902ZEfLXIokY0T2twKfKzhuQ+LUJWlZ3wvIKu+6huqLbfB16tqJ
8DqPdBPfERv5bwNz1gfpgFgGpGlg4Tj6dhsMJ85MtnEyIDU68VGzd9tAuK92
1bKAHikETBU/jNyGizfYX2v006HrzpI2zsnbUKo8fX5fnBYxqM13hlVuQ+GA
avZ/RtSIhhyH6Gu2QTHRrCKIlBqdqY3MjPm1DSc8yp8uW1MhEgmpVx9btiH8
oz/u3tUzaJsz+mbW4DZI1V00je85hdbHbD8LjW5DVkBUOYPCKbQSL0NTML4N
54O8F2zKKNDM2ZXFsrlteMQ98/VRJjnqPZL72LC9DSrlf5f4skhRRwkjpcr+
NrSa46iXr5Gilif4F+1H25Cr/vQ80w8SVDsfr/mbeAfu8QvdD/p9EhX0rp+c
otkB3LBU2PPLxCgyK8n2r8AO9K4KELWyEyJxEXxbm8gOtPS4nCj5SYBGi0A4
8foOON1yeZ9nRYB4qka3bqEd0HlMcKRx/y9W3nXxpavqDnhmiE501xxipnq2
40oaO8D2vKob4zjEiIfLZS/o7MCR5m9Z5tcHmNq0IVmJ8Q6QeTbI4fX3sYmd
mLAtmx347ZB3YZZ9F3vtPrdR67ADa0t0t/c/7GBXCW/qRj7ZAU0Ho9DNCzuY
M0Uf4zW3HWCJ7DK/d3EbI2emT30csAOi+IBEA+lNLPuTJYlU8A6sanwq2urY
wDS5Ch5She9AVwe7HaHFBvZBUIs/O3YHcly0V4WD1zEhmbCixbQdIDkxthj8
F4/11o2dL/+2A7rfN55jn/CYq7KQW0DuDlwUzjXakcNjtdrtwFuyA8NCt2ir
Lq9ieg9ON1rV70CAtyNv1usl7HDRmO968w5cOiWjYTK/iCU9/vbuZPsOSFx/
PvhSbRFbcFHWTP39L79IKa0q9gXMM+jt0Pj0DvBTR9+RXZvFOM4OYN/ndyDM
JXP2ke0s1hDFk+S1vAMqttppjgszGM3HestLW//0pFsTT69MY5+/n1wxJt6F
ohcrwt/PTWF3ruuoXyXbhRjNeAfRtElspSw17+DULmjbcCixS05iN2tln8fR
7sJO+J0XZA8nsJbf3gT97LvQPen3X+zwGEZCZ+VjxbULnddi8kVejWFSGneI
t3h3QV9++1KY4BhW0ExDRiO8C/0flVnXaP5g8VUpVCqwCw1HHIu7n4axnqPX
YYMyuyDlv9IVfHoYOyNpS/tIYRdKn48Rc7kPYT6Fouf8VXdB+OOQEqP5IGad
8YulymgXTuAVS13+68dSZ9OT1Ex2wUVBnux5Zx82ejmYfcR8Fybt33sR6vZh
mh91ufYf7cJrzYfKb61+Y+KRs/yiL3YhKus4+ERqD0bmSY6lRe5CENVghLF/
JyZTvlx5PWYXapLSTvrzdWLuu51Sv+J3wTV8WN2/qwPDO8XJTSTvgoqfp880
ZwfW94BP5eL3XVC7H/wV1bRi1J+p2jIKdsFBilDnmLsVuzOx8Z94yS5wuv16
NxLaglUaV2jp4nYhmb/+WplNM/ZFQ9UotHUXflMpqEvKNWJjwcIjLJ27wIX7
uClb3YAxttCbZPXsgg+7itOGVAMWrDBq3jS0C/5xc/LUivXYM0kHa+KFXahg
pc7ofPILk+MMc3lBsge1Kp6ErddrsFpWwtNb5HvA0cHIKjlYjclddExyPL0H
sWGMxS9fVmPytBr11nR7QHrZiu1BexWmQHiW/i77Hojv6hU9IsVhdYdeaQOc
e+Ar1Z1T9KgSU9jFS+ry7kFcOu1lzvYfmMJqh/l/Qntw2liShzulArs9Epor
jfbgus/lL/T2ZVhDP4FcpfQeJL9kFK6ZLcUUex73ScjvQXWcme0Fy3+4Wf34
msoenG/jPxFuWYIpllKrcBnugSinSY+UbxF2Jyp0lsJ5D2brurXP8OdjTaEE
bq9d9sA+s34mpjkPuxP0+Ayxxx5YBsw20tj+w77qYke+exB+KGSalfcdU3ak
9l0N24McedkgZ51crMXWi8E2ag+MNasOnE7kYioP8elzMXtQeEvl8xXzHEzF
pKNj/OMecN17UqXNlY2pqIay9GTtgcDfLneb7kysRZEgT/37HkSXPl39K5+J
qcg9lm8t2IOYBUtWi/IMTFVS3baufA/c/uNeN85Ox9R4qctKGvdg9aaUTlL+
V+y/k6E6CdN70LFrRKEhlIq9aHIZvT+/B6w8279pqlOw5BCLBwLL//q/K4sT
107BNi/ccMFt7sG5v1oB3t7JWIzA6Idxon2w7ha4Gr+dhFVv1HNmkO5DQ1Vy
DXtsErZQ8j3b6dQ+iMreMs/CkrBbsq+qiGj34XjnlRxc+IiN6V2d4mTfh7MV
OsdJ3h/+vYcMdiuc+yB3JL39bioeE5n4u1XEuw/bPoQOw3fiMT/bblJF4X34
6WH9S4stDuP1duWzlvrHT58TKt+IxpwyGpyy7+3D88fVDIyskVi8Q96Bs/k+
VD0vlRT7HoHVin7wA6t90H/7ziZfLgJjwDm877DbB2MWv5hUp3CsvJuhbN19
H84EZ1gezIViUzEEsuVe+1Cfona6LTAUO3NvodnXbx+MRB3ZkoVCMdO5HyN0
Qfvw4yvhFXmCEIz4yJLwRvw+PCCOGCu3DsL4a9QC/ibug1g9KwF3WyCm+/om
bUPyPuyQms7jRQOxtLOUnAYZ+zDdPX9djzIAU+HKV3Qr3YfrWjdeeI69xqL+
IwzF9e3DVbm/PHgqP0y79eXN20P70HLyfk9Jmi9Go3w81ja6Dx2EGv6Rsr7/
9vFAeHR6H3TDIvwMX/pg/thW9+HGP/8KV0yJznhjcuVP3P129mE5/IhTvsgL
OyG+fpnyYB/oVO/o3TH1wjxFV58xnTiA18+UaracXmLOfPPnJKgPYMB2KIPo
rzsmmv6gqpr2AKpoQtt6H7lj61wzD5XOHcBgNbvj1z43zJ59slSf5QDqWjvb
T1W4Yg8ujBg9v3oA2WJa0re+vMD0STs/FigegGgXlMhvPsUYXv2neEvlAF7y
KqQ9f/MU6znRhv/53wF0LIZL9LA8xdSPm6S7dQ/g+LLj/JjGE0xpq3ZyzfIA
eqe6r7F0OGJkT2SDXB4ewH2vIn2Xp45YHb5alND2AEyJ2/czGR0xmaXKV9RP
DoBI/zWBk+1jTGKyhFvQ+wCCeP7SkyrZY7umNzqK/A5A2ZLd9EaWHVY0WvgC
vTkAA3Jxxbd0dpjIYF6jasgBcAf792gs2WBXOr/Z2CYcAOaf2FVX+QhjwiXl
pJcegJcFnqhm4j7mQxKr6vHjAK64h8S1PLyPzauGLapXHwCN8482zzVLrHjY
m3u34QBCSkPEPlJYYlr75h8V+g9g63V6hryhOVYmbYQxDh8AJZWUD8GmGcb2
Vmto+c8ByFEGSm2FmGGr5+TORc0eAMuu9DmjNlMsUIwzZHL7H47SJ4mvv4et
uzPzF+//09caP0x/8R5mUEvfHHB8AFfzTr5UeXoX49YiIRUhOQRnO3eLOEFj
7OfjWU8v+kO4/fj4QnC7AXal5M9F7QuHMLJ/8UkpGGBhf/vKuJkP4W16rDJJ
vj5mEtyw3Xb5EF7Fe9LgkvWwg8x0e2bRQzjp/Gd5KFUHM9/4RLl24xBufl9x
gqs6WKNEXEat5CH4NFjTyhZpY9GNATM2sofww3nGCd+phV2btblXpnkIQFFf
cJdLE4sTsDx8p3sI1F1JzeLVGhihs3GcmeEhKLAYeijd08DaiVV/k5kfwnsG
osmuRHXMhl1ATc/xEK5sFT9891gN63rEtXTl2SEk6eAMlutUMfHvLAHHL/7p
y8x6fcyqipFKUdV99vrnp+wVbuKPMpZyF49thhyC5IVkgWB/JYzi89xQfcQh
iG9qaarvKmKOS2Mu8dGHcHo1gJHPThEDt85CmY+H4Pjuy+a0yW1sKCaPPyz7
ECz1KudSH8hjfTGwyJF3CEzcZgyCu3JYd0xLWlHhISybvMg4CpDDmmNmOIYr
DuHMiBGFeLEsVh7DyMjdfAi1gdmbSzwyWHHM177StkPoXX47YdwkjeXHiEap
dB1CVV2SeKmdNJYZo0btNHAI07Vwm6pMCouP8SH5Mfsv3+IW6jsdCIuOoar9
b/EQVhPbB3oFERYR88F7YuUQCFv9eT6HY1hgTNEh6fYhHHH5FDSZ3cLcYhbW
NYmPIJilj9LmsgRmFKP5Z471CC7K3gvr47+O6cX8+eB2+QheE6RkG5SJYVox
toZneI6g1itUSExJDFOO8e+9JngEEZX5+fV2ophkTFmzJ3YEi6Oh0bSdItiN
mNtvz0ofwdGCzOI5BxHsWkyPQqrcEVQtpj1npBLB+GJWqhuVj0ArTnwZry2M
McWwl9AZHgH7h03/+GVB7FxMzrOvd4/AmDA42uC2IEYbc+uahNkRlMsbW7mk
CmCnYnSzTR4ewbPyn7wxD/mxg+iA1AznIxhMy7vrxsCHDUWvh0pFHIF5dYKD
2AEXxqJ7yrT6/b95G2vpw6+4MFO6y4IycUdwvoSZYYiGC5sK1WmV/XQEbE/i
17OucWIrb0vIb+ccwaXt0H6bEA7MiWThq2LREexQJ/OlNbJjOz5MCnd+HAFT
svTf/FPsGIG7p49q8xF0BHhaEX5hxfx2c1j/6zqCO1XBgcYHlzDyZ+OV6gNH
sCt3+5iwhAWjsZc70Jr9x0/RimPSu4hxmlI8NSQ6BsUr33LOXzqPZQxL0hhT
HIP3YaLIDb5zmICBXe7ds8fg85jdZUeKAbup2bFkeukYRNtxSUOv6f7XQL1G
Q5kGABx/x7xChsSSsxshlWk35F7v83oet3G3SS4hi6KIyAxC6QxZ0S7jkFMu
ueVW2hgWRU0uhdESWiSXlqY5bgeVE5t9Z/v8/33+k+0DtBvB+ymY53NOy6FV
hbRyNmaeOUTBfMeUE+JVZdLJNj/kLEFBHTOpvNiEneTAsx56mDUF3UZPZfb2
KpEe5GZZuCMFvT8ZCVX3KJH+Zv7Tkd4UjC16eHmHQIGM0tPx5rAp2COdRcS7
y5EsC/t3CkkUdK+HmiwgS+52iAirTqFgjuB834qRDNl7tjlpIoeCRTK6M0NW
0uSd+Lc45zYF5VOdtHadxMnYdCxLoYyCJyj9wGOJdFKn2qkU1VNQUEbeXRmn
kRvNUcyJFgpu0qmrGao0cvBFHp8toKCazMvKZF+MvPxhurtqgILnawrStDf+
A8xtzLE3UxQMzIzcthr7FYzuY88zlil41iC86SpzE6TafZvzFgUt72c/PKb4
BRiGyCiy5SWweKMxxUZrHUxdc9eq+l4CjxrF7Mzx+wQy7xYavWFKYKWfnHFX
+xow7xbZMo5I4MpCw+IDtArezxl4QwcJNB13uTDcuwx49MSwGG8JXBdE1ec7
LQJyb3dSZeg333LTtoc2Dyz3BTH+5kjguxGZYXOGGFgeoIrwVAlUGGxU+0yK
AGQWHjLJkUDJ88tL4tw5gH60eHq6RAKbsxjLQH4WWBvEzHS2SaChHDGZUz0N
bI3rMJ1xCeSPmeUqb58ALPMP2tzPEjiyLH7P0RwFdzV42tGyGPK6IJpa7RsG
lXsO8UvUMLQ2fevK74uDoEpbaD2oi6FTyllMe41+4OTkVqtvgiEfQ4MB+9YX
YCVmeEeWDYZYP2/7tViuC+Ab5VsJdhhKZQ4Zq5R0AvUr7PkQewx1vkzWmDLr
BNbp33WRzhhqj7kpPBLZAfIKveKWj2NIbOsbEicWAIvuiUmXYAwx1tLL2toe
AxfH+30WZzC0va5OtGf/YxA0kNSsG4qhUXHc+b7cRyBzfDdvKwxDNgKDiIpL
rWByKcCm7iKGIiJKrt4IbQZc1blaeS6GGhzJZK3nfCAMXYwTlnzrTUXS2X73
gFQ/N+JBGYZylypcm4W14KiBejCvAkOVGUp5m6AW1H6xdfWqxpDpwUYt3sEa
cP36nb2zf2Dov2ANjqleFWDdc3+1+QRDFjTPKFBaDjqWW5jMSQwJHvoFKngU
gFbOtcl0dRqKEooSspwyAetmkwkzg4bCD/92ZasvAqwtaABHuhTiOeQFmNi4
AOChaeYaK4V8rb9yvGL1gfu1/CAVkRRy9kkpcBtTAqkL9sAngI4a2ea/nOSv
Ep6neXLcQTpaNZiJkflpmCiVVnZPHKIjvpsgqqBriFiozr3FHqGjtZjClLRT
Q0TyUv6B0DE6yohneOnfekXUxBbbOc/QkecPd8J63QaIf9PvcVVX6MhNUCqr
x+ojSuu6N2sVccRLsNeMzO0gFtxYVhVKOBq7Pbc9Ur+DMF3ruV6kjCPuP7oB
Df3PCKFp/65sNRyZeLqEjjCeEZ+eDplyNHGUZ3eBa3vsCcEamr5oqY+jhhml
kvmLrQSPHfjI3BBH5aPqftGiFuKt6ix22AhHZ2rSPDT9W4hoX1H2XjMcRQdd
+lB9vJm4Pbf4QNYSR01/fj6RHdxEvE+LXKchHA3/daA9fLmR0NdbAV+tcPTR
tdJVnNhIdEZ87F+2wxHbefZ1ejGfYOzgqIjtcSTtHJeXZcQnvBvWfd854ujc
ko7iVl8DUe4RX/7GGUeTZf6xnacbiKX1jflhVxwVtM25vJbUE/8DzlnpIw==

                    "]]}, Annotation[#, "Charting`Private`Tag$2464#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c8l28bpexKsirKzEpWIannvuy9ZfxISVJ2hKxktOwZolTIzMwmX2Rk
77333nu/3r+ez/U51zjn3M+6mI2sNZ6ewsPD0yHAw/v/1TRrrStNthUXan51
NaFuC2vaNkoLvtOK0yrT4r4nsY0JonYve+5WnJDcdJtUyTZ2VPebHzvfirvQ
63J1In8HC5mw82noasH997cysr1pD9u+PmmY+a8FN8mMZ+uiv489sNG6HVbU
grvNRy5POL+PsR8JTejHtOCKGPTL9ikPsaKL29j80xbc3LPlO3wfjzHGh8+o
m3VacHh6NNdbaPHQ2/juuWz5Fpzp43slouZ4SEWgIMKZpwXnKXnjt/xlfFT5
aW2Maq4Zl+N3mKHpewpRH2zJq5M045weO29ONBOioY/dW5cWmnDJ49ue2hJE
KImmIG6kuQn3uKvoPVM+EbrH53RoHdGE23WIN19OJEbGRvuZAexNODsYsR5N
JEW8y/0G2mRNuIPlzL+vecnQjksJGcNSI26fvNFgIJ8M+X16bZyW24hj4wmO
oGs/g3L/HV9skGrEPWtldpLkIUfuWiOVoZyNuKKbQnqR9eRIYazMRv9sIw6R
E2xzW55HQ/se9XPtDbjMsY15LgMKRMRH8Ib0SQMuQao1RQl3AWl/IpmS8ajH
+SW19s8OU6PeDrrpdKN6nPFwREWZNg16QM0zQytVjwtV2RC+10KDHoeqz00R
1eMyEgOUDOppkUVw1NJ7vzqc1t/QlVMTl9Byy6/lJcs6nGxGbGOezWVkS4Fb
0Vatw92rFHgcfIoOvQocX2OnrMMJh5l2nOKlR57+N7arI2pxTsnWw1NpVxFh
I9rhdarFSWgeFw1qM6CPZ9V3w/Vqcb3IyT38NCPy97XfN7lai3O3ap9VF2RC
kd6lx0Rx/3C5Lb+CWrOYEV1tC5712384i4q5Nn9aFvSVZBy/++k/3HhOQfCH
1ywo9gMxQSLnP1w38/lWEw1WlPZOjUQ2vQZXOnUvSfEyG+KvMiLNCKzBmRFs
3TUNZkPZBPZkF21qcNyUJD9unmVHBV6fz07fqsHpBmeQEpFxoAqPMYoPhdU4
fxu7fitOLiRdvnFhOaoaJ3T/PUrK50L/8IipdFyrccOlP/EvKFxHjW+4aTig
Gqe7jhdR6MiNel7bXa6prMLVccd8dT3mQfp/3tPxJZzEDwOXJVN40dBBJH3E
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
N38DfXf1n/ypUAu8dNzEutc2kU3EQcaCZy3g+R13Vp3eQtSNfVLO67Vw1+EZ
lja0jV7rUaZ8PV8H0zNRx+/1d9DUtPz5cu46CLZLSF7s20H5pwp7iY3rwH2C
XzVidBfpiURYfeqogznh1B9j5w/Q9zjNyMzcevghyiZQ6YYHpAK+h+2t9VB4
mqqQtBMPbEsrjLYX64Fa4I8uJQ8+SPYK8CD2BtCqPZ4IHsOHKXKKivrwBmi+
Wkqta3waVL/IcixnNwDPXuN+Re1pKOB640fZ3ACqH64xiQkQgLfUkvZ/xI2Q
tCEa94WIEG44N8xPvWqEYY26MvoGIvhETKBOFtYIdKK3pO9LEsNR2N08nsxG
IL38nOyghBiaM1Lc7WYagaR+wLEhnwRsJz/SnPqvCYyV279PNpBBoZo0XBVt
hgey30j9PM6DGbei2nfdZmh6sWzOTUcBdETqj1lfNYPYVOaorz0FOBc/8OLK
aYZMLqar5jcvwFWqonG6iy1QeHEWb7GKEhzwMIsH7C0g+srR6CU/FTQt4ja+
CrXAJCfzoNZXKnD7V0XIfL8FRpZJR4zdqGHodSsHR3ALqAybqQo+ogVh8/uZ
z7+f5C/757AM0UKAbrdISkYLuPSYVIw8ugjo1qA8T1MLPPGJ7j9jcQliZmbM
b51pBQcu95trSXSw1Wm+YUfXCoOXfvzmE6MHlb9LrnlcrVD5xMO+uo8ejr5u
+N+RawU+QblVRbqr8EgTLxPetcIC5ym2iUpGKBDzEvEIa4V1AmFG33tMQMFL
VF4R1wqvO2WzYyOZoIzkbJt0RSuEMSRU72kzA1PpxQ3F41bw1l/VjVpkAcfU
KFd/8jbYZJr8vqrLCi2RVwmbr7bBdWn5maRqVnB/yUqrca8NcPbBVpbJ12CE
k09E16kNfs94Evf6s4MIbXbZ549t8ICTA7/wHAcEnRaS749og58BKRsWQRwg
NiSq9zCvDYyd64+CYjjhe6iMq/F6G+TQVFz5NnwddtxrCRJOtcP+0/4za6+4
Qc1KyX/6Qjuw3ymYiaW6AXjyGjFm/O3A8OVDjZkWz8l3y6DshWU7VPXrZRie
4gfypls16S7t8Ovrwwo8HX4o+kratODdDhMvSSUepfEDJZbb/zyhHQQLzR+4
PhKACpez24bD7SDfnvBKsu8mWCmOHcYstsNFlXWuMewW0NEXEAzut4PjeO6p
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
6dJNBEBC3/YAOO6wO9eU+kU=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2464#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
PdJjFj4di+B/tQb3aw==
                    "]]}, Annotation[#, "Charting`Private`Tag$2460#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwUV3c8lt8bfl8hSZktSSJECmVFz7lfIytEAxllKzISsr9mZIWs7JUkK1lR
vfYmI1v2zt7bz++v53N9rvO57+u+zrnv85xLehb3DUlwONw9Uhzu/9/nX5c7
M2VaiclH03xvNAij5g29zOBbrcTtaY8sFTYRJIDaPWyuthIDHcJ5C51E0H79
Nz6MupXYqfwNe3bzFgoZs/Zt7GwhYiqR5/7liKLiMxvYP8MWotroqszaIoYu
PjFm+K3WQvzClrvU/RQhz5SumVy5FuJp6RV5tRaElPiLIhyutRAJwiQTYgWA
KsOWR+hnfhO/JkvfvdJAQAy763IqFL+JbfRtWZ87JdCAT9f62dlmIpXe8e/m
TJIo7VRR8tDvZiLnZvkVIX1JdJvXfs8iopnI88BOtG9FEhno7eQEcjQTy7bY
pWcu3UH5tQdnGqWaiAxq71FmngxyfTRU+f5KE5HLvmbLjkoWyY+UvtSkaiI6
hd75+9ZQFg3suDXMtDcSNcbcDgLOyyFyXtL/juk3EpuVXImfIuSRahjFhLRb
A/FPtqdu3B9F1POHcTJLr4E4Rqn90VZBCWkxXJs6LdVAPL7xS5+vWgnpvleZ
mSBvIAZXDX4yIt5DL4Kj5t/41xOP9ql/7x9TRgstGQvzZvXEq6PcSyVXVJAV
DXFR9V490ZkVOr+YqaDX70aXOejqiddfK3U1b6sg9wCejeqIOmL795GWWNYH
iKwJbV63ryNqvLvO6GLxAPlQqWyFa9QRb37Xw97/fIAC/Gx2jC7UEQc5wcdC
+yGKfPvrgDy5lri2GVPulPEIZXopU8hk1RB/F84nhPirI74qvWPZ72qIWgrj
pDcX1FEuqQ3lmZc1xPG4/JSnDx6jIo8PVJM3a4g+vU+CbFk0ULnbCI3392ri
TLGy5b1mTXSnbJV2IaqaSPFMS48MaaFa3FF6Nadq4jfpy5ecsrVQ039XT3FC
NfHroqVibYQ26na2PldTWUXc99RO/eTyFGn+fMPIm1pFtMrHe/LuPUUDu5Hn
I7yriOp04v09SAeNOv68YCxfRQy+ERHxrFwHzduTsx5tqSSyi+N72Dp1Ealt
JLdMXwVxT2mCZ/KmARpcJOUt+FVBlH+ib5r6nwEqNn15kz2pgvhRQybdrdEA
WejK3z7yvILI+v1Sf8xzQ9SrsKtIXC8nWtoamgx8NUI5bDovhenKiaQK2+be
Ls+RX1yjTepaGZEieTfxwsBzZHTulsOpnjKiXch5EUYwQeep6TxW4suIn+qE
EzTJTNGb7YrQ7GtlxHs/NiEi+QXSauUs4pQrJRZ9epS/fcoSCSuE/gjnKSWy
OMe/kL9viehqcGVkNKVEE8MUKad3lijQ/tv7mkwi0c8sKuk91UtkoHymEOp+
EX9cXJ5epLVCNPsDe7y4n0RHh/LIdwrWqHqlkPxkzQ/i7W8fZb5EWiPH6SDq
2YAfRMYmc5WxcWs08UfiUtr5H0Q22rnbRA8b9ONLqhSLcAlx0iBBJ7jJFhk/
NvejMf9OZJwiXUqJtUdFJn6OJ4S+E+ndf1HW79gjCqc0U8r9ImLf9iMOOU0H
lB43cpc0sIhI+e3ow+fMjmh2VJVqM7OQSG2+w1OW74QszSFgcC6f2EwvW1d1
2hWV/qfl3J+fTwytSnk6qeKKaIPtzXqc84kvtoJkRwJcUe63b4rtJ/KJS5PP
Iy0p3NDaJufJmmt5xPr8KmM5Cnfk4EHzLsssl7jtb2Q/LuiJ6kOv/fdFMJfo
utA+zePqic6nyluk7X0lEqL61L0aPNGPWs97SQFfib8zns3bGXqhgxNb1OGZ
OUSyh753+1PfIAr+iks7vZnE1FipJGX9t+jzgz38mkkmcbwx6H586Vskbys8
Mr+dQQz8+XJR6qIvCij5kjTCmEGMmzYoShvyRXTSoWz1GulE4z+MHTrW/ui8
piH7h95UomUO7Y07Y+9QnKyRKoNuKlHZ7+3mL/4gxCpk7P1u8iMRF3b63GOr
IMRN+3zaazWFmNh/2SV8PQiJ1rzItDqZTDSgm3FJOx6CfuWZDcyFJhF7Ltay
fnwQgiSSzKmfn08iUrHaLJXGhCA5Z8uXT68kEs37pI4+u/EefTWaMon0jCMW
FMj8WTMNRUXiM42BwbHEI8Wip8x+hqJSptnrXnExxEr24ypcNGGopW1h+WVR
FHHa5eCk1/cwNI82HO7OhhO7P9y312KKQGrXqU7vfQok+li/snnGGYWMxqh7
p8v8ia21D8J+votCtlH0cZ19vsRSo5rJ3K0oFEp+niOH2ptYbifLG9kWjVJ+
PnhRPe9C5FaXf3jsQywq59JcjWd1JLZZnTU8Tx2HhsP0nOxVXxPDZf7akHrH
Iax/5OxjJwsif+s+tb1TPGJpHw1+lHuJ6Ip0HHSICUgy/a5m3KocvHP3esNL
kog+XfY5Mc2tBYLb6wzHpBNRj26q0UlpM6hZajCcbUlEVq6C9IntziDl2UGY
XUlCv6idn5swBoJsWwt/s9VHxJvSYXFi6B10ejf7x5Z/RMpMZ8S624LgQtaj
oTD6VFSaYyHuGBkCtwVPVNF9T0UJPSxKZWzhgK8g1SumS0N6Vz2MFUVjwbbb
uWOQ9AuKssmeYb4QB6vszr7Pn39B7cQ+s8WDOBj/raj+/PcXxMrNWFynlwDx
6zZ0w/EZKOSXVemLK0lwLm9EXulBFrKaZGvK/fYRlv6eVk0j/YoCqYoDz7On
wtYZc5Mdya8onV9Z2TM8FfDSlBdFPb+iEUen9kf2n4D7avYVn6O56D5NR88m
+gwrw2vNdee+oZu33kyg+gzAqS3oXbHMR8pPmNI+iWWC9cCtrDliPnrhkfuc
JjMTZK5TNfTRFKCUpoHZ4XdZ8K17oF6yoABRfo22L+fOgdoSpSwidRFyuLP6
n+HiV2i1n1LzwpegiGVNkZ5ruWCuvDngZF6C8uIrFhVMc+HNqAE1z98SNLcV
oiswkQtTgt+hifgD6WTxSx7p/wb3MOX+0ahfyFnzw47tuTy4vbwxr3OaiKIo
8Hkzqnlw6XmheMt7ImrXa7nc1poHwTpHIu/LlyLpMxbkiTX54MY4sO2lVob0
Kzt/MZAVwOlM4V2X2DLk+hK99pEoAPP1m8ohY2Xoe8OJKYufBVCRztp8zrYc
8bhm1KFvhcDNK89/7VMFop2e9u+P+w6KW4u7GXeq0fVwlTvK/d8hZV3WzDe+
GslLft+rOFcMSx/FXrZtVyPPWB/zL6HFcEwXx/E9vwatq3AqO/iWAI4kCueN
1SH6g0CK+ZoS8LSS5H2SXIf4MtZLdcl+wOxQnHgLZT16Tl7NL+f6Ay5JHaOL
H6hH/cUG9Gdtf8Ksyc+byVGNaMu4scHv208Yr+RMpDrZhE6fEvA8WPwJYYxH
c2U8mtA9iyNrE6a/4ONXL0HlV82onC2pM1+XCI+LdJpAsAU9rF5o/JxaCldX
HvLcfNKGTr1zE/xTWQonVpqzllPbUKcafdz+SCmUG95QaFtsQ2rTQhYPLpYB
Tiv5xxGfdqRB5UK7F1EG6dvLiTmVf9D5DmoHzoIy8MSWvi6d7kD9sYkjKn/K
gFxr3tXOpAM94a36lkpTDmZxLBGmpzqR7n0qVeW35UDNiX21d+xCrOfjfjl8
KocfqSPIobsLjYzycn6sKoeyv0yM/4S6kYHNg80tfAXMJ8xHCmx2o2eRUVHJ
DhWg0RzTdTygF5kPXBlcN60E1ysH0pJkA4j3U7HMJd9KoI+iYL3iNIAWLRRy
7qZVwhnHzKbR1QH0Em/pljBWCZrUdu27/waR9eVCNnntKjhbKfKwcnMICc7J
+ls7VkHv1i3uHbFhtJ7fuxr3oQoa/jhcue06jF7L7FetdFRBbHbq5bnjh5pN
7jyLVaoG6QoxE3e+USR2s6ul5kU1kKm91HNzGkW7O89uLftWQ85PV+nMulHk
HOBPKVNTDVJDum5xxmPINac9YxFqoPCPZ7JZ7jjyXtddkuSvhQht5TNCPlNo
0eODqrFiLZgoDx6rG5lC6rStJb7Pa4Go3/UgHU0jbh7Cm9bEWhA8ES5tuj2N
mnWZzz+lqwPe4hpSK/d/iKGpV8phpQ5eVyoSr/bMI2cNuvRY6nognHAXoL67
gCYm5ajLrtaDH3sIecSvBVRI8r3nqEE9OHeZHlN9tIg0RCLMw/7Uw25VlnPT
3SWUkPwgMie/AWq36jK4DFfQMX6/vfbWBiiL/KpTkbGCrH6V623MNcAqUfaB
4doKkuzhv4Y4GoHf7QjW+nYVTZykKW8Ib4Rvqp2ihcQ1xOPQ+G/idRMwuJq5
a+tvorCjpCqUoU2gQaZ62eDnJtoPFSu4ltME3WZjGwVnt9Dv7HRX66kmOLaw
9exh+xayGvc5RfK4GaxwA82b6jvou/IduCD6G1yLj/17nb6PTK7eVU5Q/w0S
+eJxMuwHiJFcRZft9W8Ir0n6R5J0gBxKtDy48n6DFdvHsExlHFygLx5lPNMC
Vqf4bUS08GCLw15ocbRAWOa3jz8T8dA8R1yNFWwBnurSU4+n8OBSW0V26WEL
2Nz6wDlmRwIDzq2cnMEt4G54nK7u0xEQMn2Y8yyhBc563KxzXj8CgepdIunZ
LdAuJWBnJk0K6OZfuWvNLaA6O+tEO0MKcVNTpjePt8LxYz4F2wRyePoAlwNe
rUBOFYAdv3EMiggeIm6hraDz2ThrJvwY0FwnLytPboUan7007b1jUEpB1Xan
vBW81t56nPlNCSy/zqzePWgFqvp99eA3VGD3Jcop4GQblBRkbJZvUkFL5AWy
3xfaYPWk7MOfL06A6yu20/dvt0FxTkjPFY2TMHSFV0Tdvg0SmLd+/2GnAZHT
uaUffNogSwi9fG1EA0FHBOX6Ig75nEhvpjQaIAyIajwpaAPng0viLtdpIeG9
tJPBShv0kjHlM8jSge6+dqmlWTsQDfnPvchlgJPNN2uyHNtBm2Co9u2AAYpj
jzXPvm2Hym2aMkalU0CH5fc9S22Hr5jFuMb8KSh3pNrQGWyHXANXn3PYGWDd
Kr6movIHtk+mDAeeYYTm2iCBd0//QNUNXOmyHSM4RBqJNZn9gYruHt+yPkZo
E6aTk/P9A011hsfyP54Hd9vnBuIVfyDFf3vR7+4FGFk5E80v2AHuz4JSD16y
QGDFXKKFZAfwZwrxaGazgOj7irRMlQ648dqdI3qOBUJuWBRwmXfAPmlQWceL
SyDxsrr10qcO+DhylhBmywrJ89YUdOc6ocCC5rph8WVQ/iVPrczZCWnZHIs5
R9lhN4DldKBgJ/x59pGPSZUdHl5rZKO83wlZhp29uuvsQPqCDUj8OsHnn/va
pTucYDDdarO82wkhuExR04vcwJXbWT5F2QXTpwojO124Yd6hj3rwbBfs9ss8
iR3kBnuq8c8NAl1wvFu5XfnjVQjk3fyb8qILuga4rv8VvwZFNszSav1d4DJc
+fS8Hh84I7b3ijNdYFVNaJiI5QOJo1eGJDe7wFlsIMCvlw+aIvkd+Bi6QY51
WsdMlR9GSqSyjil0w0ambsKM+g2gIjE9/aOkGx6nKdzM8xOA1noL/dy6brhk
UHAitlMAwt9b56R1dUN+ZWJcGKsgXGJ3kQ9b6YYmAs/1qp+CICQb7GJ+tQc+
ZVwi8ccLg05g4QRLdA8Yvv2vVrX8FrCr/bh55nMP2D1p/8bKIgozF8tcTxQe
8h6mK+L/iYLN13rG7bYeSOFjMwsQFwPfP3+V2il7gbsGDQx13oZ8RtJCL4de
WOBfC3W8TABmysWeL297gXbKI5TfgABvtvp2WyN74fx2zvZQCgHUu79JMBf2
AvOALYUYlzjshuk3F6z0whh9XJwskgBDr3tL/SR9YGoiOS34RgKarcUYjtD1
wWAVE/ft3xKQ8IBe4x5fH1h23LRMMZAEKdqK8ckXfSA/HPhJO1YKMnHZFCed
+gAZnv7jNy8Fpxejrgr49cFNpRq1dcIdmGq2eun6uQ/KTncovp++A/7+rHtn
J/rgQfAtFht5GWg/6s4g/7QfzrhWbj68Jw+3N8yELc374fqk10pKgTykTDzW
CHfuhyzTIi6vi3fBtoo/YSS6H5Y5U6dPrN8FRo/hq47d/RDfZ1wyU6AIHlZN
SomT/bBiIHrU6KoSzOp+f1mz3g+iNf07SYlK8IsQXEh/6i+shHmKOL2/B3r7
BMkMlb+w86DlR161MjTM8Ri16fyF4HoaGzUKFRD4e/btpsVfcGfQ8l2XVwHy
H4vNUoF/wYli0lqkXQXS7RM0/tb/hel4jU8Ci/dhafXg5UmpAVDSvkjp+fQR
ZFUjev77AzBFEmHGlvkITCKd8x7oDEDJySnHzp1HMCa2sx7pNAAtzQHCb2JU
odt93ZEtfwCEPQtnrf+pQSnNnJcIxyB8+ffm43a5BjiPXOXUFBgErWTX9CQ2
TRDNM6l1lhiEf2nXcHFempCnNkVZ8WQQ2JUkOBIUtSAtbvSdYsQgCHPu/L43
rw2yp+cU+EmHgGg2UydSogMc//nHShwfAnEr/EOxDR0gm7o6/4BuCHz+3rE5
IaAL5d9N3tmyDEFtUHMfd44u3Naeai25PQRGIZ/EQ3P1gC9lVFXaZgjo3+hF
e48YwMkTHp/UnIZAgGhuXctjCHM2rJvPPIaAIHLdgMzOENJldD/4BQ8B4y37
4P9ojeDyv4G+lswhkGN+21OvbAxnbvTqaE4MwRPJfmHXIyYge90shnR+CLoE
DM/mG5mAHTeuO3NtCMJZb75VajCBblaOeziyYUjmzHAojTSFKHor7CPbMEzf
9V89f8cMmNaOMS7oDEOol4xc2ytLUFiKeRT5bBgWQfVz7FdLcJrjDRa3HIbT
5RPfYdES/o4/ogj9bxiuaYra0Fq+hLjOxHWRuGGYPNL5/rqDFbAU3Wp37xuG
cxJHtCyKrUE5r/Ekz+gw3JgkVtWQ24BrzlP5jplhqLM4WXXhoQ0Mp3mVcW4P
A+PTfw8al2wg6UNrduPZEfArDua2u/Ua2B2f+59WHQFlww6NK7v2oPp6t4ao
PQImmtJ458cO8ObVuyPPDUfglLOWz1qhA0yY5juUWI8Ap3mkpKadI6Rp4Z/r
vB+BQYcjKsJHnYEbfbiT3jICX+6yG3vwusJkgWQKb/cIBM/HhFcYuUIK7zxJ
/uAIxK6doUiIcwXmS5KlxPkRcGdXbOWjcQNa0jnRDqpR2GzQ06redoPNOgIf
Tm4Umq/1JMnPe0C+xL9AL+VRuCphtRHD6wlWJWFzlOqjUGRnbBL60hNmM2bS
TxmPwkeJ5oBXG54w9C6U/arXKDD7cqqvU76BmkdTjKplo0BLc2RzX9kHPJtD
7PtqR2E/dGU8KcYHCDJYt07LKAw1+j+dnvKBYpGQMNPBUchgcOfX9HgLWedv
07jtjUKBye2NYqIvhA+/I8u4NQZmP0TVLR8FgIGZ8CI+dwxM3H8d47cOhrtq
xwPJvo9B+ZW/tyLjg+GG+ODVY6VjUK3lGsfdEAy4U97GNM1joLr0jb2BNQSi
f3QOMM+MAXWzbtHv9hBoO27bJMY6DjzGYovGYqEgnp6XbhMyDr9eDOen0UXA
lVAfWfsP47DuoNHZDhFw0kVrwilhHDr22jYnXkRAvwopq2fWOAyc1ZQvro4A
u60HH0Lqx8GbTySk2i4ScmRXvLNJJqDr8QHrTPsHiLhRw/7t2ATk+LzlxPY/
gAtTdEUBzQQ8I97jk7sSBQqLEgc/mSfg3Uel/v8co2AyIsS2UXQCds6+nKdm
jgbmSX7DaasJoHj/NnlLOQbUDLbmPB0mwDqrK/2VXQwEDZfasrhPQFKkZv+T
+BjA99/zUQueAAPNzWP2/2JgrMXsS1X2BFQwSwoqO8XCBSVBAd3CCQha56Ob
jIsF1YbdH7u/JoDcxNajpTQWaqr8mm82T0BAxvIHf5I4SC/+vJQ4OwFCed11
0s5xMCr80gFbnQAdrazr1FFxwJQvcqRnZwL+PTPyO1kQBwHZNQw0xydBTOpd
+Md/cVDN8y72C90kpEnUcQmTxcP+Z1UOGcZJYMyZ/G/lQjxYpowLu3BNQvFu
38VhhXj4fCmz9Bz/JHQcWV2j0o+HkThruXyRSdC4UZ2mbhcPDz4c0ZyVmYRP
D3A/7iTEg//phlHve5OQJ85rOJIbD5XvQ16wqU3ChbkW57DKeBAKvOSiYTQJ
K5dp04TG48Hi+DT5utkk8BVFt7KsxkOaT867YJtJ6AkpaKLCJ8AQmd3Za86T
UO3P8uXd0QQ45wGJtZ6T0NATJBx5IgHu445yG/hPAl54spCdPgF8nZtzD95P
At1+wH/CZxOgYjtMLDr6MJ5j6mIjUwLsvtauFEqehNwofqdxlgQQXLus2JZ+
qLdZIMn1cgKYW812mOVOwtObfUuxnAmQuvDtybHiSbjYGHIM406AwReOkyll
k/Cjlz1CmycBzs5IWBLqJkGK0KJ2cC0BlI0pt/paJoF+UPksK28CvB1rdXvd
PQnn1tfzqg5xue4HSvqhSXC1+HJu5hDvDOi8z5qcBH3mdfF3h1hA6wqT/MIk
qE/vi+RfT4AXPQsp4+uToDLse07rMP5H1cJrbvuTgJNeO+F5NQEG2l0KmMin
YN/hsvI1rgQ4rSINRSemwHvZgUudIwHuNZ+ofXBqCrIYKpdJ2RLA526H8gLT
FBhfvcAgcDEBSmtjenwvT0Gbdi/pBGMCbN0x0OPgmYLEauO7508nwI2Kq//K
bk5ByDcO5z80CWBCWHmlLTYFZBdkEN3xBEj+Wby7KTEFeONY8Q7SBOgXdfcK
lZ8Clt2poNu78aAoSBvR8HgKwr1mHvsNxEMOG8nTcZ0puN2pde3Z73igo1vh
ODCeAsyT4Z0tMR665/8U3LCdgi++C9+ux8aD6N8qFwXnKTD9PXik3zceYhsK
pI08p+DFt+ntstfxoJcW2fkhZAqkk6/Vwb14qAp/G/ftwxSMPZOr6LsVD1e8
HIyaEqaA3kXncxFbPMzpaq3jsqeg9bYPhtbiwO48y+lnDVNwqaLjcsm7OOg7
Rjvg1jYFPidYkhOs4wBt4lOje6Zga7b9U696HBzpGBX8PXlYf3bGBbWLcRAY
+OmREOk0ODCfki5NiYUUPG8YKTYNfIWZl6ffx8DRxYvazFLT0C5D89jKIgZM
BmjYRe5OQ8ya0+R/8jHAW7KcZ/p4GuTVatcEDqKh2LrgT5vNNGweVBbr6kdD
yyTGkJg1DdTZVX6J56Jgt0nhPcYyA2R56S5SDyMg5x6/9ALnDMho2qWVs0aA
YeuprQTeGXC6EEnFsRQOzX8GnpDCDIyq/Y5JDwiHhD5L7gbtGbhrIPyNsjoM
7kyHlqlHz4D4DcqxDaFQCCT9u/Dq9D/o389hPuAJBok3ZUnszP/ALS5DYGYv
CDaOpj7qYv8H++D6nPp3EOgctygRFfwHCpNUDSetguAmHd4b//Af9FQWL5y1
fQfdF9mZ3wX/g4avK2Eaef5wScxMIZ1qFkSTfI7c++QNerees4owzELXfaZe
S21vSBE23Kw6Pwtl/JltIgzewCGgnTLMPQvqsrSvfni8Ae5rirtn5WYh6OgF
5kgTLxC4eC3D22sWaloEchPUPMDmApf7qYBZGP7xKu/aWQ8oOM+unhw6C2M0
XRVPe9zh1tkLpMTkWXgarsb1VdsdEO0JrfWyWSD3ohvYMnMDmSNzxw33Z8GP
0Y+c6fF/4IOfHl4mm4Oz/HnmkvMuUH8wVuh6Yg6qzwR5xHm6gMJuv34M0xyM
PXCXm8pzBuW1xpJ20TngmFCQC2VzAo3JDFOJ13NwOCbiPYTtIXo8TbzFZQ7i
Kj6Mrw3YQf9oypknb+agpV8w0cHbDp4OxVTYh83Be5J9g9y+12DQ43/+67c5
UD32eyQqyBbMGl40XFycg1Z8baQ0tzV0i4YMXd2YA79/rw0TJl6BVHrhmvD+
Yby7KbW1ya+A8S0JizLVPDjHHM1xZnkF1dKR1q5X5qHp0XaeBNvh/1Z5xYVh
nflDn0c9QxQswY9/+sac8Tw45dpFLTNYwnrCSdkt83kIacLbkP+wgMb/HlvR
Os8D2XGnRO0xc7DHFqrFP8xDQBZ32paUGbQVMVomtc4DT0znfy0SJoBdIXhl
dc+DmPJMy/rkc0iLMIwqHpwHAy9WPunA5/CfbU5l29w8wMecnvsDz4BHQPrc
EcoFSCi5aV3rZwxe2S/L9SUWYHmKSfDJOUNYZI7ospBbgIqN26Ohvw1AK/DH
rKPyAujq/HIsf2MAN8yOngl9sgBemylV6xv6MMAda1rpsAB8J4KSX43rgUhq
LQP7twXISll99WBGB9bShhnqihfg4/UGhozPOpD7ZZvBrHwBVqayrFee6wDP
V55T+a0LoFOeaubR+xRYfgSdurO4AGdkZ4Qp97SB9DmPX+7pRRCU/m/yVIgG
6M2I+HkyLgId0vpRc1UDykzv+KkyL8L9qCn2rerH4GL+xG+bfRF+ydYEVuEf
w+arID8JwUWwiDvCbe2jBrMuq35tDxZhp26FrLvjIcjj8P4paotAbuiny+X1
ED67nfC31VyEjh2XtgzBh2DkyeHPqL8I0SN3k0WiHsDQW3V/PatFEB74NThn
eR/QcUN/AdtFcFJLf/qY6z7E+r/0J3dYhEb6nZ8dIyqg8c7XP91tEUTFxp2W
1FXgT+gP/+WgRUh068qWV1GGG6fr/CtDF+GJUrllG60yBEd0+IdHLoKAhatG
VOo9UIqa9xdNWASdyXbu87lKUBvPEuCevQgR3pVK+QMK8DPdM4CueREkeOTT
4n3kIGeMPTO5dRFi8746vbkqBynMNY0CHYtQ1Gof+eO3LPiHHKNS6z/EZmdV
SJlkQcMh0Dd6ZhFGyitLPSukYV0u0vvy0SWY9DzDHywvBTMetz7lUy7BL/Rw
zgAnBX9/9lZLn1yC8tt9XHcKJaGS/wL581NLYB1kpMh0RRJCziV5ZrItAe15
ZubSUxJwffqLmxBhCeoFG7T6LxCAlU0xsUZyCfx/UsukVQGc0p4vVZdZgtLz
R9akVAB2W/hwjkpLwN10vs7MDEF9Ub4LUWsJ1Lw2zXqLboORD9FR1n4JWKaF
r8pF3AKNcp3oHqclCGROjTa6dQsUd/ElJq5LQJ8aoN/bLwICllLb/t5L4EwS
Xf2VUwRI1OvsWsOWwCZNgDG2UQjiONttNHKXIDie0cvznsDhPMV96slfgrX+
mcfa5AJAd/Zat/r3JZi9fs7g9q+b4EXhLapWugR/f3BE7fPdhBfTogcPmpeA
HWfezsd6A8S+JPkozixB2L9T29p8fGCd/Pt749wSNFitVOBmeSErenfm7tIS
jHNFtUzZ8QKrv6qi/OYSuM46aPlFXAdKM0o6GfJlELXtaHKc5IHu61bRBNZl
SFdNYFJt4gI6zvhGIvsyEF1H7mCWXKBwsXEPcS0D9XUylVcMXECk5tDB+Jah
quPRs+86VyB1seeyKFqGY1fdv1yn4ASbXPGsmxqH8exvYluBlyEr3XwwV3sZ
bA2Io0SpyzCVFE1zQ3cZJtiEB4J32EDr/ZoV37NluGH5flT2BRtIWX8Wvma7
DGXvXeJiH7MCnRBtGUfIYX53e+sBHRZY2yicXApbBtP3PZXfWVig+/uTkz8/
LMPF+tGYixUXIRbL0HyQuAyPs6fybzUyw5U7Muv/5SwD6YuCu59WmeD40Xmm
u3nLEFuxJCXqwQTztaGSp4uWYcxCv8mHngm+KYwEZRCXQW1RNhm7dR7QQ+er
Pc3L8Oa/32n3Is/BpdOX76e0LUPdMvfHowLngLS73s6icxnInqYuybSehTrN
s9VkA8vwnPzFZzmas/BQ/5vOjbllWM8u6MqOPw0mVtNhfsdXgOwVbx7hgB4U
BYJ+qFKvQG2VyY+hHHrgWxcavUS/Ah4hr8O+6dPDmr0nXxHjCmx/oqQfbKQD
V7eLDWNcK9BeuB/enEEL+pLVS9nXVg7v/fA9L2NakCYzO+vIvwKvF059VWCj
heNviw1pb60ARYCEy0YsDYQHPcIh2RX4F/FP4SOiBvv7uxzHFFbgp3HBDGfl
SdBiSFb8c28FQtis7/rePQmXIhejTNRWwEE5kq316QnIiPcTjDBagZVq37WE
2ONQllVmsui5ApE7gZjFMwoQ4drLcfBZgeCZyLv01BSQkyyyQeq/AunJFFL7
BUchITLb49z7FTC2ntAMpzwKLu6xMRKJK8Db5ZemXEoGt1Xtm0N/rgDJLMhd
1zsCeS15DBfLVsAIhWYLnD8CPHcXNT5XrsDDZu421EEC5wnGkz8bVmA+ddLj
ngIJbHM9wk32rMB/NXOU+3fwULTHd+PW+gr0VE+ScdftIz67F3YVWysQcd+v
8YX6Pkpb/vRLcW8FbqYXI4XpPRQxyXxXj3QVuETeptZR7yHbVioDP7pVMBL7
nMlssYMEPk6F/b2+Csvf5sxtrDZRxsXL/cY3ViEg4ZbD7NlNdDnqKeuy4Cq8
KadS+VK6gejfdWaRY6tw39ohf45+Ay3bVdbw3l0Fsf4UNfK6NZSjkLDlZrwK
EQ/Kuyuer6CWoEeC6qar4DPwwI7ItIKW/lC+vG6xCrciagNmW5bRDW2bqV7b
1cP7uU289vYyyjeT77r5ZhXOhT38R8a6hDq/HtBR+q7C9OfJ31QDi2h9LU9p
KOBQ39GHypeiF5GIy8Vq/7BVSGkfdNM7u4iKA1fzxlNWoSjonvdnbB71tX1e
LElbhVOh+mpZVXNo9/RTnpCMVcjNDKd/d28OYfF1yShvFbzcY5eqn82i0uy4
kIiKVZC+wLEhmzODqlpkLeVGVuHC9LpffsAkmmDY/3JxYhU42/R0xPkmEfnj
b5Nr06vA51i+CH8mkOzwhadJS6vws1Va34VlAtUvLSvu4NYO3/nlMoZ1Y+if
YNrbVtI1oBeip/lnO4aoHLSrPlGsgZFxOFUR+xhSJKm9/ZBmDa589bGg9x5F
LXSxVzMvroE27lGztPoIWlS9b+zBtgZdl95HOlGPINroo8mPOdcgZx53tb1m
GN1ns2Ik512DsmeRf1rEhlHHTZljT9EahK0tiIfxDaHeh0sTNNprQKCWCdF7
34/E1W4IdOiswbVLmXQnLvejtMev3D4YrB2+DyUUnhf0Idsna+dZXxzqd34d
zzTUi+iebSnfdFyDdaHH6Id0D7I3EY3bcFkDoU5zGfGxbjT0wvFfifsa5K9c
3brj0Y2yXu55SfmugWZnK31hVReSc8SXPPqwBltag8JRmp0ox1mCgjF2DfLm
7FadSTvRaVePRwMJa9D7hokmP6sDjXmSLRqlrUHu5+EWiqMdyDXwGLtd4Rpw
9Z6sLK5uR0WJtO+iOtag3mU874pLK7qYcr//Sc8afHk7FosTbUVvUt9zsf1d
g8mYSZqR9Rb08Mupyi9jh376UTt+fdWCFvPObf1YWYPI8BEm7uVmpFaoIe22
sQbdEsbHIuyb0a/v0e/v7Bz6OXG3uIekGfn/unC9mWQdXv83MlvB2ISu1F7S
H6RdB6J38nWTpw3oXb1eTvKpdeAMHz5ZsVqP1huT94zPrUNrjOPrEr96VNnK
HrnIsg65rlezX/6qQzp9XE14vnWYra5IkRWqRRHz/MKXldahbvhX/3uTKhTy
+WjKJ5V1eMDonJfHVIUCDf7SXH20Dm751tmLvyvRm16fGX6tdZBvZ6RIv1WJ
bKsHY8FkHfa+BIvmn6tAqnEBpJpv1kF6vPTNMkUZuv9Y/+XA23UIyIEIfEMp
UmK4NaAbsA71j74OLgWUImnfscJnoetw7N8X9eenS5GQrZipbdI6cF030i7W
+4VOK023Bv9ah3uKr9f9z5UgumNEdKp8HShdZMiOFBajk5WhXyKr1iHmA/7p
4KNiRC5K8IpvXIczTIPpBRHf0Tp7hEhm7zp4M6p+enS1CHXsScXXrq/DbesN
JxSYj1qKGKkUttdhMVAd/kI+any1aPd7bx1WPepxH5bzUOV09P1O0g0QMU9/
oqaZh/I6lsnG6DZAZUyzwu3WNxSamfDi4PoG/OK+HKHA/hXdurHY3HxjA2Lo
qnuKh3PQQAHwxwltgJJEs/7N+Bx0pXRg7TbagDn8zOaNCzmopI3pPwfFDZAs
bI3elstCOmovhuVUNiDBvnknpi0TkfaXSJ57tAEBlwPKT2lnIqVxDYoirQ04
s7342ex1BhrZiAxeM92AeSeBEyul6cjbaWql0mIDLjRZkHiqpSMevIhq6KsN
KGWweJ238BnZUnYx3nTcgJVlI4Pey5/RsQunUix9NyD8epdKQOInxCcRXPAv
bQNEa8KRzWAK6qgeOluSsQEP37ez3QxIQQ53+Rx9czbA9quFgODtFFT58Ddw
FW1AA5Pz2lJsMlIzPlFnVLMBr+oeHqmxSEK7/7SuCjVsQIovfzkzZxJKsMwI
IPu9AYRm987QwUQ0Y3/3fkrnIe9936L+QSJy8X/bNzy+AXhZnutjsgmIjbYH
+zq9Af94diYLKBJQbdiVBNe5DaCNDj1z4n08oouvMbi4tgHCQxvnGWPi0Mev
ZPNapJsQJetkGF0Zgxo73XDdrJtQax5CJH3+AZEzGLkbcWxCYCCxzPn4B0RQ
kSdd49qEe/NSJPeyI1FeAx0FHf8mOFuYeU5sR6Do0mRqBdgEthOqhvqJ4cgk
vYq5VHMTIsbuJERzhqKUyc8JSk83weSdTdqLv+/RwOVA1r96m2AprPNDKfQ9
uh+vyrH9fPOwnyd1hcjeo1uhk9cE7DbhgGNElGslGFG4HMPSQjehNWn7YHbz
HZIomfslFLkJDd9EC5HHO+S02Uqoit6E+MC99+LU79CiVZTUSNIm+CdO/BPn
CURdxlcVmL5uHu7HWxlPe3+UqqKoGdS0CTy3Ck/SaL1FQ4H8f5lbN0EBfLKK
9n0QY+Opp5l/DvnElb9FST4oUHpAr75vEy7NJ4llzHsjGzELE9KZTahqw072
hL1BUuzB9nbkW7B9oevswwueqJIFf2Lt2BYku2+8/fnHA0kxvUx4eWILHg+8
mucJ8EB36FVqTBi2gKYlpuck3gNJ42lPabNuQfTb27SOq25I5m9Qjjjags9N
xrg9cldU242T+iW+BeZUM40KUf8h2T+WXaJ3tkCf5MRx8SuHuEF5/6bCFkhT
jD1bl3VBst9pFDg0tiBx9SP1WowTkg8LmqS03YKAt5R/3/jao/ognKO3/RZI
xn06pnndHsn7W54kdd4CgUGZDsd2OyTvoSy457EFR3Uufwi6ZIfuvqTxWAje
gg+ckanejbZIQTGI+U/mFmyM/Vcz8dgaNcricpW/boF8V0i0DY01UpCyvNOU
d7j+AoPdidpXSFFM+UV1yRZ0hrEZyYm+QkpcNMVFdVugIytY5s9the6RBT2K
Hd+CHPkcR4KwJbKrtx8wnN6C2F1J0bAFC5T0Tt/4+twWGMeQ80dZWaDVc8L2
xNUt6Oj13VRzMUeR1wdiho9sA+8XCr+OLy9Q2UoNe/rRbbgdcONGotgLNFP0
Ncvq+DZ8upK0xtZkim5LepUeod8G9+0GWoE1EzSkxjPGzroNeQ3Gx+vUnx/2
+2mzefZtONrtJRmx9gzdGDlYK+Dahs9PWzKn3z9Dni/aj8ryb0N5iMarIx3G
iMvN4aoJYRsC51lumzwzQlbptVZZT7ZB7pzocdnf+ijaInfHVm8brHlaU8rc
9FGlQIwnGG1DCCVpsomgPjpNtAhvMduGl+Tn7osk6KGS9tPFy07bkFpGTn7H
QxeNReIkS1y3geNLTmMJ0kUnn8w0eHhug8f443q0o4N0pn7+ZfDfBtJ7Zxke
v9ZBpHsGeOHobfhp9WpxcP0Julau5HsQtw0RSWoCuc5PkKq3CH1t0ja8fq3/
7Qn5E5RGS8X+OH0bEul//Md1QRspcHyTdfy+Dfr0H4XLn2qisHv4IGLXNlg9
Kk0RuqmOHjb9JyLTtw2VvOIszb1qiO7u/lDzwDaw9lmGpXmoHfbLDv/A+DZM
Zp89ydCjit5ga+27K9vQ1VAsIRvyCNlenT4jSrMD/BbXGaxEHyCBz8alZfQ7
0Hx8WOrm6n20zDHxTO7MDgz+62RYy7qPzFlHv6sz70C53sKWKed9ZHzur+Zr
nh2o+HX+XQWbClI/2hqfJ7sDSU3/DakEKqHTXvdkbyvswOWHM9xfmZXQH5Lm
xYp7O/DmnIdEWo4iUt6vF29X3YEX/uqfpHsUkNxa5eiSwQ4Qfyz/l3r7LhId
LeLkddsBnV2SsTsysmhTR7ilwPMQt0mfDp2XQQUD+XbIZweKRnYUOSJk0I3e
3DrFdztAz1r8lHRWGnG3Zpi+iN2BjpfnsrlS7qDzxITsz993IFzBXVpPXhK5
k39QdP65AwPtTr4U+xJoWjH4n3LZDgj1z+/350qgwn43zs3aHUi8HdC3d1EC
PdjWi5fu3gFm00TqxKPiqFhcE2Ps34FAqtW9W5UEdOntg765wR3QZ7bP/etG
QAtnpM6ETe7Ao/qlfQEcAfkJsr8bXd+BDWdZMKZFaNnpwrXC7R2YkfzlbRiF
oceVpxp893dg+TJjhyg7hjgfkB+9Qb4Lan7KDoqE26jCctLF9dQuJHFEkyv5
iaKdL5/NLwjsQqNHuvecuTDSW0mkWhLehWCTj+g6nTCqE41KrxTbBSJ75vGB
AiEUUec7YSq5C6py5fLWpELo5qTpk+L7uxDnUjw5nC2Aoq4b7Aao7oK9w6Aw
/okAwttqRelq7MLbnxWRBicE0G9SxU4KvV3YN2EOH7W4iUxZryupvdwFrtIB
MjHJG6jtOccst80uMJjVtC9v86NbX5l99+12Id+ws7D2Gz86SqCu/ui6C44p
maw/r/CjZO1FbPXdYX2JTjPKF/lQX2TuteCsXcimTUoWfc2DuiLhH1vuLiSO
csZtnuBB7ZGNaQX5u/CoiPG3WOpV1BA5wdb/Yxfum999IdbHjUoiGRk5G3ZB
QFJf2FuVC0VHupP/nNyFeH3Hp80BHCgikrry3r9dqMnp930myoHeR8a4jczv
AtNu9BnhKXbkF1mwe3R9F9zeOoQ+lWFHjpEzy/dJ9+BRQbm+If1lpBl5f3CK
ZQ9uxBjafh24hNQiB2McL+/BhZ6FyNiYS+hB5AuNk1f2YPD7Y1oXzUvobuSb
jpu8e9BkOrd8op8FiUUWN7hge2D+PjqVvuUiOh/JWsSgsQesNhP3RFWY0JnI
bJtP2nvA3vm92XPqPKKPvH1TVHcPKMINnO67nUfHI1Wznj7bgzmDa4y6hYxo
J8I3Jd12D5LJHZu/CZxDfRHLQYT3eyBzxds81+I0YlY9rlMWvgc5RB+lx8yn
kQ7DZV6JqD3wPZhj4Ww+hcaCHjVJJh5ibst1Dv5TaP5t0TGZ7D1Y9jY5L03K
gHBOLu6KDXvweVyhN7WPFkmIRqg0N+9BSfEIYTKKFnluZrPca9uDmk8CJnSa
tOiYzfAv5Z49aAvSqzw/QIPozKV2HkzuwdDD3C7CX2rErkNprXFkH26eSJj2
NaNCz5jZJPvI90FMm8nOjpwKpfeL0WlR7sPj1d4ffQnH0fXHZjnatPtwkK6v
PN9DiUTut8zqXNyH9xv0p/O0jiF5qXBDY7F9MPknx+6WQI78SbIFptA+XGMr
PPlaiRw1l9YceS6xDwPvOF+E75GhB9hWooncPkwJGhURnpIhLSGtATO1ffgQ
hVdr5SVFFldY1axf7YOMEuvsfyQkSCMn77z4633Ibwl/U1CCR9IiMkMnHA/j
4zw1jtjiEZPsi+ef3PfBUPfJ5+Y5HKo1LnDsDd4HlUD2Asv2A+zbgizhU9g+
XCz0dX2seoDFve4jtf6wD/4x66vX+vYxG29c4InEfTBQyq5xnNnDWD/JJxBy
9sH5uOW/AeZd7ATvX4MTefsgqbVBrp6zg20WWHD1Fu7D8173QA/JHex3dWju
K+I+LIwvK3aZb2NOEwOVqc2H9VAe4f7ZvYl1sr+appo79PcIZz/v6hpWlkmW
1bO4D3R8/bPjsWtYhmCkVerqPgj9E2VfkF3DPO4cDsPdfdgZklGcSFrF+AyP
nnx1/ABIIPBjr+EKdn7uQxtQH4D2jXXfmHMrGLkNTwQV/QGcDfE779u8jP31
VGFJZTyAXy47Ux1iy5hvSvSNHq4DMMW0q76xLWE2PNc3Pl47gNRmCTrVoUVM
J6+0xIr/AOZEfnDg4xYx4cpxKapbBxDUEPxKl2kRGxvlVQPZAzDKPvLwu9w8
hrFVOn40OoDiHCqR/fIZ7Jf+v6f8JgcgcKM0rEpnBkMpdFI/zQ7ALe37y7WD
aQyx61J1WB8A04/zxx0kDjHnfgypxwEoTxz/7Ns1iRGuivzSjz+ASGtz9WRs
HCs1fZq0kHQAYpbUFFkLYxgh480bx9QDCKl90tWZNIaJX+tQep95AMDq52hF
NYZJ8FoNlpccwCq+LlVvdgSTupmBY+0+AAPa11Z9fUNY5av2scy+w/zm9Mo7
sUOYVN527a3BA+A3eyG9rzOE3RGUC1aZOICoy9Hk4u2DmLTwxCW31QNgvPR2
fefYAJZyIeiSJQWOMJcRantQ3ouN/UymF6LEEVii8n5X6/Ril58Uku0exxFI
Na5+Wj/owVLiBqa9qXGE5aTvwo4SPdjHi9dy40/jCA/Zyiv9urqw1Ev1Er8v
4wjr+6yPUrAOrDg1ireEA0dQpHBUEJr+g/2+asr06QqOsBFJ+Hsm/A+2KUi1
7sKDI3hkTB3NX2nH5OWVPl8/vMgiSdwT63+2YU9+M4czCuEI5qVl83dftWGv
Hi64k4vgCAs/V9TWuNqwmCdBWgNihzx6xZMV1YotWLVRB0riCAkhRsFib1sw
0s2kXfs7OIJr8sacq0wLdtb51bShDI6goRQe2EDegkl4M1Rgd3EEBqEbY6U0
v7HQaFXbufs4QsddFh6h602YSGVvv4IejvBGaYKMj1iHKch9qRMxwBG8m7Sr
utXrMN1mx4LLRjjCzx2c8tnVWsy3mylo9zmO0AQnYyR4a7H+2SeSGS9xBBc7
U4UPhdXY4ktevshXOIJu3JM5Be1qjGzjgMnTBkdgxOs4GpNWY9fxieua9jjC
uUuLXCWqVZjbqdHPx91whE/iOhzSxyux8Khv4RvuOELvvcvjH0oqsPSLnh6j
njjCmSOND7nNKrA/XOzaJT44wkUjuuy59nKMAxnTmAbhCG2P0VP77DKs3uif
bX08jmD5VdLLSpCIkTS4vchMxBGiFC/mJZf8wkR5z+oFJeMIgt+9FXMkf2Gf
N6QUVT/hCCv3Tg+gxz8xH584tpEsHOEzN62u2YcSrHRW4FxVDo6gJad2JP9a
Cbap3HAyLRdHqHDiZUisKMaMz21umRXgCLbUbesKq98x6XSVlq2fh/6ef6Au
/awIczk5VdVPxBFe7yk9OHKsCCuwcikhluEIie+6mAS+FGLsYl9SvaoO87lT
ePWuFGCkjaTOtE04wqq5nXJiWD5WNlfIxdV/WM9KBUvQ6W/YporSRaoBHOGe
ecUAdWMuxlcwxrAwiCPAsQb9XPdcLMGFFpc/iiO87Uk8q7TyFXOhNu0k/MMR
Gji84NlwDlbwCt/INocjSIpxNXjF52DzXRFl5As4Av3ZMKeUJzmYdkJlRuMy
jpDmsKb3hZiN3eZn9lDfPsQf29NE+zIx67A8O7FdHOG2zfClb0aZWMaWvDnz
/uF+aRuZLq9kYOfLXz8ew+MJP7YeNX+mz8C277fyWh7DE1yfrGME43SsyNqz
3/ssnvBMXUTP/fEnTFRwXFeeEU+4bEy/8or0E/Zj7c4kFROeQNIEGtE5qViZ
7dHl4It4Atk53DkHqlSs3s73aAwHnhC6P9940JqC9TsF3cgRwBOYTxk+TgxK
wp5gS4VWQniCFX1cC04xCRvaU8EERfAE6+aMBFXKJGzchV62WAxP+OwQdL/L
OxGbdw3XrpTAE8ru3F1qCkjADjxjfLqVD/UIIX0Xr1jM/c7eiej7h/mOvnZd
PReLkZI/ea/9EE9IYPd7vJwdg1F4X4wbUcMTBALTjloMRWM0b5O+zT7BE1D8
K96O+1EYa0DaAM4MT/AiiVHqtYvAUhSPGVSY4wmVBa65j9kiMI6TJtNelnhC
4Gi8P83vcOzqu6urlNZ4Qt5/Jlt03OGYQHDWsVOOeMKrWp+3y3OhmHRYngDX
WzzBoODziYDPIVisaFserR+egKPv2R1+GoKtDi4IbPvjCUfSl4oenwnBErmv
CjYE4Qm+VlPf498GY7vEREGzSDxh54R4LJVjEHbfkJj/KApP4CG8urF/Kwj7
TPlXEMXgCXJ0+VeHV95hqo/OClEn4Al/Z4/jgrYCsa8zgUJfP+EJT3ymPmSc
D8AogjIKPnzGE1jXPWOq0vyxJ4L1Qu5fDv2i7+VLEfbHqFzJhB9k4wnFzAF8
4Rp+mNEpJ+G1AjzBwT/INCjvLcZEeC5yqxpPmDS7my/37Q1mNf6m6FItnkD5
t4Mi6/EbrM43RYSyHk/weyV8yhr/BrPtGBTpa8ITdN72xlA/8sJaTVRvOXcc
nhcxjenF457YFRrr74ZdeIJZ2cWZ5h8emEt+8C2lHjyhsHpfbtzcA+PBNd26
+BdPuGtdt/ap0x17EyYpWjZ2qCda9idJnhv2V1S3+PMEnpD1n8sci7kbJjDk
IhoyhSecIPpv3udyw4a5i0X1Z/GE7el7GcNJrtjtUj4xslU8oSJMnsJM6j9s
aebCbbkjJAS8lmBzbowjFjJLpkBLRkJQnJ84OSrkiAnMz2n2kJMQtgVwBb5t
Dpjt0k/H55QkBBvulHTukw7Y9oZ2yVtaEsI5z8oExnA7jJQsTrT+IgkhTEpl
Tn/MBvtI/kY+5BIJwVbzs96X9zaYNIW5hgYbCYFRz8yBScoG8zmOHGY4SAjv
4+84mqRZYyfoBr5TXich+MnRBIu7vMJOX2S+dfc2CUHG/a2qqeZLrJCFXI4e
kRB+Jl59a3r+JabOOq/eBySEsRHxArV+Syya/ZedqSQJYXDk36sJHUuMhedJ
kZ88CSE8v6KEZNoc47oVJ9yoTkIQd3dWGvcyxepF38iEapAQtFJR8nMWU+zF
bXM1La3D9T36Vwx+mGBZgF7PPiUhiEQNyaZuPsduSA8UUBmTEC7l/GhudHuG
3X7ALKRoQ0I4Oyqec6/NEMMJNCpRvSYhMHW5DJh6GGKVDA7GDXYkBKG2R+If
BQ0xxc6OSDknEoIr/fGIp7EG2JPHATt3PEgIv6SZpb3s9TG3p7ulKJiEoN/8
oVNNVxeTJqT37IWQEKSaol64s+pilJfUl3+EkhAy01mvBo3pYCEj39jEIg95
Rmt1WVMdLMXQ9I1wPAnhmabhRBrZU6zatPcuXyYJ4RTH2l5gtibmq+BjsJBF
QtDFbrS8vquJ3bsm5JyVQ0JQ5xZ0qp/SwLrng7N48kgIH8keHPnAqYFNv5Sj
5SohIWAWRkLK+eoYlV3R/xoi83Co8ziO13x/ztA0OabZCeOmlklyDB8+g0lI
mnVFy1aONk334RGmBx3q0WOkVaGyrNhqLEnt48j5EGbXkaRVEqE07egg0rL+
f7+e5/W83n2cNhrqne++tEwzGLq2xSiG2mmo4dkhCqgNgktO2qr5Mhpq9VLx
1fuDYPXcASf9LhryvvCmBnoDwVpsnsd6SkOLRzzWpDQAhKeyd64cpWHzDr9U
A4kQJryXHpsZo+HpvQm9G32FkLJclPbiDQ3fWH1SSlQRwr0c/h/Fchou1Aov
LqRsBWa5/Jvz50X/gs3aX5b5Q/nxEDpnmoZB4qOeHhe3gI9Lo7HyDA07D0vO
iFhbIKH1sk/X3OIf1YMmTlw/GHzhfiWKENR1LradOugLcYXS295KBGNMB9Ij
lXyBvodZZ61CMO/GeGZcrg/wP78fnVEnuP1Xs+HjMm/4Tf3q+gsMgh7+odPG
/E0Q66D4u5JDED43FdMPCoD8FzqcY0yQJ2Nlq7AFkNfYPHXSlOCPDJbCq80T
/vLLYftYElTXyG+VmHsCN0oQO8glKIszKqz66A5tlmVJTbYEB3Qlb46UuMMu
BSuzxI7gSKdjyNaf3CHrxOSDw44EI+uD5Du6+DAtyVVSQYJuLV4RP9chZAQr
r5LzCZZrGvY3JCFYsA+t7fYgqNbPvM0GhNDijQG5XgSVq8KEF5LcoKb2Q76N
P8HJ3Zx+Wi5A6oSXy7YIgunPfuh5ZsWDGI2kl+wdBFf1177T6XACH+u7Ka92
Eky13ycuEzkB/TC7LTaa4B7XaL33FY5wfXYyKElEMIpkun8TOsCfqjkHCk4Q
7LmhJhY9soNcq07G7kSCp1RqXcMT7UC8mbq/RkwwPqQiLGqdHQgk+7/dSyZY
9tT0UdH19dCj53GuNY2gvsLz8rnTtiA3kxfIswm6T9vMFCRz4W5s8NtjOYt9
Ls22lKpxIb603mbhGkFN57O5nlY2oGz/S82KosX+a/3iavZ+D4YC1z77CoLt
vQ0P3RytYCythF1/n+DROTvNynhLkMoYkd5VBPti9TSy6i2AFziu2N5AMPiV
8rw83ByCIiVqyZ0EuZM7C+mPTWCiOOvKkccEZ2Mrz+yxMgGxPNs85ilB4fNS
X+ZZYyg5dk3g+5LgrfU3l8j8jcClKr8XRgg+8RFnias50D1fGMkdJ2g4O+ow
vIYDX8/eStZRENw7Gy43ZRlChkxKV/1E0Ll8qUGCjQGYrCi/8XWaoG9heOmE
rT745TyofTm/uL/TGZ8sZEP+nebZ37UovAhj3PoxJmz40JqWx6BwKHvypPZq
JrRv6NDL0KXwO5V1zPZQPfj0sHvDUX0KS3hbmemjOpBGnjTHGC3y/7CIvZ0O
sDf1B4SaUXgo4rVRYpo2bOwePORqTeHNZ8EVFvyVMKAzvGSdLYWC587nHIsY
cDBsNMPYnkLOc6mXgxYDro68k6q6UhiiW/Nh1790sLZQuMzxKdQ93lHpEU2H
RtHHjvcCCk+89p+fql8OIeVTYUPeFCbGTIR01GmBfGrmbY8fhdLAmn1NLZrw
PzBOI8E=
                    "]]}, Annotation[#, "Charting`Private`Tag$2460#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
m39AuglVHHPfFTJjUX2HO66LZxMIj0iOCGlFIXKGpx5P+TehULeBbHYzEhHU
FEjXzm+Choa4Av5DJMqpoztGJ7IJDbY6s6enIlBM8aeTSrAJyW2cTVHB75Fp
agVHse4mJDyJPpJ8KgwlTaQkqDzaBM4bsx3pje9QP+9bnj7DTdBkvz1X4f0O
qcdr8W+bbMKJPhp55o1QdDVsQlDMYROoh/sT28ZC0DFXCuxr2CaEisiQCgwF
IemiuT9XIg+Zrbm41SwIvdpsJlTEbMIHaX6ji5tv0aJN9M3hj5sQyy4U38b4
FnUaCyixf9+EffWIsHtGAShZTVk3uGETuGQ7fUTl/dHgW5E+juZNcD8XROCa
9UOs9YyP0ts2YTa1KsAo2A+9les3rO3ZhME60Wt9vb7I7pqlKen0JmzurVtQ
ePugm3whjg7kW2AuSsF+n9oLlXPhT6xRbAGnbcT9zQpPdJPdOsH6xNbhd6FK
TayrJ5KlV6syZdgCJ3ae0PFlDySHp2V8yLMFeR4WMywT7uhWX3DWDbQFbD++
1NKv/4equ3A3/9zYgh8iW6a/PP5Dt9usOqVkt+DK9il5MtpDrlPdv6y0BS2j
9rr6oq7o9k8aJX6dLShtqciO9X2FFMKDJyjtt4Cs6rWj/UtHVBuMc/Z13IK5
GbbTQWyOSCHAiprUZQuqVZtNVoodkIKnqvie5xYEFm3rBpx0QIrWNJ4LIVug
XM7T5lZkj5SUgzna0reg5sjxmu8Ktqj+Ni5b9fsWLI1xSL3E2yKlm1ayDTlb
cOGU28LNny+Q8jVV88qiLZCsGlGeFniBVM7TFBbUbEEmMaRxg90G3SEL1vww
tgX+O+85OAWskEOtY/+TqS0YmQ/fzeq0RB+DHhsLzR32l3r4gE7XEq2ySDgS
V7eAOboj2cf4OYoU6o8dOrINON3TKY/em6OSlSq+1KPboOl+ZMyV3xxNF3zP
sDm+DRcOh1SjwAxdl/EuPkK/DUjBZY10yBQNal8c5ePZBkUGQdkGWZPDeWey
mOfbBq10O/Ox4WdIdPhgLe/8Npj93Prs5v4MeZm3Hr0tsg0udyKLzpUZo/Pu
TgKmhG2YZg8yiNd+imxSq20y9Lbh7VCenkXxYxRjmb1jb7gNL/96tnC9eIzK
xWK94Ok2yPXH1pCcfYyYiJbvmyy2ga5Kog1CDVFRK1Ph8qtt+EbXKs1tb4BG
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

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2460#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-10: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )]},
                Dynamic[$CellContext`i25$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.834189642572337*^9, 3.834189956929157*^9, 3.8341901814398417`*^9, 
   3.8341902696841564`*^9, 3.8342235973057423`*^9, 3.8349692964827595`*^9, 
   3.834969628422887*^9, 3.835036083997815*^9, 3.8350478325167975`*^9, 
   3.835104414904025*^9, 3.8353158983167305`*^9, 3.83544371069322*^9, 
   3.8354480034835377`*^9, 3.8354619811456823`*^9, 3.8354623135478287`*^9, 
   3.8355255610400195`*^9, 3.8355564171635275`*^9, 3.835561417614876*^9, 
   3.835573944584274*^9, 3.8356414754488735`*^9, 3.8356443213868694`*^9, 
   3.8356445113664293`*^9, 3.835722637305082*^9, 3.8357233742094455`*^9, 
   3.835723746140234*^9, 3.8357238685033627`*^9, 3.8357240381552687`*^9, 
   3.835786325414618*^9, 3.835787373117625*^9, 3.835794239926337*^9, 
   3.8358115223437877`*^9, 3.8358118849999447`*^9, 3.8358125789885745`*^9, 
   3.835816414832179*^9, 3.8358170687348504`*^9, 3.8358266118353577`*^9, 
   3.835866223572899*^9, 3.835866392841344*^9, {3.835869593792054*^9, 
   3.835869619965547*^9}, 3.835877987240788*^9, 3.836009634802701*^9, 
   3.836075223721013*^9, 3.83607852682174*^9, 3.83676518974378*^9, 
   3.836765232231854*^9, {3.8367652796897182`*^9, 3.836765300605771*^9}, 
   3.836765333751686*^9, 3.836765547134993*^9, 3.8367666804339123`*^9, {
   3.836767834772024*^9, 3.8367678631779003`*^9}, {3.8367686386734123`*^9, 
   3.836768678252962*^9}, 3.836769239559236*^9, 3.836769347684482*^9, 
   3.836831513674597*^9, {3.836831546435491*^9, 3.836831565589305*^9}, 
   3.8368316854955473`*^9, {3.836831888762738*^9, 3.8368319075434*^9}, 
   3.836832140448154*^9, 3.8368322714142857`*^9, {3.8368323570124683`*^9, 
   3.836832433155534*^9}, {3.8368325435217123`*^9, 3.8368325578655453`*^9}, {
   3.836832906805708*^9, 3.836832951873623*^9}, {3.836832983643754*^9, 
   3.836833012052833*^9}, 3.836833403217998*^9, {3.836833433519249*^9, 
   3.83683351844981*^9}, 3.8370061132819366`*^9, 3.837006200653034*^9, 
   3.837006248561706*^9, 3.837006294424973*^9, 3.8370077969230766`*^9, 
   3.837007971592724*^9, {3.8370207111012793`*^9, 3.837020731109929*^9}, {
   3.837020905468396*^9, 3.837020926042306*^9}, {3.837021039972969*^9, 
   3.837021062244933*^9}, 3.837021144827467*^9, 3.837110023369629*^9, 
   3.837110159951054*^9, 3.837110205773378*^9, 3.83711026472755*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"2b9bd112-b0d1-4b91-9d09-c74d8f28ac71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.6 soliton profile animations in Intracellular electrolytes", \
"Subsection",
 CellChangeTimes->{{3.8360747219089694`*^9, 
  3.836074723870101*^9}},ExpressionUUID->"fb6da92a-4bba-4254-954f-\
f7b969261fb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"7", ",", "0.05"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"7", ",", "0.05"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.05"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.05"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", "25"}], "*", "cbeta", "*", 
            RowBox[{"10", "^", "6"}]}], ",", 
           RowBox[{"235", "*", "cbeta", "*", 
            RowBox[{"10", "^", "6"}]}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "Bold", ",", "18"}], "]"}], 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<U/\!\(\*SubscriptBox[\(U\), \(0\)]\)\>\"", ",", "Bold", ",",
               "18"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Dashed", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.05V\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.15V\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", 
       "\"\<Plot-11: Animation for soliton propagation for pH 7 and input \
voltages 0.05V and 0.15V.\>\"", ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "8.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8322625839759893`*^9, 3.832262785380455*^9}, {
   3.8322636560149674`*^9, 3.8322636602529826`*^9}, {3.832324282973139*^9, 
   3.832324285131631*^9}, {3.832324331307181*^9, 3.832324359205298*^9}, 
   3.832324527140525*^9, {3.8331263837268877`*^9, 3.83312638531533*^9}, {
   3.8336713926910524`*^9, 3.833671393289646*^9}, 3.834184221374984*^9, {
   3.8341896563325095`*^9, 3.8341896596759453`*^9}, {3.8341901924680023`*^9, 
   3.834190193088411*^9}, 3.834190256313871*^9, {3.8350495560714836`*^9, 
   3.8350495800109224`*^9}, {3.8358164708012905`*^9, 3.835816533645261*^9}, 
   3.83586624805158*^9, {3.8358696580695667`*^9, 3.835869687843508*^9}, {
   3.835869719107854*^9, 3.835869724377887*^9}, {3.835869815771974*^9, 
   3.835869816545681*^9}, {3.835869947232011*^9, 3.8358699474093924`*^9}, {
   3.835870168224985*^9, 3.835870169041963*^9}, 3.835877915217329*^9},
 CellLabel->
  "In[630]:=",ExpressionUUID->"a1f427c0-0983-40bb-a46e-1313aac217b7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i26$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i26$$ = 1}, 
     "\"max\"" :> {$CellContext`i26$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i26$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i26$$], {1, 6, 1},
                 AnimationRate->Automatic,
                 AnimationRepetitions->1,
                 AnimationRunTime->0.,
                 AnimationRunning->False,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c4ln8ftZKUeKSUvUopqxLx3PfniZAVShRRZM/IyMoeGdk7e8/szdcW
KqQUKaGsJHsl3t/717nOda7r/HkGt4HNLSMKMjKyOXIysv+jWdnKcLH8IAr3
Hvy28pRO6t2mQXHE1UFU+d1GKySOIHUZH/JxOD+IyAyYlZXJjkvt9VaIYPSD
6FDQ4f3N3+xSkT/sg94MDyCytkL01lBIqp55E/tlNIDmw2cJNHdVpZh2NxTU
afqRlNEJu46CcCnNGJppOa8+ZGxHZjA0wkgc+cAyU2LQh3zc8ADvTyeI95kE
Z09c70M6Kgd4PIpZifpR6vPT1H3owje+tlR1PqJlROKif0gvMte60vdqWozo
HXphsyuuB0niXZ9/2t4jFvup0ciXdKMQzv5nkhfSiSKdBodehXWjqtkF4sa7
LGI5lQMts203iu8qIjRfySfW+iQcmbnUjWT3EqsjvcuJku2FdKrHu1HAucsL
r62qiU0UzUdrNrrQVRkbi0eCDUSS9AA95+cuJCiXU3/BqYXY5jXJEFDXhb5u
spVErbYTZVvXCH8Su9BqmClx7sJr4muyg8e03LpQTSwmKKj0lqhIOsWEdLuQ
azVDjAUaJL71OH+cH7pQ9db3UTWvj0Q1hJ0I4+pCDhFX+b8cHSW+31Nl3iT/
z6+MOZc/apx4Bzc4+WCqEx1I1WaX5J4ifna3P9Xd0YkS+64dPyg0Q9Rp8mcR
zulERpdF32icWCB+241njQvoRHZWBhsqVMvEh8RCtn3TTlQkOvIzJmWNOOXa
xG6i2IlEd54Mcu5uEY0b+jn6z3cinS7zu9Jye8TZnQlOcbpORBUafyNIiwKz
kFzjSl3sQFGZ2sJZV6mxRWdqnoMDHeiVwED85UVazLbuJK9NWQdijSNw/FRj
wNa2BPg+RXYgzdf0D0U7j2GOEthpsO9ALRFXyKrWmLFtJ9UzuXc6kF237mvG
g+yYW40+P714BwKzU6NnY7mxvY0nZ51OdqAXAp3f1FVPY15X/M+Nb7ejEJ+t
p3Lvz2FUjvEC8l/a0bQrRSJSEMbGl6iEq5vbEcUv0dpHNRexegvbS6cz2tH9
S2ek9QyvYNHTX8Wj/drRscOmF073SmI2+opESrN25GVVV+BFTcIUx6pJdsrt
KIzRiuPiBRmMT4tXdkK4HbnKzl9gX5LD9gfDFNSOtaM89abZO7ZK2Kjyrgra
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
angVdf/Tww3SmEQ3iGK/b4TYu3bC8N8oGmbdFeJG1ehaSkInXFR4dkDZcJFY
/cxSt6emEy7w1mWInJkjOsnvda5+7AS54cyV+P4fRAmGcCGOtU7geOxGjJGY
IG595o67wdgFNx7utF70HCPWpVfs24l0gbrNsnRCzCeii7msafLNLpjjXmlj
9R0iSl36NNBt2QXNOx8L5M4MEHf/ml5dCeqCJvMgb4n6XmJjx046W34XSD9X
R4vsXUT30BBa+e4u0FK0bMBV2oh7HKVfkii7gVTp5O7OUEf0LB0qWoJu+L4U
fKvuXBnxmrPRcVa9bogWElNIMikiUkhvusu6dQNNglE7eOUSfYdYVBNru2Hv
2qKN1sk0YsCG/rKM6GsIrrNWWRJ+QVzySdA0UXkNy8+z77crPyfeJQw2BJm9
hrlVLsLZy35EgQsk/8H01yC/yk4K6XEnvtPnYH3A2ANBi0rPfAytiExvR6+7
rPbADN+or22KMjEt83Z8aVUfGDphr95xHybWqckCu2Q/UKsJvfhoECilv6fb
8thqCEr/bGtU6lpLGs4NOqzsDsMRGwEPobtGV6tYqGr8XEaBxoc9x67XQGJ5
bd/26PVvEOCSqTDroSDOfHH0oc70d7hcm1HrEShzRQBPkC0YmITrLNEfnBj4
xQytxJfIy3/Au1tZcjt0hMscM6JGc3bTMJwowGzpfOSSihghru/eLAS75f/Y
V18R3X2rHIVxzYPgqoiWYfK8CLeUlXLBkQVI6fVernvzVtiqz7KPc+k3WN9J
1aP6WSkkkfOa6XTFH1jdousmBZUKNhX4hjK+WwK+nukHGULRF1L4hxy0y5fB
VDU+Wu9t8HnGK4TWM5ErYHYoUGnlb4BAa0mr+ZLvKlDGteK5P2zOlSqnbXuZ
rEGMwJpD0pLJ2VGN5WkG3XVYQW/mWSqU+OMWRcX5bm7A9+irE/SMl89EF6dZ
7gttwlb6Yxd6C5HTb4a9yD7zbMFIZovbuwomvuunI5yfUm9DiTuTVcxTOl7V
A+F3kn9uw9RWkOobWVqeGFXycPRpB1Tnv7jy061wsaK0V/l1f8HmHFk5P/kC
55f4csGIkl3QjWSJomwe4PgStxJOivoHy1/kSakJXew2Z3m07J/sgfPX3qg3
LO1sGG+Ha7bxPhwLygqf/ZHHmsPdK93PR0bqCH0h/EI1g6XX+JdjbyoZKfXG
Bt7a5nuq1t53LOAkOSk75ib5WVerk3IxlZfPPScnOc2KLFemmzAvz7MTFSgp
SLM6LtWHLqmcIN7muKLiQEHq/8OzXqB7/bi6b6z+sZ8UpO3uklX73mtMPvPy
xLt6lCTJ81bxPWv8x+48Cj/k1U9JuqPmLxgixsOYdoBR3WWQkpT9mPF+4Td2
xvncqPgnQ5SkkxJE3VKPk4zPFmL5jT9Rkp5yiTzZc2FgzHNIllUapyTNhDT/
m/3wj7ATUOB1/A8l6RPDhfpSm8+EtKKO7fyjVKQnF/POexiFE+Zvyl3LZKAi
CaWxnLb/GUQQW+4OfMlIRSLveNZ9j96f0CvWxxx2gopU0TByf7/YnbDaPChm
z0FF+j6p6VYwZk6QG/xmiwtRkZ598fmyTCZHCH/ysE5chIqU7T79gv6INOHL
8Uky0YtUpABOlYTkRIzwWPtnGO8VKpJZ66Dx+flLhISpX8U0OBVJOpySQYCa
h/DDz2qdnERFWpHkdFoOZycInf1D/HuNipRIo2S0BCcJbZYrfb9lqUiZbhmL
rGoMhCP09sdm5KlIOTnWtXpttAStsnXt7wpUJF7hCa2olQOEjNtOGSNKVKTr
ferP5MgoCAvrW3PvVahIqpQb7jcC/jH8DzhrF5k=
                    "]]}, Annotation[#, "Charting`Private`Tag$3472#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
938B8Mf+BQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3472#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c4148Tt0JGZhKRPUNEic/7fb6EjETKShkVQlZGRFkhkb1S9s7ekd72
jo89Q/YOWVn9+v1z99xzz93r7rnnudcdp6ntnSdEBAQEfv/E//XToq3BPOUe
7H5Yasaqj7xM155pXtj1HkyChPN39tENGUm0z8dJuAfzT/Z+ONGmLHPSXnIZ
oenBXM51zyuHasiEzzoGdg7isd6giMKh6/oyVef2kJUneMzoYW2qhJi9DOPR
rooWeTd2oBuTsjaXKKMTRT6v5NWBme31P2d3O5QhcY4VUh5rwFi/XOURJW6U
Nde3eUdr8wUjLrerizL1xFVavntJffULduF75hui9944cvcsK4qTSmxHEBU5
JHqDy0mYViN5X4klENcmd20G4lZndKj28yqw4yotpTD+aJydDQRPrpVho2+S
8xO283C1rw09xsvKsPp+Anuy3UIcXZjrsxGPMuyv1F/VA8kSXHFJya0+6jIM
FXIc1k+uxBE34RH8QClW5tVQqThbjbs7uCby/VMp1u2mvYhFYbidff4zLSKl
2BjfDJGtXCMumtV0vbamBONt5IjX3m/DSaMfu6pulWC4aaK+1gw8LuD2l28V
Z0swc/PaZ8hYL27EeDC/9EcxRhizRWFnMIATcvidUJRejPEfhKgqiQ7j3Hxo
Q/KfFWMMc90qOyZjuPZIkdefpYqx/z6l0ogSTeJYM1Rts46LMIGWgLXM9z9x
1hXmRulNRVhBknUw/ucM7mur7+2U4CKs/vS5/RafeRz1aDIk3ivCDgLZE45f
LeEernwT+8j2z3+ZLE9+chWXfzR2MW6uEBt1Fnp+pLeB+0v9hyY6rxArKZUc
4PbZwmleZCKIcCrEzquUk+TubuOSLl/ZCEEKMVMe4cfqNXu4zf80p4JOFWIR
58dKTk0f4HwyRpMY4guw76xN+bfsT3A8bYxe1MIF2Lr5/tUkHCHSvKJhQlad
jxk3bQut+hIj5mfe/keolo+9HiMvj2YhRcjFGzgPR/MwNlFr/wmy00i29jHh
jmUetnwuKPqBHhWi6nxtev0gFyslTw2Jp6JFVmPt6xcDc7HkV66j6ZfokeDq
zynTLLnYpKwOW1UkIyI6Mec9nvMZ82RSvGeqcQ7BE3A8GpT5jDneuDFq9ZgF
sec2UMC352Aa5laX6WfYEHqlSO52gxzsKR6tP7fKgZRYdBE3LmdjuiGU7V8E
uZG778hna9yyMavioDXNEl5kJ0++sYIiG3sf8eRkJVwAica7pxV9yMJeO/3E
1vuEkWu/y30/C2VhskJ3qcBHDBk+u/k4vSoTszGwPqgeEkfcpIUVE1UzsQyl
031hkpII6/0nvHGjGdib4rKXr35eRRJumukwmmRgnV8SBx+LySBcV839QxbS
sfiVpl/P9xAkg9uiksImHdvxJzvO5P0PEaJ7uvRmOw3LWM/Oi0xUQPJPnrIQ
vkzDBixIbKidlBCJVUs1d8I0rCDDtVK1RAUpH7Fy3/NPxU5JTLc/e3oLkWmx
znM4k4r5B5MkPOrXRL6VPptYi0zB9jY0f0bIayPyKTY0T1lTsOwMZe0ECh2k
OcRWbjY5GYvXm2xyv66PqHjY2RsJJGOD1nT15BOGyHdL+5TR/CTsDomFeZKv
MaKl59B3TyoJy98PH1dbMEVy3s2Tp7gkYvJ/8zP5U54gRWaLlrG+CRjtAI51
o84CqfxvufN92Cds3k7MSPqeNVJ7YVX0TcJHTMa8+ZruVTukdW8t9OXneEz7
vLlzabADgu/9tWVf+QErvevNmCTrhAznbd61aIrDLsbGkX9Qf4FMBvwuf9gb
ixk68JtvdL1E5h/tMN+bjMFOi/9lJ+p7jayje25qq9HYooh9bpOUN7J7/s/4
f3+iMAd2dduTQV/kZPsAlSaNwvQPU2ntRvwRUvxRkihDJBbIPD7Mo/YOof58
QsTLEYFpWyEcorgQhNGP4AmrSDim/k41xWUyDLlgQtRCJxOGtSSTfbnuGInw
4EgEyZVDsV2uugVzixhEV5SK6TjzPaaJMa62tX1AzGZpRpfqgrCTWtc9nqwE
xPkDQ8LgWCBWyNiVVB+YjLzRPGfasBOA9VNos6kwpCGRpKx8hTT+mJwB53OX
PxlI2lf25Y+Cb7CH7ba0/ao5SIkDV/5bBR9sfOK7xQhTPlIvwOfg/MAL00s2
P5t4rQhJq9G2bl5/hZXdTt/kLi1B6gXvbydyvcT8G4dbIoPKkZ9Rpu6uOi6Y
yJr+6rWuLwgBkSWJduBzjH+O0gUNqEGQ8WlmfXdb7GKyWdip+VrErXRTgGrW
HIM2/9I6nQakMojgOqZmjM2rHQmWczYjy23s4bNmWlijCoXhsnYbwtE3E3av
mBO7fxBpqnzUiSjkqN1P2FaB1nnttvUoPJLJE0C9JGQICY/7qFgOexEmmTLn
urwn0JNTT9lbOYCMmGSYnVF6BqH/+dhNjQ0jXY1qn0VsHWBHUiprwWEcKdC7
wX1X1hnGX6tGaitPIaGruHg3MjcQ0dhs5UmeRhw8pRiS+zyg82k21aTWHCJE
EdM00+0J5rUxNjRmiwjL3QjCvTJv4E8iIWBYXUEoE0IQio++IPozY1B/+xdy
tPDOlc3bD4xn2CdGbm4hq+IBZZctAuBt2Kf9vtVt5MdL300FjUCQrN7+br21
h3Q1eYroSgbB1r66YY35IfKNxuOpJct7yBQN6Fkw/IuIpQ3YUk+FQAnTJ/dT
bYSo5oVzssO9oeCnea1/SJgEDTBT+JZdFgY3NCksP06RorWFtv+9jA2HbkqJ
ZK2t0+j+QXyj+ssImC78bWP7jBq9rNiqzP4wEujvMRBSF9KiFiHb7b/kosCb
izdeZI0eTRrh0KjjjoaDzYEf4i5n0WHuWz3hpDHgnJD1ylKPGaW1cb37eCkG
7kbZvAj8yIrerEwfkuqMBXo65/BBzYuoF1GvAVlBHOz2kKSJ1HOiVeonP4bD
PsDiWsIOIw8PuhUtZJLjGA9Tj8qOu4b4UKGfOrMvdT8Cb7Dn7L1FQdRU2Mf8
lswnSPRg6btgKoJ+cCpYZmdLAH2JMoXk7MtoHzb2bONvAoyEhejNzUmgVBTk
m3XTifAo2sTzl40UyiXEUtVmmgQXcuJfUN2WRtHbhS8l+pNAre5z9XKYLGrg
qITEKyYDY8HPnbYbgDrHjZ8QVyRDuDqztV71f2j4N4daa4EUqCSvprt34Qaa
P0PuPRCXAj0eXFsk3UpoO3miAkqZCiZtskcPJlTQeRGpU5nuqZDT0fC+S+cW
SqTd0UyzngoJ4w+OrqVqouwvTAJeGKXBMw6BqcSJO6jMpz2Vn/g0KMXbqxea
3UN16oMpVeXTYVuejrxYUQ91WOD+XlySDlvRX87c9r+Pvqeqes/KmwGz+x9+
10kboTnimpq+0Rnger28+02pCdqsM0+3RpYJ203nuWIZH6PTL9377rlmwjle
SUCbzdCTJPqob8uZ8FOGb+Jp/1OUpTlLh98wC6YZjiN91Z6hV1dQ5tDvWRB8
dZSr56Mdeod2YGQfzQa0wp//wZADaiNlFW9SmA221N2Sjg+d0EADwgftnDng
VSJ94T7uBZrxOob9SsQ/e/6SYYX7S7Q+TWQqnuQz/Mdyx+7bpdfoRFtDMonz
Z1h/ZVdTlueFHqzrP3q28BmcZp1pJ6h8USbGDZ5BvVxo+eLQ6lbjh1657jeP
tufCc7P+J67tb1HNhxeyMmXzoHSBrwKVC0atfYqf0ublQcBrjTjr6FA0IOum
sCt7PvBRWZGz4cPRtO8Tqz9D8kHB2opcVicKrd1yzFclLAAaUQFnsiux6Pg5
SrsShwKY9NXQ5naIR/dxyeIXZgtgadOOBONIRCmK4l3rhQrh5FX71kJGMhrb
YDbq/KgQsNnn/nyn0lC+QXFZ4Y+F8JNTlqOqNAMtXTyKn+wvBJp+e9Kg2mxU
/rDlKIK6CKxXtOWOJPNQPHXEg5tKRWC+47FyOrQQfcjx8NvRqyJoeeuwNtFa
jK5KCF4sqigC3yp1MhKNMtRNcfv1k40iWOhku1guWInGbN2XHhEphpQeF6aF
omq0NLFhQ92qGMb8UEOFbxiKVxfOrs0qBldGIpMz4vXo2p9wE8n5Yuj4RHmq
c6QRpcg8OJ/FXQInUtUqlPMtKN9d015WkxLwo56p1n3cgSoQtgeGJJSAVlyk
6IMn3ahxvrgC8XgJMJBHprGe9KAe9+MOnc+XQt7cjoFZYj/6gZywdFmnFJ46
oL2sqUNoeZmF9cPIUjhLd6kt4dwY2meK5+ntKQUxzEfVmnoS3aCR/qFIUwar
2+IiZR0/UaqaxKgv6mWgTBlIl/xkFhW0JNMQCSyDwcGCzBnjBVTpnC1pcksZ
vNf4DBUdy+ijxsFvjKfKYa+f08+yfB31tEddAuTL4Q2+WWAobhP9yJ4hdvS6
HBhxLWYul7bRLx3Ui7Y15RB+KnPQ8OIeOvjCKWnmoBxMTPbT4zwP0C3eH3q6
0hWwtu/vqGF8gtL03aDrcKqAnRyepJcWhHDJM7cNLakAYZW45p+/ieGmCKN3
8UYFWF7ULPeYIIUnoy9l+EQroVnpRcr1qxTg7T+zFWdVCc9cDoCc8gwkSKp9
ps6uBMfzVU9ir9FB9c/iR17zlXD1wXuGvmoGGH7PcmGH+wvcLGLQlUpggm1Z
734Lky9w1zdGzWv1PNAtLQWNJ3yBrMU5r5flbCAaraWoOf4FJBVdKFjJOEFV
4ctxw/kquK0mrHvFlxvMNzjKr+lWQYPdx4DHD/nA91OAzefIKiD/On2snCoI
SaobfBd7q+AQDb3+3FQEavZ0J8NpqoE2TWZ3avAyjKZhMaS3quGSM4fxgPoV
2NXi13QLrIZfacLX8OxXgeHve/L1lmroasx4LmdwHS7n7taanPoKQfmxyoFn
EFDXf+g6IP8VSo3qdjMz5OApabO4iudXOBdj/dL0rAL4lYgsf635Csj59g7S
SUVIMY5KuXz4FfZWxPADtCqAUR8bpEnXQAzS+fb4izqMVz1mYHaugcqndRwb
Tprwx7yz411JDeQF2KxI/LgDTGclff9u1IBiQofKpYR7IFEfj3su+g0cOWsD
F5r04LYt8c681Tdg3fwbcOeRIVhfsMozyP4GbNOCsnUKxhDQ1vuka/4bBM1e
PEuYagrpzjLs8jwY3H/+PDrK4AnUc6cMlplgwHejxkrRxQIm8KdDBBMxkKu6
651DZg2HHvbKn8YxYF+kfnn9jB0ERa2+JqeuhXuOc9L3HjsAizWHYb1wLVxc
WHQipXOCLPm70u6qtVC4nzJSxPECrp0PYLz6tBbukk79dE5+Cc2/qjd++deC
OUOjgGXqa7jb/KszO6MW3jQpsFpd8IazIV5S/Y21EFSTEXEl3xcGdRkSTqZr
wZHJa0bqoz9Ec6STChLWQb5hzQ+K34Ggu3TVVvtiHTh24RqXat8Dc3HrkAdS
B0MXJJqWA8Ng2M1ALut+HUDdJZgnjIQ4hdWsXtc6+PU8rMW9OxoMqF7RHcfU
wcN85b9bJ3HAOkDjxl9eByYGbTP9Hz/B+Kfkaa3+OvBN8DvrN5YEn8yuqLlv
1YHqS+MoV9FUeCjWVJJBWw/v9MkYi7rT4eK+zoUe0XqwmhrlNWjNgqnaRd9D
9XrIdUq/b8yVC0lv3dZ4repBNz0o32SxAEzuUOlovq2H93qG9J30xcDFmvDN
LbMeWOyMGkYdSmF6Row/vakeJspu1OmwVEBqbl1I90w9EP7OYJaiqYLHTtr7
fwgbIIbG+8EV3RrgReeMeTgagJflZL/9ZS3Mk7q0aaAN8LDpuNzSrR4yu8kl
XA0b4HFg+96F7EawiP3wIdWtATSzQ5mKyVtA0OQScVdsA3iS//45HdsGy4Lf
rPbLG+BgtUGBVK8TrKp/4m79boD2MGaKWcEesJkQmNy1aoQIqWv8SnlDIJZZ
pcwZ2AgXmdODtW6MwIateqFaViNopazeJm8ehULpCWbn5kaIVf1U5CUwDvaE
dl5Js42wd3TpaavJD5BoJ1xuJ2qCRmFFvInFBGyFR9zZ4WiCw4vdRhNXJqHk
Pm/1RWiCnwNcZ81qJsGRp4Jb9UHTv3kdHjATTIHU2s0gx5dNwN4R/WX2zyTs
lo1uJ8Q1wdm/eh0VOZNQ/sr6QVtFE2j8cjl2PjsJLsonTb8HmiC4nfaFGkyA
NG2oKPt2Eyybrrw1FPsB+8OcMTfpmwGXSDymtT4GX5JL/jpcbgZCiyGVpjej
4GapaPFJoxlIWj/ylvwdBtkrQ/gW62aQcnxbtfNkCI4OLa5vBTbDex/ymYG6
AfAIDqJQbmmGgQW7T2NuvYDqsD+3n2sGYeJesttzeDhhLxyLJ24BY6Xq+GKs
CzwL+3I3oAVOT2p8GuVpg/9cn5xlfdgCVHPa6PrHZiCS3/NQdG+BoP3/OmsV
G6GB4u287YcWkBNJ0398sR58+1huf6hsAbWG9LhJgVpQ/Jhb0TjYAvJHf+qn
ar8C6ROU49d2C/j52Ai98/8CzSL4gPMMreD2gXbYKKkc/HdNNhXEW4Hnbo9L
xKlS2PCJ0zG/1QpPuVXuXRoqAj26nurAp63Q/TVt4n59AdQlkHPmv2mFGA2V
3AokF4Quyfn1JLeCQGHdk9vnsiHii8vKdk0rnBI8ZHBXyoAjpQJN5tFWmDQ6
/HahIRWe9M+Xye62QqequW3im2ToMmFnNaJvA6w9V+j0mUS49uuep7doG9i+
uOL41SsektyD59JV26CwcU4h1iAWyCmaVNvM2oBbbzV8JTgK7GOOCla920De
7mDzFH0EjPJInqVNbIOj0tVjvolQkC+2crtS3QaC8/XHI/3B8BlSJ3WG2iDL
difXzygQGL+P3nD73Qb+HacsU277g4cBfc4nmnY4qpDu64nzhfkFFZo64XYw
x/dTblzxBg0nL8dZ5Xawk8na2GD0hAqiLyNkj9uBwDseC3zqDhyhG6iwZzs0
9eUq+DC7QgCbQJrGx3aQmlGbphRyhs0co9MOle3Qp3OFozf8ORhIx9hE9beD
2frH3Lab9tDQ1NVXudEOOR+tjOn9bOCSNun1caoOmB3V57z32xIip5CEvwId
0Bcz2mnYYQ7Hz5yIuRU7oGO3vqGR8AmYHeZaKJl0QHIA+i3ynSl0Bcx+f+rR
AS2ep/vOGRnDNaYLV4LjOsBlbxFvu2AISanasYVlHaDLFfdflY8+nBZ/d9zX
0wEBCw0VyW90wOFbveneWgd8TJedVP6pDaNqBy0sFJ2A/tH2EQvSAoURcRGU
rxO+vmns5j/QgFyzp+Em8p2QOmvt+FZXDRi3k/Z8H3aCtriMJBXXTfDwGjbM
cusEtxfBIYvqijB/hra+I7oTWMVs2Qc65eH2R2X+X8WdsO+lLTgaIweVgq+D
6Ls74fS81de7qghwVJRvSq10wvFY8AWC0evw9sa6jj7Zd4gYWJo6wl+FrR7e
r+7c32Ei9OLCJW5JMDB6wJkE32G539P2R5M4NKxG+jXc/w46EbWq143E4JJb
58q8y3cYlwq4LFAoDFFkJFoUkd9hPYtHoNtWAE4iZctFCv/Fa5TliYXxghnX
c1atzu9g8hz3qIecG7oLcjwdF7/DmAb3g8hODpBGpudiSLqAzWjlHV0mGyS1
n1er5uiC3yVBjtHCLHBaT6twAtcFMghlUjvzOXCYCzhLpN8Fddv5cY9MGWHM
odaN16kLpv6rlQk4poMbBPuTN8O6QOUFaZFqHQ3kBYspWud1wausm5QhpFTA
xGqeE9LWBRbbaglb1eTwOiuBpmSuCxp8OH+o9p+CRalBx0HCblAtit/ZVyAG
zQbq0T9s3aAu3v+gmoAQvmgqAptMN8wKrGedJj5BLYXVNJP0uqFqD28YJ3WA
spBqmXC7dAN9+/NDj5ldtH1KxyEjqhvoit08zh3/Rt2qDX0ES7sh6MpSdK3j
JioUbRqZ29sNLFrVNGwe6+ionUW62GY3JB38YZVIWkabeK/dHyHDg6zIs4lw
uQWUjaFqhuUcHoicsm2NNGZRZwLE2pAPD8++dDZVVf9Eu9aw7U9SeIjzWt2h
/zOB8o3Je0zewMMdK888e6ox9FVr0ynOu3iokutkY0kcQgfLbr43fYSHN7fu
5qwk9aOiqR1MaQ54ePj5dieeuBf1C9VInPP656d88+GPczc64dHDzx+GB9Mr
+d8fuXWgV63uFlok4UFCwM6W7W8L+l5vSDqnAA+pllrQuN2Izisa1K18w8P+
fXOz07fqUfTKDxWRLjzIpOgrje9iaDSHca/NDzz0r7Mc0C1Xo+vUMwaFq3ig
pSQeTDOuRJUOn8xsHuLh6TLs/VIpQxMWF62uUPYAgYemrmVMMbo7YLXtyNID
6UyvnpjiClGNhnX38n88LJffGOV7PxfNKLQ/tS/dA9XnO19XNGShJ5+2g6/f
7IEXAd6HjknpqM47F6aXuj0QHiK7sj+dgua/OEj4atYDna1qPA9fJaGkZh78
J049wPmKxLOh6yNqpE1QCG96AK0dv24oEIdWyvlIe0X2wHETp6j+fhRKK0pa
V5/aA1/XDGWqxCJQC9a3KiQlPWAdy9v+pC4UrSWn6lWs74G3pnmmgwrBKPPu
ewP/nh4YnC76HPf+LWo3QzfTOtUDF1W1dFO0/NBWfKQVxUYPrHHkq5V4+KAc
385tq/3tgYTUxHKPU17oi88f3IPP9MJkXPRoY5UHio9lO9XN1guNJ8LOzruu
qIBfUjCtSC88xc4jOrnOqOdzbqY7uF74skXMv9T5HB02zkiIUOuFzwZ86jmq
9uhlDUH+AYNe6LtVHxR9xQYNkM0tYLLshSbqbwp/jCzRKQExaT3XXlA897XA
jdwclWYqro0L6AXvy+8mjNkeo6HEUipjMb1wp1Bh71eoCbq4UdFzIbMXIoh8
xbXzH6JyEzIGD8t7IZ7yCC/QYYDGdtRMJzb1wsMThdCzZrroRqWc1c/+f/Xx
DEZctL2L3sxo+M012wvzid4S2sNaaFKEkvvj372QNf7qA5HwbXTfs40kg6gP
NsZkNiml1VBNG/XgBbo+sMKz9F9qUkaz7nefFeTsg5WlJDeh+hsogcqdBMvL
ffAiLDJgmEMe1bs6wJcLfcCcdViWmw1oIbdewZpGH4ynC4ZlZ8ii5HRj18Qe
9kG3Eo1/M680anLyoNbuWR+k2liM+jFJoWe6rrTkv+wDwrJtA74oCbTq0+mu
1bd9MHdmd27f6DJq9myyXyi2D67ly4//HLuE0iNlYxYZfbDLMOIqYCOIfqN6
N51R2geCm0kvyi34UMtx46XZ+j5gKJhXEsC4UabcqxtcPX3wSJeOI8KME61/
SbVnPNkHnmb7oYU57KiN2vRxwlof9JIUSx2eYkVZWCtJfhz2wfcHRYFn8efQ
5uVgSlaKfqDU4NAcOGREHaoe0esz90NRxFFekgc9yh54/XwMXz/g6chTUDVa
tF2fhmNAsh82t5kFDSqoUGfBOT4GhX6gVruA37t1GuX6UyWipdUPrPkrw3rq
pGhXa6hkiFE/FDDZGQtmEKNusWay35/9y99T8TxIkxDls8DJU7r3Q2v7Nvmk
zwnSe41eRSWwH16r9mk2zxwgr8gWb/vH9kOweBnJZtEeIjRUo9OU8c8On3qv
+HMbGcyIeEBc1g+uDbHN0mZbiLfz08f/NfRDYpXih4SrG4ioEli97ukHg/73
xQQRq8jo2bMONZP9oLDXP/tLZAnxm1t+cbjWD4r17zguXp5HJMpqX18/6gfO
GBM21eAZZMI32s+FYgBSyEKzkmV+IoF3rYPLmAdgvcc3FX0wgVzlkY/8zTcA
LloilV/rRpHp3+fixaUGICuMLWMrYgh537CWbKswAFrXkq2HmvsRmYiGrDyt
AZBq+/x6XaMXmTeNK1gxGgDSv8t5zFx4JFzCtlzQZgB8LL+jAzadCEqkWGPu
PgBOnfu+tGfakOUelsb0wAGQ7H3BdZqxGYlO3mifiR2AWSVCnUDHBkTevrmH
M3MApBNC4nt56pB1uY/DRmUD8LdmhKv76jfkA63D5KeGAYBKVGoisQpRmlKe
H+v5h185irI4VyBbBWxr56f+4S8QYoG5pUjC69+/ddcH4IbcSEndtWJE9Xbb
QdTRAAT8IfuaS12I7LInEvZTDEK4X33EkGoukrruSE5/fhCeS+h66K9nIZrf
VGk0+Qfh9ceIIqb9dOQomIPpvdQgkL18O710PxXJerB7oVNhEGQtsgQv0iQj
d0U6uSnuDIIQTkAllDYBIThOFrppPAgVBGFhQq8+ILmdLuJ+NoPgF72aYK4X
g+h9vCXd6D4I/kul943CIxESa24gejcIPaPDSDFHOFIo+0dRLm4Q2PK9lcu2
QhBDym71V5mD8CHX14WMPwghH0vT/lo2CNfn5z+0dwUgpTluBgcNg5B+dTpJ
efwNYuymaSLdOwihb3TjLRR8ECpVPgvnqUGo/bwq5v/HE6k8f2RTuj4II/lT
w17LHsjjpR6nraNB0IDZ6GRDN0SweLB+kWII4moDRT+ruCDrbmM0k8xDYOdS
bu8a7oiUKkwZDvANQfHVOz/1LjkgrlRz2R2SQwDkmQ4D1HYIOrC0Wyc/BD/k
2j8JPbBGSBLWFSo1hyD5stOA7ZmnSJvZ79D8h0NQTxi1aM9lhrwX2/+RZj0E
Xy+tquQFP0K094+E4t3+/VVX33HvKpogzHWEL8IChkBTX8Q3yfchMvGWtMk/
eggyQy/qx+wYIKl3KOlfpQ3BO0Siqh2vi1iw0ho5Fg+BB7aCDp2+h4jOMuZa
1g4BiW6DZkfUHeR37vk/xl1D0DDERXlkqYlUOrEr6Y4PwdyPCMVvhLcQD5Q7
4tbyEOQZLrj3Jqog8mQCUwr7Q3BC/N+LqRQlhBx/SUSGdBj6tKvHOP8qIN9j
xd0uMw4D1dnz38Vy/kPCTa628HENQ4jX7mqJFCB6QrKMbJeHwUjWLpkkXBZh
+w0mDOgwEJQq3Tow+HctVt/IP60+DHfPOGUs+Ughmb4qh3/1h0HPpDI6mfAK
Yn1L4+au+TDIN+tyQvtlRIJJO2rVaRgUQ/dGqXJEkL0J3elpn2EoLWar8JQU
Qr5mGoqNhA3D/uIZnDQfP+JtZ+LenTgMpwM/VAs850GUr5u1NeUNQ/HdZoIC
Wi6EisiK6Wv1MLBXPmhrX76I9LTbPipuG4a/zIHBx+IXkOgIx8KsoX/49/7k
qi0yI4aGrscJc8NwLpTsfi0BE8LJ+0o16vfwP35UCluyZUDm17xj3hGOgPGs
8U6OMB2SW+4/60UzAqW3Gogu6ZxB7F8Hib9gGwEuidaU4E4K5OrNsFc2wiNQ
3L94LjCXDDmkje54fH3k337BDeCXSJDakQ/M95VHIFlkbNXTlQjxS0l8onVv
BFY9X4ufaBEgalZpxcqPRsBTaqQgeuAIRyuZ/RexH4Fw4ZhTPS/+4AaP8tQl
X48Aj7yNpZXnLi6+qThOKHgEHukc2BRN/cYZv6+Y54gfAZbtZ2fUQzZxvLpf
r5zLHgG6SINJcdJfuOWLdZ7UFSNAbeH/ncpiBVe42PSduGkEArK+aC1ILeKc
itpZDnpHIJFoyVLw0RxOxq3bfGNqBMa8WahKZqdxBAr9pfPrI7DQpqpYWDiF
a6IcIfxx9K9eFn76OfcfuMD+Hxp9FKPwympy9SPVKE7z03R8G/MouLp/gEOi
IdxZs4VFjG8UmgmzC8nu9uNGRVelyiVHIWjECCe204NL2tvwzpUfBf/zIQxS
Vd04obcHF+IejoJQfnqESX0rroyFpOKN2yjsZXnwa99pwPn9GTvqiR2FRu3U
27t+NTi94RJ59opRmKS5o90RUo6ra0l8cqN5FFIOh9pbKktwQhXvAiwHRuHW
HYNzykgR7ijqUVf571G4dubrfUO9HNyTN7c3x4nGIK1oQt+GLBPX5SjLSEw/
BoML/hX3OdNwSdoMBrcvj8GK8GG6fkMC7gZdw9yC9Rg0hVYe/N0Jw+URFJCf
cR8D7bp7M65mITimjQ/Cku/GQOhiNUemwzvcYpeDvWf2GCzfJMk988cXFxTE
dcw8Pwb3hOs+WXq8wPWReTOqGo0Dw42eO5LFxjjc3rNrdjbj8IBgntvs8gNc
2ry+QbTHOAQ/9lbt99HHOTeJJ03Hj0N09f2I3VfaOBafn8Ivh8ch6G7nmZUG
JZzpiZxCrtYPYP97eduKQgy3uf3X/syNCQjNHK7pGz2SzW9GGcTvTMArXfUf
ls//yFrGepRqG08A9f018y6HXdlZ2cPdWPcJmJ7gO5533pQd9t59yV02AQy+
zC1neOZka2nX3kjzTYLruviozUGX7E2mNXVxkinosnoUcSo5SfacxKjx/fkp
qF5xL08RUpAVQuMUc/DTsOh3FNKw4Srz+Nm1DcLiWeAyJWH9FFV6nX1B/MmS
wzwYDCzVxtMcS9+Soovp0F8ERlEnA4l5Semj7+oRCMcy3CY7OW1V43aNU/aZ
eg7VKrzeL1xxfVZ09VmHdcfFjTWQOtPxzDB1WUo6o5WRt+QXyCuffSN8QUKq
Jsc3mL5rA6KlqvzFmZ5KJvD3ORkUb8LpW6dMR5fyr9BfpavjC9+C/sZzXp/v
7UrU5ddZbvj+hmfhu6d87C5LFKon/fEy34ZKcbZTsv5O4qN3N+dpH+z84x/G
xpLK3Msx6+LXeDR24ce7sQxjl3mxyLwk67+ie8CZ++Ya4Q0xsc5BL4Jhrn2g
VDnmJxUyE73BG+b6gvQP7G5zKshtfxa5fSr03qe5P3CfEH9z8PP2pajbhKHY
0AFIZ9F8/I9X7BIrllSQ/eUQYtZuFhhNOgqPxRaLhOUfgfeRzyMtz1yhsZit
ULmIY7BKeeVqeXtT0FaAS9fx+QmQx+gsEGVJCyLcjS/Tzf7C88v5BNiMvUAG
Z7t8Nw+BnADOXvrnuQr+drMV5/ZEArno/I7plofrfJWOvuP+zIRyrUr5xQOW
/HxKUaWSgm8J5WpHlHo3aOx4N5fZcCrERHJv9uwjWh0yeHDa7FdvORHJrZY0
ZxQurnBr+UabMMwRyXV268vt60py+ywr4/QeEsuN866cJ7tmw3XvUehpr25i
udwrXZW9OyWcSafotdx6iOUCVledb+oXcS5nRsQ+7yOWO9v/h8haIJ/z1Wo0
v9nQv3jHpRTT1gzOLKdPimqTxHLDQ3F6Fwk/cB7453id/UUst020GOa24cmZ
lNv4J/sMiVzd/m1mg1p1zmUNpf9SaUnkrPApEQ+Ob3JKbbYEfKQnkav8RLby
sFKRs12q41wIE4nc5gud9AgLOc7f33qkHNlJ5D7MDbeGVklwKvVM2KOiJHIu
atKbZmbMnKHPjb9cu0wiN34jO1pA6izn2NlpAnEJEjmJ3Jvpgzb0nHYGcyHc
V0nkXmECTAUjlJxxMyt55CiJ3CVvA6aJtr8cs2+e7RDKkcgl5d1s508+5BAV
+IU7/I9EznQn0fsb8T5HvfVWx5oiiRxbYUexBs8WBxWNI8OCMokcUpjhqPf2
F4du0Y7BlAqJ3JKzgCzD0xWOFG2XlBG1f/3xkt4k6FvgWN3ZX+q9RSJn0f/f
MkXZLMf/AD0z1a4=
                    "]]}, Annotation[#, "Charting`Private`Tag$3537#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c01o8XtisjshLZK4rskffzua89s9qSKJvISolCKCJKVkVkJFnZe7/2
eN+Xl5L1zcjee/76/XXPc+59nnPPPffccx/+e66mNhRkZGSp5GRk/48OP1b7
c7QJte9fu3T5lUvLd2/dy3mrTKg1oJYssaRUkJdDe194nSfU4nTkTKevq8gf
thdKIYyE2hDaDcFmNk35dxOeYZ39+NoKcUptMbZb8hWnt5A5G3xtWiDO0q42
QJ51f1PX5HhPrRrl0bwpjiB/Peb4lFZAR614QOXqRYKbAtWjeHHt3421lFsl
QeV1nYp2t1xeM7mU12406X3c4T+lzHXbRjhhMKM2yO2MpRW50aUaRj8HR843
gKbzGfIFZ6hcTCO5MoxFwt+DyudXjr6rGJ89rfKTGAVvLJfpdO1+qNTlu6o+
jX8HdLLqAmxTFSrJv/gM6wVjoUEo/NpzJrzKvfMv7C5fSoRl1WuxSnObKu5/
BbsKCtMhHltbyntFG/OGvuINl3AGHKPb1nxwZIDJkjY2DorNgOTzjks+NKaY
P099e689+Qq0yKKOwNBtjCkT6dc2+g2Cu+58cUt9iJFVDplC27MhTqRwYrgq
DmNscTbzq0oOKIZK+Y4HJmKcXxQ4MOXkwIr55VqZm18waV0j8/9F5kK4fOCs
q1k2pm7VM1ePPA/YcdO1c59/YIZO0z0sdM8Dk7bXX4xnijHbmBTpsxN5cF52
wjAJqcTQ/vj4pEE8H4J7Df+MLtZh4httBx/dz4cw3CUGeQYcRqRfWuX8p3xA
jtK7d863Y4qm9z+O9uVDlJ3Ci2YNPEZtr2U/muEHMJz8/LJKuQ+DZ4i+o6P1
Ax6OLwoxC//CWPBZ1Ow/+wFq1tQFhWqjmHkZMd4fpT9gYhhvGOUyjvHRXH9u
s/wDgnVyPZ+em8bErd5W+iVRAHQsIw84YxcxRZ8blw2cCoBq7dqzLvM1DN7g
/Le6zAJQnRINqnuxjVnYeWclN1UAxp4y3zNPHGFov+6eyRQshOpA+jvr6ZSI
yNV7RC6rQhjZFrWxGDuOqJO3h0UmFcIApPnMPWNELHOl1SmHCuHyC8EPF5dZ
EL/bCXuPzhSBC7eDpBl6BvlwnLxo9noRVOu9uzyzwYuUFNs7W7wvAvGRCt0X
KkJI7z28EJFQBFlZoyfKE8WQZUalYU3GYlC0+nX9qqIUQl/9OabcoBic5W5H
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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3537#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
spKEHgms7x/9HLxLIueh4fdt09VM4H81n/gq
                    "]]}, Annotation[#, "Charting`Private`Tag$3472#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
mMWN7e+DBnRqZ+vNVwT+M8L8DxAgf9E=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3472#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3537#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c4lv8btTMK2WUkyozs+T7P/SKjsisrs5CISlGJimyRHRlJskK2kuwV
Ze/5el/vsPmKFOnn98/zXOe6Ps859zn3H8/5nLx229yFhoqKquHg8f/3zbL/
Ror1+xsIivqtxj+LVHp+XSuOU+9v2Dp5e5xbtFRFCR187iPd3xCvJTdat1em
st9VIYew9Tcw3kSi5KyrVeLn70d+H+lrcLNC7pKgSaWW9xey5NLXYPqOfzc2
ekiFa2/7vBljb8NJnf2UZpm/KhZJjCS9wO4Gf7Ecz/wbRqp0vilS+pMtDVzb
z2qyOv+o3rD2imL3+tww0XKelv5Nhhr/VZfTqRO5DS80JS+2RmDU69kCbrof
jwHe0gWFnXyKup/uz6cu62WwHByofWs2QuNy+9r3gtxGSO7J+1hqpaYZtu20
oSPfCfdaJr0ubBE0P5vqgqBGL1zjVRxxn36OcZe+aJpl1QutHIxlJRahmOMM
Zk6iD3rh6j0lkR6hCIzfF9vnkpW90Eynbyrc+hIjyFlLOM7bB2vspTNHXVMx
MwH94uJxfSA00wQlmFKMisflUresPhAzDTa6qF2OibEaVSv82AfnW6lF7cIr
Maji9HmZnj6o0qg/9mf7MyZZ2HHAa7oPeBdoseUKXzGrRwg2pct9oBhTe7/e
vRGTSaF4KLL0gxAdzdGM5laMccuqf7VkPxznaTv2DtuF2c/4Ga1u0A9189aW
Zql9GIuoBzyPLfuBYf5O+IPCAUzJwz+Zda794G3GC0F/hzAMrgHi+z79cHbz
M0vu61GMwyWqUgjphzmNlqOCUROYT9jnaoGJ/UDYVH2tPz6NYZdlaGp+1w/7
gdY2bp04jBt/xHm6in6wpz9U6TGLxzQyHh7Qbe4Ha0u2IFZ1IoZvO8YmrL8f
Ls7Qp6dPkzF3CEcJnbh+yCK/MHcfWcR09iV6MK/3A3Ldxn5LZhUjXM/78+K/
fnj5NeYn3c465uGH1/7RrAPg1Pfs2DbXJqYvRZC+V3AAHKsXKnR8tjASoVnR
7DIDwCUWfcrs5A7m2T1RHnPMADyXCleMFtnFjDnmZiZcHICP7K22Cc/3MXLG
kuLDNgNgarqdJSFBjYRrFn3kcR+ArZeHr/NdpEVwEmfVrB4NgEoLqUK0nB5R
4ylvTA0fgOUdpLHNhRGJpVU+P/lqAM6FNnCE32ZBKOs1/QJ5A/BU9Rd6aoIV
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
Lm/tLAwY0WF70jJPTj4Wl/wfi6VehA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3537#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$2534#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
3hnzxg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2534#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
X2xpjBfhTvtM74/r/R8OMakf
                    "]]}, Annotation[#, "Charting`Private`Tag$2530#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2530#2"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"0.05V\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"0.15V\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-11: Animation for soliton propagation for pH \
7 and input voltages 0.05V and 0.15V.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )]},
                Dynamic[$CellContext`i26$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8341896613577385`*^9, 3.834189957659204*^9, 3.834190194149602*^9, 
   3.834190257996431*^9, 3.834223599577552*^9, 3.834969297609776*^9, 
   3.834969629140967*^9, 3.835036084877463*^9, {3.835049562660223*^9, 
   3.83504958228294*^9}, 3.8350496353954706`*^9, {3.83505000460083*^9, 
   3.8350500168394194`*^9}, 3.8351044158564467`*^9, 3.8351063518367124`*^9, 
   3.835315899271152*^9, 3.835443711577856*^9, 3.8354480043781447`*^9, 
   3.835461982031314*^9, 3.8354623144214916`*^9, 3.8355255631412907`*^9, 
   3.83555641798433*^9, 3.8355614184626074`*^9, 3.83557394544198*^9, 
   3.835641476415984*^9, 3.835644322269546*^9, 3.835644512097486*^9, 
   3.835722638148225*^9, 3.835723375020352*^9, 3.835723746911168*^9, 
   3.8357238692403927`*^9, 3.8357240390259113`*^9, 3.835786326212164*^9, 
   3.835787373843238*^9, 3.835794241141757*^9, 3.8358115238015327`*^9, 
   3.8358118863199263`*^9, 3.8358125798223486`*^9, 3.8358165085868864`*^9, 
   3.8358165423895245`*^9, 3.83581706959367*^9, 3.835826612650054*^9, 
   3.835866248973708*^9, 3.835866393597919*^9, {3.835869682903841*^9, 
   3.835869726760273*^9}, 3.835869818083131*^9, 3.835869948807457*^9, 
   3.835870170421309*^9, 3.835877987935422*^9, 3.836009635840932*^9, 
   3.8360752242376184`*^9, 3.836078527366293*^9, 3.836765190497751*^9, 
   3.83676523293853*^9, {3.8367652803553333`*^9, 3.836765301269698*^9}, 
   3.836765334422497*^9, 3.836765547801742*^9, 3.836766681062645*^9, {
   3.836767835499392*^9, 3.836767863924131*^9}, {3.836768639409917*^9, 
   3.836768678968299*^9}, 3.8367692402611437`*^9, 3.836769348341379*^9, 
   3.8368315143973494`*^9, {3.836831547089353*^9, 3.836831566276946*^9}, 
   3.836831686138135*^9, {3.836831889468444*^9, 3.836831908215597*^9}, 
   3.836832141239154*^9, 3.836832272080286*^9, {3.836832357690361*^9, 
   3.836832433851515*^9}, {3.836832544147211*^9, 3.836832558565489*^9}, {
   3.836832907490388*^9, 3.836832952498633*^9}, {3.836832984328227*^9, 
   3.836833012741684*^9}, 3.836833403957108*^9, {3.836833434176193*^9, 
   3.836833519082103*^9}, 3.8370061142023573`*^9, 3.837006201447846*^9, 
   3.8370062494467077`*^9, 3.837006295275032*^9, 3.8370077977508793`*^9, 
   3.837007972461398*^9, {3.837020711852356*^9, 3.8370207317343616`*^9}, {
   3.837020906260466*^9, 3.83702092675809*^9}, {3.837021040698254*^9, 
   3.837021062930513*^9}, 3.837021145517331*^9, 3.837110024091556*^9, 
   3.837110160593596*^9, 3.837110206421823*^9, 3.837110265413127*^9},
 CellLabel->
  "Out[630]=",ExpressionUUID->"fc564825-9180-43f4-a028-a9b9f4b951ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"8", ",", "0.15"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"8", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "8", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "8", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"7", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "7", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "7", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cWx", "[", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "6"}]}]}], ",", 
               RowBox[{"24", "*", 
                RowBox[{"cdecaytime", "[", 
                 RowBox[{"6", ",", "0.15"}], "]"}], "*", 
                RowBox[{"calfa", "[", 
                 RowBox[{"6", ",", "0.15"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"n", "-", "1"}], ")"}], "/", "10"}]}], ",", "6", 
               ",", "0.15"}], "]"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c\[CapitalOmega]", "[", 
                 RowBox[{"0", ",", "6", ",", "0.15"}], "]"}], ")"}], "^", 
               "2"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", "25"}], "*", "cbeta", "*", 
            RowBox[{"10", "^", "6"}]}], ",", 
           RowBox[{"235", "*", "cbeta", "*", 
            RowBox[{"10", "^", "6"}]}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "Bold", ",", "18"}], "]"}], 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<U/\!\(\*SubscriptBox[\(U\), \(0\)]\)\>\"", ",", "Bold", ",",
               "18"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", "18"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Green", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 8\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 7\>\"", ",", "Bold", ",", "18"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<pH 6\>\"", ",", "Bold", ",", "18"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", 
       "\"\<Plot-12: Animation for soliton propagation for input voltage \
0.15V and pH 8, 7 and 6.\>\"", ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", " ", "18"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "8.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8322658199215345`*^9, 3.832265820505952*^9}, 
   3.832322105399481*^9, {3.832322139779101*^9, 3.832322178123013*^9}, 
   3.832322253382391*^9, 3.83232232000368*^9, {3.83232243620301*^9, 
   3.832322465991253*^9}, {3.8323225878641167`*^9, 3.832322597197315*^9}, {
   3.832322767596794*^9, 3.832322775307626*^9}, 3.832322958859541*^9, {
   3.832323235775024*^9, 3.832323238722131*^9}, 3.8323233924384212`*^9, {
   3.832323564262211*^9, 3.83232356486661*^9}, {3.832323642909204*^9, 
   3.8323237391223793`*^9}, {3.8331227580535517`*^9, 3.833122775550757*^9}, {
   3.8331263889448433`*^9, 3.833126390297776*^9}, {3.8336714042878413`*^9, 
   3.8336714214101133`*^9}, {3.833950983433062*^9, 3.8339509846827803`*^9}, {
   3.833951019563887*^9, 3.8339510371177807`*^9}, 3.8341842138629613`*^9, {
   3.83418967224308*^9, 3.834189675983055*^9}, {3.83419021552973*^9, 
   3.8341902385098658`*^9}, {3.835049596984124*^9, 3.83504959763459*^9}, 
   3.8358165829229827`*^9, 3.835816621003558*^9, {3.8358166545167284`*^9, 
   3.835816666202242*^9}, 3.835866272047718*^9, {3.835870104453665*^9, 
   3.8358701549843388`*^9}, {3.835877937637165*^9, 3.835877938136693*^9}},
 CellLabel->
  "In[631]:=",ExpressionUUID->"ed7b5229-c4e7-4844-9e0b-5b899cc2f472"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i27$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i27$$ = 1}, 
     "\"max\"" :> {$CellContext`i27$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i27$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i27$$], {1, 6, 1},
                 AnimationRate->Automatic,
                 AnimationRepetitions->1,
                 AnimationRunTime->0.,
                 AnimationRunning->False,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
58KoOg6qNg0WZ/rGJbikRm+Yz03CUxa2LQMil7gwnqRW2DcNuht2l5Y3RERv
OsqukhNn4fToz9pTppoivF8lbeZd52Bj9nixyevHp3WlWRK6Tb9B/dYxYd+m
VKGd9zoxGN8CGMZsURiNDwkeV3TUKaRfgrfKzo/QvTl+x+473cdWv4NO4k03
w2HyE3K5HeyCpBXwEG985EmH8TUUBoWz9qzCWuTkWOzxi7xpQoPuZsQ1mCld
peuQCj7KKsPSfDJ6HRoH3LbGFtq4m0ub7VeDNmCV6niQ1JuJQ2U6Gdv+tj/A
/HZopHgcF9fopbU5ZotNMP5w9ELoJ2GOhGVJWQG9LdgI3vahjVdniy3JuLMn
9hPSfMXd7TwCWd4N+5N9PPELHkgVtz6pTWJSFYzyuk+9DWuGWudTHPoZ9Kme
G6d+2QbZKrPwXQcW+jh98ufon99wX8N6lFQrTHcEZbwqqP0DNIbj+jzkNrSf
EomiUaU78Mj4g5jqRS/qTwnrz5Vi/gIX66FsC41XlM6nTlx2u7cLfowy7pPB
SxQYf6tPzq09qJn6shC4eYA893jX+V4BMqXW7Xk3VzIysq5bix5d6WRKO2T/
ezVuQWPBh8iV/o9k6nEV506H7HttgYegdYDivyYY8crouu/bMCjeku3LvgMX
NAhXrh34r42tn//Lv3ffGVSsht79+17Ii0m8N7jvR0vxQrf+2Xe+e6qa9sS+
fwcX+nOs/L++4tbtAkbK/T49deWXzPuWXnv7NIV1313S3VyRnPveaOyXduPd
t3r/uAsutu/n927Uykrs+xPHNJmk1L7vmn2J5JfZd9LMYgktvu/Zx46b5Er7
Fju1QvijvO+WO+vd39X2Tc/kxvZVY9+XyzfNJrX2nWXkmTWive+lzV/zA7r7
/jeXf/5N
                    "]]}, Annotation[#, "Charting`Private`Tag$3607#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
938B8Mf+BQ==
                    "]]}, Annotation[#, "Charting`Private`Tag$3607#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
BwzKI6Bwp8b8dPfIWU7JoZtm02OgxMK6qUfkPCOCx6nkdn//Tx/ZGCyuiYrd
tpdZJidOwo+hX5XCJmqivDMSVrNO05A8dTzf6L3fKW0p5ph2k//sqM1jIp51
iUI7n7QiML450I3YPHBlpF/wuIK9Vi7dAogpOT5DD6cF7NvvtR9b/gkasbed
9QfI+WUzW9gESf/ZVRK1zx7RYnw1ub7BLJ3LsBQ6Nhx5/DJvklCfiylxBYyK
lmlbJP2Pskgz158MXwWufufN4bkm7vrCettl3zWYoz7uK/lhlKtIK2XL23od
rt4NCj0Txck5ZLAyzWS+AX8HjmoEfRVhj1mUkDmhswmmAVseNNGXWCMLUu7t
if+CQz5nXGxcnzN3DHiTfeH/DY8l8xtfVMYxKguGuT2m2oKjBuoXE+x66HUp
XxsmTm2BVJlp8K4dM12ULvlr9O8f6NK4NUSqFKE9glLe5VRuQ8aVEV0eciua
r7FEsbDCHci4+llc+bIb1deY1dcXIv4CKwtXurnqOwpHYX5j54e7wMAi7TLm
v3AAE2j0yLizB+cnp+aebxwkzzzedrHrBNmFxq1ZZycyMrK2O/OubclkF3bI
/ucqnH2H/bnIL/wvyS5FlZw/FbDvlTkegvrBA/9nwhVeaW2Xfev7RluwTu37
+Zwq4er1g/9nw1uv//Hu2ncKJYu+e8++57IiYh/27fvZQrTQnX/3ne2SqKI5
uu8//rne7Ev/Ly+/cSuHgWI/T+eS4lumfUutfHyZwLLvNql2zlCOfa/V9kg5
8+77Us/IA1x8368f3qyUObvvr+zfySQk933fdCpUQHrfcRPzBTT4vif97DfI
L+xbXHiJsK2474Z7q+0/VfZNx+jMOqO6b+PiDdMx9X2nXXmUNqi574WN37O9
2vv+L7ch/HA=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3607#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-12: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               2->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$3676#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c01o8XtisjshLZK4rskffzua89s9qSKJvISolCKCJKVkVkJFnZe7/2
eN+Xl5L1zcjee/76/XXPc+59nnPPPffccx/+e66mNhRkZGSp5GRk/48OP1b7
c7QJte9fu3T5lUvLd2/dy3mrTKg1oJYssaRUkJdDe194nSfU4nTkTKevq8gf
thdKIYyE2hDaDcFmNk35dxOeYZ39+NoKcUptMbZb8hWnt5A5G3xtWiDO0q42
QJ51f1PX5HhPrRrl0bwpjiB/Peb4lFZAR614QOXqRYKbAtWjeHHt3421lFsl
QeV1nYp2t1xeM7mU12406X3c4T+lzHXbRjhhMKM2yO2MpRW50aUaRj8HR843
gKbzGfIFZ6hcTCO5MoxFwt+DyudXjr6rGJ89rfKTGAVvLJfpdO1+qNTlu6o+
jX8HdLLqAmxTFSrJv/gM6wVjoUEo/NpzJrzKvfMv7C5fSoRl1WuxSnObKu5/
BbsKCtMhHltbyntFG/OGvuINl3AGHKPb1nxwZIDJkjY2DorNgOTzjks+NKaY
P099e689+Qq0yKKOwNBtjCkT6dc2+g2Cu+58cUt9iJFVDplC27MhTqRwYrgq
DmNscTbzq0oOKIZK+Y4HJmKcXxQ4MOXkwIr55VqZm18waV0j8/9F5kK4fOCs
q1k2pm7VM1ePPA/YcdO1c59/YIZO0z0sdM8Dk7bXX4xnijHbmBTpsxN5cF52
wjAJqcTQ/vj4pEE8H4J7Df+MLtZh4httBx/dz4cw3CUGeQYcRqRfWuX8p3xA
jtK7d863Y4qm9z+O9uVDlJ3Ci2YNPEZtr2U/muEHMJz8/LJKuQ+DZ4i+o6P1
Ax6OLwoxC//CWPBZ1Ow/+wFq1tQFhWqjmHkZMd4fpT9gYhhvGOUyjvHRXH9u
s/wDgnVyPZ+em8bErd5W+iVRAHQsIw84YxcxRZ8blw2cCoBq7dqzLvM1DN7g
/Le6zAJQnRINqnuxjVnYeWclN1UAxp4y3zNPHGFov+6eyRQshOpA+jvr6ZSI
yNV7RC6rQhjZFrWxGDuOqJO3h0UmFcIApPnMPWNELHOl1SmHCuHyC8EPF5dZ
EL/bCXuPzhSBC7eDpBl6BvlwnLxo9noRVOu9uzyzwYuUFNs7W7wvAvGRCt0X
KkJI7z28EJFQBFlZoyfKE8WQZUalYU3GYlC0+nX9qqIUQl/9OabcoBic5W5H
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
                    "]]}, Annotation[#, "Charting`Private`Tag$3676#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3676#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-12: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               3->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
z/8AWT80bA==
                    "]]}, Annotation[#, "Charting`Private`Tag$3607#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
mMWN7e+DBnRqZ+vNVwT+M8L8DxAgf9E=
                    "]]}, Annotation[#, "Charting`Private`Tag$3607#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
/X4mEN53zRDzP1n4eBc=
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3607#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-12: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               4->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
g/qM2Hnz98WeTCIS/wNVXY44
                    "]]}, Annotation[#, "Charting`Private`Tag$3676#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3c4lv8btTMK2WUkyozs+T7P/SKjsisrs5CISlGJimyRHRlJskK2kuwV
Ze/5el/vsPmKFOnn98/zXOe6Ps859zn3H8/5nLx229yFhoqKquHg8f/3zbL/
Ror1+xsIivqtxj+LVHp+XSuOU+9v2Dp5e5xbtFRFCR187iPd3xCvJTdat1em
st9VIYew9Tcw3kSi5KyrVeLn70d+H+lrcLNC7pKgSaWW9xey5NLXYPqOfzc2
ekiFa2/7vBljb8NJnf2UZpm/KhZJjCS9wO4Gf7Ecz/wbRqp0vilS+pMtDVzb
z2qyOv+o3rD2imL3+tww0XKelv5Nhhr/VZfTqRO5DS80JS+2RmDU69kCbrof
jwHe0gWFnXyKup/uz6cu62WwHByofWs2QuNy+9r3gtxGSO7J+1hqpaYZtu20
oSPfCfdaJr0ubBE0P5vqgqBGL1zjVRxxn36OcZe+aJpl1QutHIxlJRahmOMM
Zk6iD3rh6j0lkR6hCIzfF9vnkpW90Eynbyrc+hIjyFlLOM7bB2vspTNHXVMx
MwH94uJxfSA00wQlmFKMisflUresPhAzDTa6qF2OibEaVSv82AfnW6lF7cIr
Maji9HmZnj6o0qg/9mf7MyZZ2HHAa7oPeBdoseUKXzGrRwg2pct9oBhTe7/e
vRGTSaF4KLL0gxAdzdGM5laMccuqf7VkPxznaTv2DtuF2c/4Ga1u0A9189aW
Zql9GIuoBzyPLfuBYf5O+IPCAUzJwz+Zda794G3GC0F/hzAMrgHi+z79cHbz
M0vu61GMwyWqUgjphzmNlqOCUROYT9jnaoGJ/UDYVH2tPz6NYZdlaGp+1w/7
gdY2bp04jBt/xHm6in6wpz9U6TGLxzQyHh7Qbe4Ha0u2IFZ1IoZvO8YmrL8f
Ls7Qp6dPkzF3CEcJnbh+yCK/MHcfWcR09iV6MK/3A3Ldxn5LZhUjXM/78+K/
fnj5NeYn3c465uGH1/7RrAPg1Pfs2DbXJqYvRZC+V3AAHKsXKnR8tjASoVnR
7DIDwCUWfcrs5A7m2T1RHnPMADyXCleMFtnFjDnmZiZcHICP7K22Cc/3MXLG
kuLDNgNgarqdJSFBjYRrFn3kcR+ArZeHr/NdpEVwEmfVrB4NgEoLqUK0nB5R
4ylvTA0fgOUdpLHNhRGJpVU+P/lqAM6FNnCE32ZBKOs1/QJ5A/BU9Rd6aoIV
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
Lm/tLAwY0WF70jJPTj4Wl/wfi6VehA==
                    "]]}, Annotation[#, "Charting`Private`Tag$3676#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
if8PcexsRQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3676#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]
                    & ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-12: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               5->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVV3k01O8btUcoO18hEUoIKUvz+TyD7BTJkgghsiVrRJaIbGUnS5IKRbJX
srbal+zb2GbGMGNkSYif31/vuec893nuvec573veYzduX3aio6Ghkaenofn/
eev978FSnd7GtcffbsdrC6h0/blRmqTa2/jlp02JmLKgihLa/8DvVG9jZ7uS
vPMlIZXdtkp55HBvo63busd6uKhK8pxvbMdgTyNG2eSVo4+kykf+P8iiU08j
b8/5j1atSio8Oxt6JszdjVeri05caDFRMU9jxmuHtzdasqtaFm8/UmHwz5TW
GWtt/LKsk5DEzKjqfNUzjsPzQ2Nn9vVoWlKA6pFrThJZo68aHa5I1GcWEVUb
DofcchVMhKqV2mGSmoNakNZaqBP1PRDqaKyFOQbUrnxb7ih+1QShr9Uw7d4m
56M37Fc0FX5AuZdw1gfltvMfjLVAWK0bGLdxReIl5zGupwyM8y27YUUs4uja
YRQjyGRiLx7QDT23TMfvmWExQZ+sH5ys6obpcB7uOj1NjDD3x1lB/h7Q7Pkl
pzavj5kM6ZWSSuqBmvcb+m0SVhhbU5pyiOoFv3LhoPqau5g67AOV8NReCPC6
p80zFoThkGNqbnnRC4Ypj+N/y4VgmpjZ+rRaeiEop3CB9Xw4RrSBf81grxd8
TdgG+pliMLgTp1UsA/vg0Plv2t3XMjAqfBVNWTF9YOBzN4n3RhbmCf1ZvbGM
Pril3n9aJy0bg51Us7pe0we/a3crpfXyMfkp2sGOq/v8IrG9uOpXmM2wnwyv
6Prh3b9DhrdKizDGnoYJBM5+SMqyUfzdU4Kh0buc5yrfD8rSb+Lvl7zD2O/a
NHl59MMj7i8SRO4aDBdSPebyqh8ufPgbShBqwLTcY/tjN7Vfv0qL0Xr0BeNp
MPMvj9wPUG7G5KfwDSN4pI5hYrsfmMOuPZvc/o7x/ujAdVXgF+iyFfIX0nVg
2q4eFh1Q+gU2Q2pTatd6MGJ/P8qamPyC7+sj9vKC/ZigzJvnOz1+gZqJqu/J
S4OYPmUuPb3YX0CX2MS+wT6KkR76bP711S9YndN78cFjEhPhf8tRvfUXVOce
Yf/8ZRojpw1uob2/QIhd/GPzmVnMKC+v9+epX5AwkGbj0DSHeThPurtN/gX+
lraFjB54jGJ1U6jqzi+QfUxMQzBEzGRk+sOAgwMgZhH5eECehIm94p5QLTAA
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
/bwo/z/HWNju
                    "]]}, Annotation[#, "Charting`Private`Tag$2604#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
3hnzxg==
                    "]]}, Annotation[#, "Charting`Private`Tag$2604#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVlHc81e8bxu2Q4mtVVkZmkb06n899kBWKNCQZZe+dhCSSWYTMosgekZFk
JpnZexzncBz7UEaofn5/Pa/rdT/Xdb/v53lej8Bdt6s2VBQUFILUFBT/Xx0+
bA4Xa/c12FfUKuyrsSj37NwtjlPpa3hYk/W9IvY/ZXl04InP2b4G/X/2b2i3
WZX/dlRII8x9Ddd42egEeTmV4+e8I7uGextuXh36pc3Op1x7YgdZtultaOlW
Nr82cFaZ/WBb14j+R8Pn3oX3Mz+0lW8k0hO1Hnc2fBkjXZNyf6xM45ssoT3R
0iCdX3pJUf9A2e6WaxSL66eGP0PO9TSn3VW4b9sIp4y/b2BB3Jvu5+FU6pkD
HRy5YmHKTos5mtFU1V/z1yMb8gd4dw75G5zYpXrt23pX/vtGOL73bbX9s/aF
8G2rDQ2Z75B5NmHn6EzThU+GmsCr+gMG7kwFNs/LYqz+3ml0dxmAw5RInQsl
mOM9cm0lDwfAmvggm/JGGaY2g6FnJWIANp1ldhNzP2BYkcoJ+/cDEHlipvXD
64+Y5odMO5Yzh/uvDd8a4K/DeNbeY711chDov6tYu55vwQj+rpU0MhqEYJxH
2eDZDox/su2FbpdBOLl7h0YwrgfTr8Sqqxs5CEo0hRY1Y30YiZEvN1rfH/ox
F0ZgbBAT4utgrdYyCEJcRvofbo1ixjk4PL/MDILNn/zGCvdJjGxl4yOVg0Hw
8ddJ+56Gw0Rec46pPDkEm3aL4Ys2BAz+54k0GYUhsEk6Y3KQS8TEtqxmuWkM
wXHrdcLZABJG9WVLXrHREATXvLMV8V3CEO+mlC5bDEH7ou/EbvIKJl7WrUrc
dQiut7nrrC+sYVAqzS92AUPQHZe0pF9Bxiz1cX3NiRyCAa17wg5Mmxh1j299
ArlDwNR7Q9qbfQuzhk0ftagcAhNK20GW79uYVBbPmYyWIUg0f24w8noXo4XT
Jk70DYGe3xz2ddoeZrOUd/UUbgh+crjt+zYdYF4/+vnz5toQ8KhckSpn+4e5
dKV9L/HgkD/H5OlmBwXybs2bnvXUMKgMVVr9S6dGDOsvMRuKDsMtP1E9A1la
5CCGnzNWYRhku3m/XCXRIXl3tnm6NIZBPsGop6KJHrkm2SXEeHUYRJprxPSa
GBGKP1kSOpbDUHf7iofUEhNS1HVf5qnrMGR+W2SsAGaExlkIqKKGIaDi3VQ+
sCJlF35rYlOG4fRtysmvNWyI2dEf+kG5w1BSdzff0JADoZ/INq6rHAZ13Yyr
zfQnkI8F/qZ7LcNQ5V5T2DR3ErH0N7RS7h+GM3bgILnAhTBdErH3xQ3D1Xmt
2NNsvIj1Yp/P5sEwTGuyW77d40fEy4ebSYwj0Gop9fr6VUFkzX+Ceebkodbm
xyq2CiEfNXBmQyIjsNVU7OB4XRh5wDSf3yk/Ahkfpus1aEURdGhxu0l9BLJU
4wfVR8QQmtdrGjWGI6BDX0Hk6pFAYs/vTmU7j0BPGRKtrHgeMd49kEjzH4Gf
rdpN1CPSyMkmSr+4ZyOgZl2wPX9WFpmOoGsNTxqB8DDt6Lo0OeTd1aOsQdkj
gItsFcoXU0DsuVksvMtHYO9d15PdQUVEao69yLHx0P/2LqXIO2WkxodP6+bk
CBTRSfYfKcMggajQS4OlEUhID5ar/4Ui6kfEcBq7IyBYyjRZWoFF6HvPSarS
jUKgrsnGN1p1pDtZxl+afRTU3k2Op3hqIPFWim0igqNATXjVpHlwETGRuMDO
Kz0KxUJHUlhztBD854slDPqjQJ4+43rK/BKSG6q7/+/WKDwL3uMc89JHnA0u
62zbjcJT6e9K3RWXEVlO48QVn1Ewx71he//CENmZvonHPxkF1jzm+Z0ZI6Qu
1+z8WNwoKNDd9OnWNUZC3K0CfrwZBSpVySDovYYwUTlx1n0eBbOQ025yGBOk
r8PtXnn7KFRaZpd8FzFFkl56l+WNjIKTwmK6mLIZYmb24M/r+VFwllj0s/Yy
RwSEgy4l/hyFXNbwrnkXS4S4GvIqinIMrm0ySvjVWiFFVeFzj5nHYGa/6P0N
gXuIok5ckOvZMbCa+nXPS8sW2WdJ6rRWGYMUgurCbQZ7pHEs9eRt7TFI7rXY
W153QJ6+fWNjdH0M5la4b28dOCF6Ttnl2vfGwOkr+1iInCvCIp//D/EYgymB
WGdXPXdk+KBYX/7RGLx/OndKO9EDsYytJvKnjQH5TJ+29gNvRPhmndyJ/DF4
mPjdp+aEL7J0uin4WPUYlFr8R78+fB8pI7V2U7eOQYD//J2QTw8Qnw8dXHv9
Y2BxgLuENj9EVP1/2JFxY8BXMYAR/RWIUGgMfiSujcEf06+mIB6MRA5OXR5g
HIcb7uco7fpCEMMMfFr7yXHA4n/1G18ORThsF0gNIuOQ5i/4wmIxDBmXWlGo
kh+HbvXZjeXscCRzhxxSpD4O3irNC5FPIhCbxq0fbw3HYTan2I7qWRQiEbHH
k2I+DufOUEYZVsYglVw01WH+4/BI2NGuRy8O4WMkjxVGjMPXc2Zc69/jkae/
Jw76ksdBrdj69LRtArJOaju9mzsOTl3at13FkhCT0Qp1vupxWGliXSljSUaa
2t7YXPw2DqqdmNA9wVREojrqmePQOAjGdV9YvJuOHCTe66n6OQ5LzYIrs18y
EZuwKxuTVBPAGBpxsVPqLdLjfYGdmnUCEuXv1vs0vEOUrEWVxAUmoG2zmjXD
MwfJNGYzvSI9AbebLymo6OUiDBr/AnxgAo4WfHnyRD8f8ZRdfpN2eQLKRyjt
Dh4UIhf/a5lfcJ6AVck//x7LlyHFFKX0xwMm4EO5y4XklA8IJzn1rHzUBIT+
F0rvxFuBPJp5etk0dQJstCvK3zR/REg9nh7B+ROgk7rSxxFdhRjVmye8r5mA
y481rqwE1CC1xZequ9oOeaSER58m1yLR0YJ/ThInoMRN7zWrRQOy9fA4P2xN
gPVWsbckQxNi7rSnbkMzCX5Z3Ntxwc1ImynRJoptErYsrjponfyKSF/qf/ZB
cBJE2q/1sw60Iikq9YUjMpPALfE56KCiDaESL+j5g52ExjhZfb36dmTgSAj7
JYtJCGsWcs+904NgdlyU3F0nwedLYvm9wF4km3jLNClwEnB3m0kNpD7k2LBm
YF30JGh+P75612sA8W2VycSnTcKzLrqNP6eHkJmPvC30hZMwUE70C9wYRnSy
GYhStZPw8l2v7/HlUYTryezZh6OTYNt2+0mA9RTyxLP7ctbCJASZjWyKr8wg
K1afPNq2J6GtoeVN5/VZ5LpRTsIq7RQMG0m6fx/AI/XYuGo2jinQ/UkZ9t5z
DhGVDhxXOTMFpLZQa1UFIvLitMMfC7kpGCmT2UziIyF3/2I1ioymIPVRhdBl
rxWkc/Wcbb/lFHA0qDCqENcQ+amTEbtuU1DtMHcupo2MZHTRFPE9moJYQkyC
nsomQldH7rkYOwU26qHeUx0/EbfCyQ3HjCm45L9+iuLRFjKa+p09rmgKBk/7
nC822UEKHmSaTnVMQUCB9ffxiH2EzSE6kHp8CkyP+QQVk/4gASZ+meKLU4D7
F7I4hVCg89rWLVd2p2CcYtKi+R0lelnJkOhzZBpenFQU8xGjRqtFMAzpnNPQ
4XqOI6OHBuXnFDvXLDwND98+seNOoUM3fv3zOH5xGiZyLlIRchnRkm8om8zV
aVCMR646dzChjsmBH40tp2Eypijs80lmVNSx7rqv6zQ43j16XLyTBZ27sL+d
HDANvU8dPgcIsaJZx1STP0dOQ7KHm4H1KzbUfMZPZTp5GpypLeQ5xDnQ0ZDt
h0KV0zDj9r0vtvQkmnhNgVerZRoueoRnV+RzoVdFvOvt+6YhOnBK4m4XD8q8
W24RNTMNDeOpz8e4TqNd7RsUJavTcOagpM2gix+NSJN+27s/Df8+fCHWnBFE
tVzcNH4yzIDKE+7OT8lCaCPLapiyyAxsqlyKCp4UQQPxZ0Vvy8/ALevfXMgH
MVT1o+P3QPUZaDPLvxdaKIHuhOU7ZBrOQAbGTdCk5xz68SaJscV8Boz3i2t3
eM6jHuKiRfPOM6B/gvmlZ7c0KrVvY0D/cAby7zEIbwnLonmvCc8NXs3AL9qr
u9tnFVAbd0EZ95wZmBOtpmaeVkQF1a364ytmoFe3JmC5XBmdYcv0qmyaAa/E
Bcz1YlU0fX6affTHDLw8WqtwuReD3qrmrdqbmoHFF0LUnKcB5Ywwu8m7csiL
7rm86sGiOpyr+jI0OODQV6ewSdNARR5FZ6gfxYG4gNqOnaQmSks6u2bMioNv
1YLPM2a00DnDTtTmFA7WqbU3Uz7qoM2fHJ/78uPg9PNPEiKll9BMQUZcuCgO
4s/rml/s10cfReVLp0jhoOC6l5W8wBUUc4fU9xmDg4C3n7pdxK6iXN/CBbs1
cPDCv7WkNt0Y/S0l6jV9CQc0v00px6Suo6OvvrWsG+HgUpu98LnZG2gVhS07
5a1DP4uIp06VCZrgQGvDaokDqzBGwZ0yU9SrP7tSyA4HXdznn6sOmqHS2YQb
Wj44yOr0xcz2WqLHjz3JvRmAg5titWIF4nfRVR/BXfsnONjSSjNjeX0P7Zpu
0vGPPOSVzKW/JG2DFmhbpUTF4eAGBVJVi7dFn5VRLKUn48Bm2Ghxu9oetTuV
qVryBgeDXwuZvpc7omeWpyd6i3HArSzD7iHshlJdCzqH/4iDjNg3HHT97uhs
HW/gz884ePZMzp0o4Yk2Cn/ppmnBQX1X54bNGy/0dawZH2cHDiICz2/Uyvig
ATv7rqJ9ODB3pRDQnfNFTS3TGpRHcdCx+1km55MfekJ23PI2EQcy0nHPREYD
UB0pl3SaNRws4KdOXb39CPWToBgt3sLBUc7kMLWjj9E8kZdsN//ggJE3Ss0g
PAQdFRS5QkE7C00XqlW9zoSi9Kc/ReYzzUJYU1Vs4nwYqsKt/+0q+ywI/PDL
Ge4OR1PZPJEcoVnwyE+/+FYgGu1gpn1w+ews1BINNxYSYtG9o8kfd2RnoXs7
CWP/5gUqQX+WnKk6CyXxGizMrPHobZr6s5fUZ6HQmjX7b/ZLNJrCyO6n7iyQ
1t4M0d1OROsOCG/TjWaBO7xNQVHpFcqzxcC1bjkLCcNBT964paH6G+nXk+1n
4eRISfa9gQw0YPV8nJr7LJyJ2nZQVsxEixabu5buz8LskWuplW+y0Kn56/QJ
j2ZhrUtLrlTsHXocT9JAwmdBPs7rImEgG0WnHz4ixs6CyGlvaoPs9+jr4axt
5dezcHCZN5KiuQDt6ZeXxefMgj7VmdZszmL0b0+bS1TxLPActanGvilFpTpN
8+UrZ4HyBNNzSekPqEXb6txU3SxonpXtcystR1+0BPOHf52Fs11VfWyGH9HG
BjYz6a5ZuJYihqfkqEL5a1QGQiZmQco7H3JP1qKGH7uOnyPMQoUQnXWkeR0a
XGZxaWhpFrYD8Bw8I/VoWdFmWNDmLKQ7W5y/19KIzuaFNYnuzUJU7KUxCZVm
lDXn5J9eSjz4f5ptDP7RgqpnFSr7M+DhiPveV9WIVvRtSl9p10k8BLTly3h7
taP9idbLPvx48KQPXNwo6ESp43dETovhYUDv1NgkWw8qHxt59/t5PGSVtAep
3epFrSN5X3so4eGPiaBwe2sfmvC0bIwL8EAMrH/McnUA/RqiwfFVCw/apjkO
ExRDqPBDh2jOG3hwvzlZc7F/FL1x/6Ct4Q4etK54ET7uj6NPvZ5TO9jgIVUi
Vs/k+hRa5SYIrC542P3L4WdFmEGJTpX+n73xMEvQQ6Wvz6Kc9jpV1gF40KVM
jc0ZwaPa1hMbx0LxUN8+NtD8cA7NM6N0sHx5mL9d6LMuT0JHTRKyGdLwYJj4
ezrbcAmlvy6KK3+LB7WWKzKmaSuoslEtt1kBHr58stsRObWOOhgY3KQtx0Pn
E+dNdIGMpuri4ks+4SGT1teKy3IT7dD06rnZdHg+uOqn337/RCXQFM2CXjyU
Zo3kIGk76EKVRvb5UTxY1MplB775jWafX6OqnMGDwzkh0aEf+6hVXrKV6gIe
3HaVuo9I/0X5BDQaG9bw0HhQUs5xlwImUlb5NLcPeXMOfG9+p4Rk1uTAjj94
0MSSOWQMqOE/mlXVISYCCBqmOdz4Qgc9Aa9STNkJkH+RNSeyhB4it9R2Z7gJ
cHxgESfTwQjaris3bIQIcBVPwb3MdgxoFpIqlyQIUFeeis1+zgxNFmrs7rIE
cBW67t7L/x8EjS57bqkQoJ9Gvhr7ihV227HSFLoE6OZ5daGGyAGV6suxYYYE
+PjQDVxaT4Dn58RVRhMChLq32v/uOgXn5bH6LywIUFaDVxmh4IGVoqUCDjsC
4O686eyy5oN84USGNFcC0NpTcT4I4gfb12DP70uA8s+8gpNEAcA9TxA+G0YA
DS61fQdOYcigh9CyaAJUBahSHSGIgOnjRbxCAgGeV5N/zQ6LwYm9l2qf0wjw
7Jj73pUtCRj0RDOx7wiAV3gtu6YmCXHLpL+tBQSw5I8pz208D5etX97RKydA
mILo3ylVGWi7TuK60UQAqq8Xv89ekofQnvgHE98J8DNQcTyWVhGw2sioZS8B
zIx9M0fnleBPw4IicYQASVyTcitrKlCrHJ/oNEOABv8kT9UzGLj/AfOLTCQA
q0BkYGAECvISC1d91wjw24rX0CIOCyXcGJbHfwhQj821iHisAU4JRFc62jlo
WkeG/olrgtixuO4opjlYKlIcu7GtBfNhF879xz4HK7+cHsUs6sDbv/ORSdxz
IC2rrTNLpwcW918scgvNwXC79lK/kQHwkFV1siTmgJVry+lszxVImn1OW6Qy
B37UmJ6ZyqtgbKpqLaM2B2Rl+0p2vWvAMjDXXKUzB4HMFh4yVDegW++5AMbw
0D+sb7E/dRMiv6oEN92cA/ZMwpDr7C3QRuamtSzmIDnq23QzsxnQVMUiXbZz
oCGucsLF2RwCcwl7wz5z8If0aGBrxgpU+WNvmQXOwVf5L46hFvdgO1m5ZjZ0
DlgKN+Si/lpDxX8ETrvoORBO94gKbrAF98gYn5WXc2B9A/1El2MPktTKgx5p
h/mVUUfWPjjC0kO87M7bOShL1G1WXHQGaxclMmX5HMRyJd/4teEOejePxtJ+
moOg6lwdFdQTZNVmzjI0zsFnR5dm4lsvOHW2op2pbQ7QE9da0gV8gIIj3I6l
Zw76eb//Za7zhYW/prTsQ3PALXWlnMHbD3pIUu9OTM6Bkvm2ip2eP6TVDU/z
LR3eD/URLiHLIAh5XxAguDEHs7qOsl2GwWD/IohLZHcOfL6NbhuEPYYr/ldr
xP/NAY8C4XZJTwgoWovckKSbB4eGOW8GqVDgvbz3U/rYPETqtO4EZocBjXJP
nDz7PFxkvE2SkAuH/qO+3RcE5+GzBkVsakYkfNrSdQLxedg/xuT2+GE0ZM7w
MmhIz4NLGu8uzicWXCtaL15C50GUXeVKv1UcXM9IwRtozkOPnViwbnQ8YMJd
go305+Fu1Jfm4G8vgfE2R52J6TzMEv+7MOmYBBsXF2+ZWc1D2iOiEcvQKxiV
+rJjYT8PsWJgy30lBd5T2cjZ+c5DaKJNFeqRDmoFHwt84g+1Wqro1aIsEEt4
pvMgZR4E7VLC6pLewvEgM2JA5jwcK1fLGgt9B5NGNIKhJfMglBbsVmWXAy0X
RhvCK+fhkd43LuKt91AgXHQnqm4epoYq8AWXcsHvt3FKfMc8TBuX8z8WyAcL
gqhSUt883Ov5LclLUwBa3fuDKaPz0HD3w3uX6QKQrP7hmTEzDzLNFWhCSSGw
Z71jySLOw+tG1/4yzyLYj7xfkr06Dw+xgQGLYsWA99bTz/s1D/qFX6S9fhRD
u/nppcL9eXileC0r1boEynR+hpdSEcE88ZR4N7EEXsm2CVcwEIGVtc4961op
BPGktVSxEMHPhObxTFEp2NC5WdWeIELzXtNW+Fop6JPV/33hI8Lr1eO0Lkxl
IDfOmdEkTATMgQx/EUcZcH1dUm09R4T1z9K186xlQFFSP/pdjghv1Vq4BWnK
YOFVvG+XKhFufRCw5xoohZ7Htuy9akQgHBOgX35aCh+dVMsHdIjwLineMeFM
KaRdP244coUIM1PuOOniEggB/Or4DSIkyLLwsAiWgIN4VdT0HSK4nCfGlIYW
gyFbpDjemghhmxM05cNFwLcgY7PoSYSSAAL3xpVCuGn9ezXUnwiTPT1V9+wL
4MVsoy9/CBFUvKm8OHzzgXLyyrObcUQ4+PYvO8E/F+Z6XQpbS4ng6GKT9+3e
u8P3rSBvVU2EE1IrGRJ338KNzoO6g3oi7KRfKJewyYK21qgeuR4iTMvvWKzv
vQYKDeObP4aIMKju/JFXPAOUG7lwjlOH9c1t+yq7NCiozd/IWiHC1pL8av+p
ZCAoefgjvw77X//bHxKbBDyVytRj+0RQ2rj4kJozEWJK29hZji7A3AZ7fcCd
ePh27nlGIesCPDtuhGPjjYO/+TdEtLkWIK3g3qvIqefgnj2vFCS+AE8p1Th2
o6MgX6C48ZTMAjxkuC9XkhQB+NfeupXKC0DbbPuRojEcuHgw/YbYBdjMZNh6
fuQpGKdQ317RXgDbfqeKTadQiObsJIRfWQB+plmJz8sh8PVlvLPQzQWInKm/
+/Dwf1CMFQgytV2Axqi/NEFUQeB2dJFu22UBmo9epKJtegh5z8qex/ksAMWq
snpo3gPA0fqdlAxcADy1s7lH1X049QSyvocugMdW+eBtkg9cpTgiYR29AFvD
FB5rF7whMrCn/N/LBcjm/nKWXOIJB/fvfFV8twBW2yvFI0NuoLB1xqC/YAE8
z335S2PpAq6eK0Mu5QugSVs3/viUE7xfrzBnqD2si7/S2vprDzPODxeymxZg
BLk/oHrMDk4uqbtj2xfgvaBkqaWaDRjaMf6e6F0Aa4d/UTnJ96DZKoWRDbcA
znXH7J3fW8L+tOXLkoUFoLl1ujChzBzkzcR4Lq0f8kUkntnSNgPnsfXs+e0F
8KkWfXCK2RRyblRLPv67AGfyRmjtqExgeiCoioeOBJgreOowvhvAaaQFNcdI
cJzJz9HE8ho80xsyXOchQb5JsE+vrhE0fk8fizxDAsrLmkxvR6/Ab03ruyLn
SGBzT+G92zUDkG05u9wkR4JnW7wR3VR64Ij96XXnAgk+cDxa7Z3RgXdfag92
1UkwnKJZOb6gBZOqIWEJl0jwQIeRLv6EJhgo/Peq8xYJqMcPTi/MqkGZEJXF
vCUJdLpf0OrGYg//iZ8i/+xI8PSxIBqRi4IPxdzaSTcSUMz7b9NYYWB0bbBK
1pcEohtRwamaqqA61RqkH0iCaT/GWL6rypDRWaVlG0oCrbtiXzKfKMLdvOTh
lHgS8Ie4DixfkoPWpIjXFSkkKPa3sx2ekAGxMH/b7kwSOBwPd9sPl4ZILyep
hVwS3OS5MFyaKgWrVmbbFKUk+Gl8R4b32jkwNDSo56oiwejE08cdyhJQjqJP
5b+QILUeuRmqKQZ+3Pyc9p0kyDpXO+nXeQYmGP6bftxPguqU/ml7EAJ0l/J9
2hgJeHgnpL/3CkAmcdOlEkeChX6nfbtAfqAeIij8WCCBLkHYLOwpH9i2DP4h
rZFg/cWRzQ0sD3z/0NpKtU2CCwnonwwRLoiNzb2uSLMIonpEvlN2nLARkMxr
eHQRKsnxclJ17HDNKWLegXURAstUT9LJsEHVLf/iJ6cWYUErKeFiy39wSsfJ
J4N/EahvMaK17iwQoGiGVIsuwjHGEKNm1+MwfcaAtk9qEVyVXhRXSDBBNuX5
RBpkEeysPuYS+OnhCPn0Hb6Li3AjQfzJz2t04DjNIqystwin6jF7UEgDXV2U
q0ZXF6FrifkIIkAN5z9vfnS6tQityo2czz9SQnw+ISDMchFetUx6HLlHAb9e
DV58Y7cI5t/8+9Su/0VrvasG+30WISSk+k3D/m+U915u+krAIhBPq49aMO2i
wUbJ1nShi4CP6+nAq22jeIg4xx+1CEyxIUkRKb9QTSn/Xyrxi5C6P/uuneUn
msfjVGeccthfW7dZJ2cDZTxqFuqSuQj7o6efj10jo70LCHtWySL457GQYvaW
UblhqcnaykXY+TF54uT8Ipr09XT2YN0i6B1zyzHbWUB3y1mc11oWwdC3StdW
iojezqKUp+9chNzxXG6/8Dm0/vnmvkD/Iox+HDdnoCCg/EGElgtjh/WCuaym
xFmUaNpq7LawCD3a6Twa/NOorm4Vd8TaIogNREQPzU6gRUq5hLdbi7Dc8N9t
6Z4x9LhIcmHdwSKYKPYQhPAjqAd7hNcw9RKsnYhFvnANo4NU/hfIjEvw4A1f
pZrPIKq44UjNyLoEWBux1xLr/ehBt/5LhH8J5ptS1Q+UetGyKzJa66JLsCDz
xIg40I3a9HH8zjy/BPxZXWIvXTpRLuO9wqtKS3By7tL5IuV2tGdw2pwGlmAl
bDhOSaYNDbnR8l+V1hK46Y+axRi3okqjuV/tLi/BO/NkomF6C5o54S7ReWcJ
WI4FiFEnNqLX7lyfCrBZgu3h6O+/g+pRhhmVF1Iuh/qtl9AsYx1ab8mngfNe
AqnW2teG7Z9QTzzVdlzAEtjeEnmiVFWNilov5GmELkEfm2n/aHclOjnfeXsr
agkUJDsjvzJ9RDUXE5pM0pbAQ8/H78SvMnTP8YE347sluHt/6u2gZClasnJH
tK5gCf4w+aTlFxah91zVx13Kl6AlNaZM7E4BepIsEnO69pDXgrVXHM1DuzyO
YvualkC5siNk/NJ79PHP9c2Q9iUw7DVnqH6UjS5t15gQR5eAhj68VOd6Fvra
L+NoMm4JKJ7XDMXj3qDGe4/rdUlLwEwyHKQ1zEDpA2w99teXgCohCfR+paJ1
fy6dKd5ZAjQfPSvUnoy6Pzo/Yv5vCT48zJTJ6UhChSnZI1mOLMNYHYeDylYC
Gkszte7FuQxsnywms2viUPWnTW+F+ZaBOf3R3nu9F+jOkffXR4SXQfVtzIlj
uzFoUUQkfYTkMnxwsHzSHRuFWh51+6yqsAyNr7JXFG9GoBwxxq4rmGXIp3QO
vWQQjnYcVxZ4fXEZqK6ktt52CUPlWCnDKa8tw/v9u+4qfCEo6eW8SsXtZRD4
432JOT8YTefoWLG+twx9L4/ght4FoUavSt5wOi1DnbnPsa/nAlC6Uy+vfvdc
Bp9/Swv3SQ/Q2tT7tP7+y5DMja2Z6L+PuvGY1ZwNWYb/tBgWJUk+6OhpYb7n
ccvgrFdazPbUE43OYujDpiwDjZhESCy9B6omtPZkM3MZfjKV3Pc1dkO3s/sV
s/OWQcxx87JGjzNaIFK9eL1sGf4WPJ3aDXBEzfPS0o/ULIPVrVBKx9v2KJtE
8JVPDcswtcOX0WBjiwZI6lby/DicL8puFku+i0qXStr3DC8Dw4/WEWlHK3Re
mpU7eHoZFMff5YRQW6Kp5dvdMsRl2OZ9PmPhdQe9LD8RTFhdBsz531Vd7LdR
6qoGucStZVCy/a+BbsEErVHKJmr9WQY8IWmYn3gDFbjgol/AtAKyCdshPWbG
6F0VB0Fl9hXQqFbZ/z1ohGYr2ey2cq+A5yDrZz5nQ3RewarHWGgFSoIYll/C
ZVRE/k72rMQKIHJ5A94Teqid7C1/N9kVoKes3KjJ1UXzpK8b/lFZgb43ymwx
mdqohKTBwUndFZDJHH/EwXgRdTqr2//ecAXsU1tcY73V0SJxzTx5kxV4CBlD
HP+w6JqoWlCzxQrgJdgPNC8Del4EuWZotwJYrY+bjYMY1P2MisS06woQ5bOE
DWNU0XJBBQpn3xX48Qsv+tdLGZU/LVkUHrYCtKq2fE5f5FEfXvEQjpgVKCLo
bVSdkkOruIVN3iWswNqTAR7pVzLo7ikBKZn0FWBVlkWU5KRRlZO8NA3vVsCU
25Hq67Ak6s95aly/cAXCrR+RV/3PonXsHGXj5StADrnrOHBZHEX/O2a23bQC
O0a3k2nvC6OPmBlkQ9sP5/9J9Mz5KoQ2HqOlZ+1bgafjazFp8oIoJRPl9JvR
FTDKvnxM5is/qs74p0ISd+hvn6TpmuVDn9D/jvi8sAIFhU7i4+486Fe6LQvd
9RX4OFpLfUWGC9WmXj1q83cFrv90YuRV4kSfUS7ObtKuwsnKhMwYH3a0499c
dfCxVXDIZ2wMH2FFj/7FxRznWAUqP111jOl/qP7B5L10nlXgCv1RIb7NjMbs
japInFmFp213xCzcjqE9u4PMNWdXoWhe06mS+yhquNX1eUB1FXosZJ4u/6FD
435+j7NSXwW7e59+ZZ+jRfs3vtqt6x7qY9ifwsHUKDu5EQk0WoXd5sdKT7co
0etrdWxHb61ClwSbwclICjRppWYx2XIVyuKfTLX7/kVGlz42iNivQpCVcIDB
8QPEdKHISf3+KoiLa5wp7txB0ubz1HqDVqE1pK5NcGkLmSRknzB/ugq3VpdP
50v9QvjwmavLMatgrzM0hSRtIha49JYHiavgkT6exM23gWROJ6ccyVgFXpd9
kkP4OoKfTHBLzF4FUXn2KEuGVcR6LJr7Q8UqDCGFnJmZJCRn5NkG+nkVZLip
rLAlRIQ4FNrW1bwKb87q02kR5hDRweAM045VuDn8p/0lhoDY9wd4kfpWwdhh
xFuvehbJ7/XT9R077Ie+HPtuiEOWerxP08yuQlRfW4DqsWnEpdO58zR5FahF
xz/TBI4ho6rxuLM7q7D0j845NHUEuVhQvaX0dxX087gPPkwMIaWnphgv0q4B
w2svyiVkEOGKoOI3ZFqDOG9V6s/1/UjYrqiCGdsa0B3f+j57uw8h2xlcsuda
g9myX2uabL3IN61k72CxNdho1LY0jO9EZKq+RESfXwO3V+zZls/akXRhwutk
xTUw/9Klz5DThtAn0n/MRtYAO7P/2W2+FfGikWovu7gGLIUHt9a1viLTXsbT
dXprQPv7wiuOtmbkEsHv5/era8CUx6Py+l4Twt/cwjtruQbdA/RKsgNfkCiZ
RdlVuzWIxM9sprz+jGxnHtf57boGWUqi6U0vPyFWLPJ3aH3X4L87KVPxpdVI
16Nbnv8FroGOseiAzHolorQeFM4bugaG+Ozq3Ssfkbfm2eniUWtAuacx5/Wj
HHmArH9TS1kDASl+ngyBMmSuiH3SIHMNtHlrcQG4YsSQR3XjVu4aFKpp/CMV
FCKfoyzobEvWwOT5nfeib/IRkf1Qbs/KNZDQjOYXqM1F4hwLpIPq1sA1J0Fj
dzcHORj7oRnZcsirjPDQ3cpG+mu43N/2rUGqd7angFcWgohhw0pG10Bt4URQ
t1gmkvfKJrV2Zg1kTHp8u1czEPYjUaXfiGsw6UkKR6rTkEe+ZV/7V9cg7ey/
r/EFKcjS/NDY9K81SAhrOvHx6yvkxvX9taX9NcjPV2JuoUpCzslrnaJmXIdp
Zr6yC7h45NU7Jynm/9YhdIsPSP5xCBVbnAb3yXUQfq7KTin9AnEJqTIRPb0O
kXUr+0L7McjoxoSLnMg62ChffP6qJQrRsKJ8ApLr8JTn6h5VVQRS0iuSrCe/
DgZbxq16P8KRsFKP5nvq67C1cZ9S0ikUIfO9GnHTXQfXJW3ZHFIIYhZbt/LQ
cB3+jHaHlIc8Rtr+zFI+u7kO6gXbM0pKwYisy5ETCebrUL/32TOYPgjJmDx3
LtNmHXJ/dpzY+fEQode/qlbkvA7Gcuk6fk0PkGmJDKev/utQKLzUYMPpi+im
Ngf3Pl6HNtqqMC1vb+QjAylx8tk61P0Q92bd8ET4HxwrJD1fh/CTCARHeiBR
JNnGX0nrkDdTi/dA3ZHtmyZDFK/XwZSTMIXncEXutgUuMeWsg5r1hpDZpBOi
/P47u3DFOphk7etFzNkhW3mz7O216yBb4uxRvW+DlBfusbs0r0Ofc+fVbRVr
xK2EjeO/jnXImiqoEEm/i5z7cI6jsm8d8nuFlBxOWyGLFZoct8bWQUGYJ1I2
xAJ5X2XO8Qe3DoOlRqUv/pgh/HUvODTJ65AiWOBTF2mCTNXncyzurENYvsr1
twk3kNSmZo6Yf+vAGVtekvftGnIOvxqZTE0GtkenYlN5jZHIe3uRjkfIMJaq
nRaaZISQ5uiiMEfJsBKVNVEqZYho27JFHWcmA3ezWL1KmwFC43AuqpyTDOF4
oU9eCrrI3SXlqFAuMrDyqKx9lNFGmpw0o27wkYHT0/eL5E1NhH/VKEpMkAy2
j9Tm4t9qIEGu5lF7wmTYeqEQOsmijkyuO0Z1iZPhW7VVI/YNFrngcT/qtSQZ
dp65xN1JQpFdrxdR6gpk8BO4Fdwzp4Lc2EqPYlchg25NvhDTgBJS6ZsfRcSQ
4Qkb5YnMZQWEfbcyqgZLhtuCe5JiZ+URzwfNUZEXyTDhKOkTHiuL9O71RJnp
HPLf2M3Hscog5wMmoqT0yfD327yWoNN5ZCXoV1S/MRnUntQzryZLIJcoKKOz
b5IhbWckp9VPDMl/fCza9zYZfo8rM3GHiiD01FzROhZkKAi8HONVfQaxDRWJ
5rpHhoVw+th0ZiHkK61c9IotGQZXz8xkRwggQuEQXe9IBuO4LyEjgvwILsIk
+q4nGYJ4kWiyETeCHrWJlvclw5vchJ//BE8hGdEe0XT+ZJi2P1JUy38COTgW
FD0aSAYrO96BWG0OxPR5ZHTBYzKkYx8+l0tgQ2pYXkUHhJFBhTVX9R01K3Ii
/l305QgyWDcpUXG+ZEEGE+qiN1+Q4XmXHuU+MxMiy9ke/TXhMO9+n8V4HwMS
92ooOimZDFFXn3xPazqCkE/io+3TydCXNPYkYYIWuZy6Fq2aSQbfEa8Zax4a
pIh7P5opmwyF8xrnN4OpkKMZR2Kmc8mQ3Wyla0VHiXx/wx8TUkoG3k1Zu/MD
BxgRAcmYaxVkEIi3PuETtocJe6sSI1JNBuEe5GDCdhczJ6QVs1tLhqs9jpNv
vLYx6jlXYzrqydDf9SpGN+8XJkvEIia9mQx/4hY68yh/YijynGJcv5FhWc7+
eU/ABuZLQWgMaw8Z+Lof5n9IW8WUzQkXv+sjgza1Az7BehmTzdfWJT9EBpG5
hafEm4uYZBP7ldZRMih7iUw98FzARMczMN2cJENykNye+Yd5jBedvt4DAhl8
IhQ2veLwGFP/2Mi0JTLkXYu+9aR9BqO21tv+ZeOwvyG53VxhAiN2l40Bt3s4
b7VgEculEQzz8HUdKooNUM8xE9NeH8Bs6yaHnzmyAWXunOdlWPowU1/Gv2kd
3wA1/qnkPYVuzFcZXjoHjg3IoM6THKZox9Q41QvvndyAXa9V/lWBNkxhjoVm
FM8G5CNlHGO2rZj4U29Di4U24OxMw38FRs0YS0pR6k2ZDQg+5iNKHKnFSC0W
PlbEboDfI//gzoIKjKCQQVabxgZ4t1AGnZAtx3DcWWs00d4Aq1HZ/vihMsxB
rzTFw8sb4HOOezuzrwjTUVMZ1GC2AWHiA/LGvDkY22cND3UebMBf9h+VpwuT
MKbNlmljARtQxO0tu76bgDE4oPzsGLwBSe9MeC7YvcTIu1/ciw4/5Gn8MvQl
7QWGyqTdry9xA/bvrzTJ3niGeS064GNavgHnrr0mVvD7Y0ZPU+SOVW7Azzun
MVUKfhjWk5KjJp824ENTD6bF1RcTRh+uerNxA2ofRnSmqHthnBdV/xn3bMAm
euysso0z5kLh22cGSxuwriCexDdpjhmV8kzDCm5Cx0KPtZ+KOoZV8b8mkfhN
qCcfD/FzZsA0lTQ5kkN/gkTKE29O0xcXyvQzfz+2+wUZVt09x7Z4L4xf2yCy
3NmCivcWbo5Cb1Vfrckonbm8DQZM3MkaymKqCcWZzv+kdqBNyqsl8Ui1Stfw
Y4pRwV1gbon36d3EqFwUjnvgR/cbFF7dbUxebFe+Qvviesb8b9hiCMqIeXlL
OfEK5YuGkT34kvQ462MpTom7IbM0/9M+eKR05BlQuSlNJJdLxpUcQHHkAyq/
oz8VJ15tvsC+/AMD7R4daXnBim5igje9vf5CXZ7nrs5/LIqI0NeHObb/oKVj
7UFFQILCe4EO9R9nKLDPzzxqZE8VVOiwXfbteEOBPW0c381w7b18jXfoZPhJ
SuyNy/c3omIk5bUSP8qLR1Bi9cs/e+SNf5bbWOLF6FJTYSnIqY+um6rJYYz5
FA18qLD0MZ//nuzskTUKTbJim6fCeg5nOr7kN5d9sqSNMTGnxvqGXnmY9ZAg
c/3eC4bHP6ixxLyO2Y8bHjKZtKxG/n3U2EoxPnu8r7vMUu7LZK8BauyQ45mM
VEVXmaCVJFHbEWosnUOOVLibg0yeT4am3gw19m+opg3Vkbsye+EFjznWqbHl
FRRyDjxXZTKLvv7OP06DlR/0En6iLSuzdFlL7R0LDXZZzVsxo1VaRmGj7Vk6
Kw322gMhNvY2KZkOhc4TzzlpsHafZPjEFsVlftb3KXjz0WAHfr59qnhHUEar
b9oDlaLBWnNQFlJ7scq88LL8pCRNg+Ub4LkdvsoiM8GBp5CRpcHu3PrCaszC
LONuOv9cSJEGS0kRTt0vwiiTQlgupkdpsMEDQh+WnlHJzIW5bFFiabAcCff/
vqGklJESW8fsq9FgBTYIw3IK/6SbnTc7VzVpsILgSZrS3JNmYvZmW9Cmwf64
dfW4Eveu9M0PW6Y4XRpsLnd/lAHftvRb4/tvx/RosE0xZ1pu6/2SXtnaXew3
oMGKcLVWL7/elP4fUnd+0w==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2604#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], 
                 "\"Plot-12: Animation for soliton propagation for input \
voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )], 
               6->
               TemplateBox[{
                 TemplateBox[{
                   GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1:eJwVVnc8lu8bFSrSkFXIyB5lJfN9nsvIzJaZmZW9FSEysjKikJEQkiTZfO2Q
JCOyN6/tHUgiP7+/3s/1Odd9rnOfc3+e97p6z13PjpSEhKSJjITk/7+OnwjD
H1T6m44atl60vfSS7v1970OSdH9TRPSOOP8bb2lxdDDMV7C/6b/FsbiHdT7S
/7o/iyAX+pvcTjhjJFkeSD9f8InpGe5rYu20Pij5L1C67tJvZM2ur+moyaDh
t2SkNN3BrpouxY8m0yeR2xnxr6QNX1AsKYd+a2qlbvzhtNcqTe6XJqAy3tbU
yDedM7LNKONg4hZL7Vbb5Eam7ZLx1lmG+a4dd/pYQZOwZcsjy4B6mcYLQY5O
TPGALL2vHNOikQ1Q2n5sh/sE4QNsDkOH92TvdGz1vCtohuR2/5ExxzrZp7vW
eEXRLlAg4t/UcF7E1OooAYvMD7DxcT3VrmONcRK8rZNj/AOkBRhris3vYZhO
6VpzPvgBaTRCurMBNpiAerMw/oofcN83ckph1Q7DQls3z3SpD3JNm27FNDhj
poL6eXmT+oDEOdJ3U8IPY6lPUgYR/cCZe8sP9zgOUyMXJhWa0g96HcyjkTLx
GGqhUy2tef0Q5Op64+/pREwzxdkBpdZ++DI1TXFE8RzD3nhp+/ZRP+hEKZK4
Db7EzPAJSxn7D0AwZeP7S6q5GCmG8ub0qAHgzX0uc2STh0kku6k2njoAIbkJ
H9mS8jFyUzKmFlUD0HKhyECNsxCTk6wcaEscgJN22hLVqh8w1v/Mmz1cB+E/
1ntnMT7VmPO9NzpLHw1CC/tSRGpnDaYui7J3PXoQNnqzBa8K1WFokMrx+wXH
/WJ7zVzS/2FaH539bTU9CHdpLPzei7divOpsaEwu/4TagkW3Sx87MBx/6q7r
6v6EeoWwP6GKPZgBSRo1tZif4DCWLJyf0Y954udoK9/289j/aKwzbggzRk/v
9d/0T7CrsdFFgkYwYpXNj6UPfsITjUfzWwbjmJg7Ls8qLw8BgQvnbxA2hZkj
XsoQvTkEJy9Ui+SdnsXIJLcVfdAdgnmUe92SdB7zXMy9it9tCOwEi86RSS1i
VvuZ2t/GDEGN8dQNu49YjIJnR//VwiFQML1UIeCxinlF7TWd1TYEBjwkquNP
NjCEjywbjDPH/EM4JPghDqOu/XX/xcEQRFq8T029R8DkbfpQ0DAOQ0cNXr4o
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
/1/o
                    "]]}, Annotation[#, "Charting`Private`Tag$2600#1"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
                    "]]}, Annotation[#, "Charting`Private`Tag$2600#2"]& ], 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.006]], 
                    LineBox[CompressedData["
1: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
sdo3YiKSjVh1vb33L7uEpeKV5EpZ0ShiVZwurWnS2ClF3BoXRoeURNV13OBh
a+wHBYzJeXl9PxJViSAyj6AUewWjiBQHxkUSVafWf9F+/9EphK9pYSxvkKr2
DrmeonT8Km/m+JIqrIdUVaApTcQp300+l5zBKLCPVFUu3d/IQMJVfq0wMc1n
gFS11Cl/S6fHWT5kI0XY5RepaqY7SbahgaN8kV+Wpu40qeq143c5VpdvyB9E
loQxb5OqbovGQHyisXxuacuf4jNkqj9YOxaZSTHyawZXLufTkamKs7HFrFor
y8vh2p69YiBTjSD3Qwc7FeV/ynWyvmAhU93h1EpkxsvJ4+v65HzPk6lurlg/
+SMjLX+lb+ouKkGmqirr3dJ8XlD+pY/9VwUpMlWudskK/BS//DjzHJG0DJkq
xojp5pmPfPLe1osv+OXJVGvHEpQzY3nk0+fX31OiZKrkBSTMLtvn5BeeeBGI
VclUbSfP95S6sMlLiGxj/l4mU10LTbCVILDIN93a6dzUJFMl+Kx8v2/MJH/6
rC/jshaZqk2gFOb7eUZ5iw8E6xkdMtUXnZwR8kf08q9N7r8e1SVTtZz6stuz
QSe/Qfi92q9Pptpd+9Tv9OhZ+f8BqyJC8Q==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$2600#3"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    DisplayFunction -> Identity, 
                    PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                    True, ImagePadding -> All, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox[
                    StyleBox[
                    "\"x(\[Mu]m)\"", Bold, 18, StripOnInput -> False], 
                    TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"U/\\!\\(\\*SubscriptBox[\\(U\\), \\(0\\)]\\)\"", Bold, 
                    18, StripOnInput -> False], TraditionalForm]}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> Directive[Bold, 18], 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 500, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{-0.1, 1}, {0, 1.05}}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
                   FormBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox["\"pH 8\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 7\"", Bold, 18, StripOnInput -> False], 
                    StyleBox["\"pH 6\"", Bold, 18, StripOnInput -> False]}, 
                    "LineLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                    TraditionalForm]}, "Legended", 
                  DisplayFunction -> (GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, GridBoxItemSize -> Automatic, 
                    BaselinePosition -> {1, 1}]& ), 
                  InterpretationFunction -> (RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
                  True], "\"Plot-12: Animation for soliton propagation for \
input voltage 0.15V and pH 8, 7 and 6.\""},
                "Labeled",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, BaseStyle -> Directive[Bold, 18], 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Bottom", ",", 
                    RowBox[{"{", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "18"}], "]"}]}], "}"}]}], "]"}]& )]},
                Dynamic[$CellContext`i27$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8341896774821997`*^9, 3.8341899584121914`*^9, {3.8341902172904205`*^9, 
   3.834190241016311*^9}, 3.8342236016910925`*^9, 3.834969298610124*^9, 
   3.8349696298460813`*^9, 3.835036085725198*^9, 3.835049599816358*^9, 
   3.8351044167680173`*^9, 3.8353159003911524`*^9, 3.8354437126160774`*^9, 
   3.8354480053046675`*^9, 3.835461982856138*^9, 3.8354623152542644`*^9, 
   3.835525564537531*^9, 3.8355564187572646`*^9, 3.83556141925848*^9, 
   3.835573946283698*^9, 3.8356414773145494`*^9, 3.8356443231302414`*^9, 
   3.835644512947313*^9, 3.835722638980002*^9, 3.83572337580229*^9, 
   3.835723747737958*^9, 3.8357238700851393`*^9, 3.835724039858718*^9, 
   3.835786327003192*^9, 3.8357873746279*^9, 3.835794242445989*^9, 
   3.8358115253251376`*^9, 3.835811887751854*^9, 3.8358125806172204`*^9, 
   3.835816670531433*^9, 3.835817070450853*^9, 3.83582661344625*^9, 
   3.835866273653057*^9, 3.8358663944015503`*^9, {3.835870141145524*^9, 
   3.8358701565343313`*^9}, 3.835877988687965*^9, 3.83600963679737*^9, 
   3.836078527942743*^9, 3.836765191229418*^9, 3.836765233668804*^9, {
   3.83676528101614*^9, 3.8367653020029583`*^9}, 3.8367653350890913`*^9, 
   3.836765548509184*^9, 3.836766681760714*^9, {3.8367678362615232`*^9, 
   3.836767864751046*^9}, {3.8367686401482477`*^9, 3.836768679781842*^9}, 
   3.836769241019207*^9, 3.8367693490664177`*^9, 3.8368315152043753`*^9, {
   3.836831547805502*^9, 3.8368315670469093`*^9}, 3.8368316868190117`*^9, {
   3.836831890228018*^9, 3.836831908981399*^9}, 3.836832142032464*^9, 
   3.8368322727938147`*^9, {3.8368323584138517`*^9, 3.836832434593844*^9}, {
   3.8368325448333063`*^9, 3.836832559296751*^9}, {3.836832908255721*^9, 
   3.8368329532113323`*^9}, {3.8368329850476933`*^9, 3.836833013541382*^9}, 
   3.8368334047056217`*^9, {3.83683343493622*^9, 3.836833519761025*^9}, 
   3.837006115160301*^9, 3.837006202251199*^9, 3.8370062503370457`*^9, 
   3.837006296164708*^9, 3.837007798619556*^9, 3.83700797334603*^9, {
   3.837020712678495*^9, 3.837020732394418*^9}, {3.837020907046822*^9, 
   3.837020927505334*^9}, {3.837021041448777*^9, 3.837021063677402*^9}, 
   3.8370211462910433`*^9, 3.8371100248345203`*^9, 3.8371101612908278`*^9, 
   3.83711020711948*^9, 3.8371102661325483`*^9},
 CellLabel->
  "Out[631]=",ExpressionUUID->"b6b03e2d-a928-467b-a723-83b9bd8aa48f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MessageDialog", "[", "\"\<The calculations are over.\>\"", "]"}], 
  ";"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.836074793421406*^9, 3.836074802823327*^9}, {
  3.836077807328725*^9, 3.8360778108172383`*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"19c5e798-6e6d-4eed-ada3-e9e96e73fe4a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 968},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False, 
  "PresenterSettings" -> {
   "Dialogs" -> {}, 
    "UserModifications" -> {{"Text", FontWeight -> "Bold"}, {
      "Subsubsection", FontWeight -> "Bold"}, {
      "Chapter", FontWeight -> "Bold"}}}},
Magnification->1.25,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"PresenterTools"}, "Facet.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"ba9a653c-770f-4906-90a5-1f43807073ac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 552, 10, 186, "Title",ExpressionUUID->"a0ccd27c-dd2c-4aff-b5ed-88a91ff2e1a3"],
Cell[1135, 34, 250, 4, 40, "Text",ExpressionUUID->"4e62c259-6dde-44b8-aca8-90e290e0e016"],
Cell[CellGroupData[{
Cell[1410, 42, 275, 8, 37, "Item",ExpressionUUID->"8cbf235a-29dd-451a-8b51-e3639f15b037"],
Cell[1688, 52, 250, 7, 37, "Item",ExpressionUUID->"4f714050-9fb6-4f05-be21-cd180274d7dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1975, 64, 3246, 51, 23, "Input",ExpressionUUID->"981f3667-c32e-4e8b-be8e-f468c9b8de78",
 CellOpen->False],
Cell[5224, 117, 3887, 60, 211, "Output",ExpressionUUID->"cab20bf2-015a-4371-b50b-7f202b00d04d"]
}, Open  ]],
Cell[9126, 180, 243, 5, 23, "Input",ExpressionUUID->"4eb07c1f-f949-4dcc-86b0-98101fb93885",
 CellOpen->False],
Cell[9372, 187, 275, 7, 23, "Input",ExpressionUUID->"d73a7176-6294-4222-be7f-f287c261463c",
 CellOpen->False],
Cell[9650, 196, 176, 4, 23, "Input",ExpressionUUID->"6ac09cee-13b3-4f3f-8df2-01540dedf43a",
 CellOpen->False],
Cell[9829, 202, 290, 5, 40, "Text",ExpressionUUID->"d8df726e-6931-4f19-a3cd-8f16824a5498"],
Cell[10122, 209, 3554, 84, 23, "Input",ExpressionUUID->"54adad6c-781b-46f5-b823-4bb15a9e9277",
 CellOpen->False],
Cell[13679, 295, 2107, 54, 23, "Input",ExpressionUUID->"0464da77-0463-4841-a563-ee661a993376",
 CellOpen->False],
Cell[15789, 351, 2109, 54, 23, "Input",ExpressionUUID->"dfcccc2e-b308-48f2-9b76-5c329c625dee",
 CellOpen->False],
Cell[17901, 407, 2332, 57, 23, "Input",ExpressionUUID->"12da5032-d534-47e6-8a32-9fa6aaa799da",
 CellOpen->False],
Cell[20236, 466, 2015, 53, 23, "Input",ExpressionUUID->"939fc976-b081-49dd-9750-4b2b79edd6f4",
 CellOpen->False],
Cell[22254, 521, 1971, 53, 23, "Input",ExpressionUUID->"90849eec-9da1-44fd-afd9-8c63717a36a0",
 CellOpen->False],
Cell[24228, 576, 1887, 51, 23, "Input",ExpressionUUID->"de59cf44-ad0f-4465-9bd6-291bbf6cf96a",
 CellOpen->False],
Cell[CellGroupData[{
Cell[26140, 631, 157, 3, 78, "Section",ExpressionUUID->"d90ddbbb-3109-465f-b499-6a502fca72ae"],
Cell[CellGroupData[{
Cell[26322, 638, 254, 4, 57, "Subsection",ExpressionUUID->"9bd1ee19-bef0-4779-98fb-ccb1a5b30163"],
Cell[CellGroupData[{
Cell[26601, 646, 229, 4, 46, "Subsubsection",ExpressionUUID->"8c730de0-7ddb-4d0a-ba02-1fe62c864a9b"],
Cell[26833, 652, 8660, 191, 632, "Input",ExpressionUUID->"4dad0bd1-48ba-45e6-b70a-dffc67b8810c"]
}, Closed]],
Cell[CellGroupData[{
Cell[35530, 848, 165, 3, 37, "Subsubsection",ExpressionUUID->"841f6e73-1a87-4217-9999-66765ecc436d"],
Cell[35698, 853, 4705, 96, 227, "Input",ExpressionUUID->"34a42913-3373-4394-9991-924fcafc80d8"],
Cell[40406, 951, 275, 6, 44, "Text",ExpressionUUID->"18f9ac04-b2b6-4106-8e79-c733399fcfe2"],
Cell[40684, 959, 472, 10, 37, "Input",ExpressionUUID->"8aee2f94-2eb0-498f-9703-5c3e78c56127"],
Cell[41159, 971, 247, 6, 44, "Text",ExpressionUUID->"ae593e49-c40a-4217-aa1e-cc623dad030f"],
Cell[41409, 979, 299, 7, 37, "Input",ExpressionUUID->"ab31565d-9ab1-4c87-9149-147d8606b916"]
}, Closed]],
Cell[CellGroupData[{
Cell[41745, 991, 243, 4, 37, "Subsubsection",ExpressionUUID->"663ce70c-bc8a-4674-92a9-5f04d3a725b2"],
Cell[41991, 997, 1760, 50, 119, "Input",ExpressionUUID->"a12149dd-deee-4879-80c2-a2a21b0170b4"],
Cell[43754, 1049, 228, 5, 44, "Text",ExpressionUUID->"872758e8-48d8-4415-80d9-22fef64e1588"],
Cell[43985, 1056, 2838, 63, 146, "Input",ExpressionUUID->"1fe0be80-5bc6-4b24-a76e-4231486af7e2"],
Cell[46826, 1121, 223, 5, 44, "Text",ExpressionUUID->"a7c322b9-0f6b-4c3a-a3af-faec97264068"],
Cell[47052, 1128, 2539, 74, 150, "Input",ExpressionUUID->"aac28957-2c9b-473d-9869-681e03b33082"]
}, Closed]],
Cell[CellGroupData[{
Cell[49628, 1207, 194, 3, 37, "Subsubsection",ExpressionUUID->"38587c6f-d727-4bff-a973-6d264ea0917d"],
Cell[49825, 1212, 1796, 43, 176, "Input",ExpressionUUID->"a3e70049-009c-47ae-95e3-8c8e77a5c105"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51670, 1261, 186, 3, 57, "Subsection",ExpressionUUID->"f7f15b38-9564-4096-81e5-56a1ef8a1343"],
Cell[51859, 1266, 245, 4, 43, "Text",ExpressionUUID->"2643740c-87e2-482c-942a-b2d06b054614"],
Cell[52107, 1272, 341, 10, 37, "Input",ExpressionUUID->"3491bdf4-2869-4b9c-9260-55a6511e421d"],
Cell[52451, 1284, 4141, 127, 195, "Input",ExpressionUUID->"6c5e09b1-227e-4b9a-b847-73ed1a920937"],
Cell[56595, 1413, 3113, 91, 137, "Input",ExpressionUUID->"0fb83b6a-55ec-4e56-8f2f-b7b6ccb27c99"],
Cell[59711, 1506, 871, 25, 62, "Input",ExpressionUUID->"5e25b99c-4c7d-4491-b917-fdbbf80f9d70"],
Cell[60585, 1533, 243, 6, 43, "Text",ExpressionUUID->"2fd499c2-b5e6-41d2-ad08-1d358cf19596"],
Cell[60831, 1541, 634, 21, 37, "Input",ExpressionUUID->"47d79107-93a3-4a17-b57a-5c0c7180bd36"],
Cell[61468, 1564, 3077, 83, 195, "Input",ExpressionUUID->"473a30be-4518-4eb5-917d-4852b6bd8f18"],
Cell[64548, 1649, 3114, 90, 137, "Input",ExpressionUUID->"69d52d1c-a877-4f7c-ad19-46d6fdc10e17"],
Cell[67665, 1741, 941, 25, 62, "Input",ExpressionUUID->"b849c9cf-4591-4c53-9f1b-28f9474ad4d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[68643, 1771, 164, 3, 46, "Subsection",ExpressionUUID->"496752d1-d879-4f94-989d-33c47469b09a"],
Cell[CellGroupData[{
Cell[68832, 1778, 180, 3, 46, "Subsubsection",ExpressionUUID->"28a93ed4-c3bc-4fad-ba0c-a201074aeb6a"],
Cell[69015, 1783, 224, 6, 43, "Text",ExpressionUUID->"fa3dc2cb-bf55-4ce7-bdef-d7a213fefad2"],
Cell[69242, 1791, 1792, 51, 87, "Input",ExpressionUUID->"a150f437-c19c-40be-bd80-c28b4500d1c3"],
Cell[71037, 1844, 848, 23, 62, "Input",ExpressionUUID->"80e312c2-bd8d-474a-a7b1-40a4e9026b55"],
Cell[71888, 1869, 242, 6, 43, "Text",ExpressionUUID->"8cf3b778-6e68-4523-bcf6-5df94c8c1d5a"],
Cell[72133, 1877, 1693, 48, 112, "Input",ExpressionUUID->"224b31a0-d9d1-495f-a9d3-a192b207912e"],
Cell[73829, 1927, 761, 21, 62, "Input",ExpressionUUID->"8d72ffc4-79c2-437a-9a5f-59f48f409c3b"]
}, Closed]],
Cell[CellGroupData[{
Cell[74627, 1953, 184, 3, 37, "Subsubsection",ExpressionUUID->"f5327c6c-442d-4f7e-8c35-bbe73560b15f"],
Cell[74814, 1958, 250, 6, 43, "Text",ExpressionUUID->"ebe5a30f-4d3c-4a08-a142-b4a6e3ff8009"],
Cell[75067, 1966, 4002, 116, 66, "Input",ExpressionUUID->"584858b5-e2fd-45ac-ba54-eab795e12549"],
Cell[79072, 2084, 219, 6, 43, "Text",ExpressionUUID->"229c69b7-0826-4eec-a006-b14c2c174394"],
Cell[79294, 2092, 1718, 47, 66, "Input",ExpressionUUID->"fa5d9c61-b80a-4ad5-a364-d4a3532d7144"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81061, 2145, 165, 3, 57, "Subsection",ExpressionUUID->"20038edd-1cc5-423b-aba6-bd1e11a9910b"],
Cell[81229, 2150, 238, 4, 43, "Text",ExpressionUUID->"98279648-a1bb-4635-a7dd-a9704fdf5714"],
Cell[81470, 2156, 340, 9, 41, "Text",ExpressionUUID->"a7983a5a-3d6b-496f-878e-6c4173e649ad"],
Cell[81813, 2167, 1584, 42, 90, "Text",ExpressionUUID->"11c7e254-4a94-4058-b560-8116835d8e0d"],
Cell[83400, 2211, 226, 6, 43, "Text",ExpressionUUID->"88bd7782-80de-44d0-bf33-fda23b956d48"],
Cell[83629, 2219, 5449, 158, 237, "Input",ExpressionUUID->"7232a811-9050-4b24-a4f7-14fbfec28c74"],
Cell[89081, 2379, 395, 8, 36, "Input",ExpressionUUID->"90916f08-4ce3-4816-a763-872ee649f667"],
Cell[89479, 2389, 5158, 158, 262, "Input",ExpressionUUID->"66d1481e-c432-4594-8bb7-2e3842575b3a"],
Cell[94640, 2549, 302, 7, 36, "Input",ExpressionUUID->"30851471-a3df-49f9-b672-45d5838b55ac"],
Cell[94945, 2558, 351, 10, 62, "Input",ExpressionUUID->"548939e3-15c4-4439-af5f-1600a8b849b8"],
Cell[95299, 2570, 219, 6, 43, "Text",ExpressionUUID->"eb904cc5-af2b-4f42-9cfb-674f4a371219"],
Cell[95521, 2578, 4964, 158, 162, "Input",ExpressionUUID->"827d6d41-a234-4020-b203-65c008b832d8"],
Cell[100488, 2738, 271, 6, 36, "Input",ExpressionUUID->"618d1338-4840-4fe9-98e3-0fe6b50ed2b9"],
Cell[100762, 2746, 5126, 158, 187, "Input",ExpressionUUID->"d42bb073-e88d-4980-8c9c-32f78b5da3e7"],
Cell[105891, 2906, 276, 6, 36, "Input",ExpressionUUID->"c41abcb1-13fa-45f5-a3f3-cda4fa36df02"],
Cell[106170, 2914, 346, 10, 62, "Input",ExpressionUUID->"3f3f153b-cccd-4c52-8816-93f76316ec81"]
}, Closed]],
Cell[CellGroupData[{
Cell[106553, 2929, 165, 3, 46, "Subsection",ExpressionUUID->"32109e9a-7425-4a88-a61b-1d5ca7307a31"],
Cell[106721, 2934, 226, 6, 43, "Text",ExpressionUUID->"0041c5b6-3f8d-49c6-ba72-5c65236cc3b4"],
Cell[106950, 2942, 16209, 453, 197, "Input",ExpressionUUID->"986edc49-a121-4be0-8db4-7b3e986c789a"],
Cell[123162, 3397, 221, 6, 43, "Text",ExpressionUUID->"3a4e1321-878c-4793-ad53-e10db80690aa"],
Cell[123386, 3405, 14130, 413, 197, "Input",ExpressionUUID->"caf319a6-8c5d-4f20-9496-1390dcb6cf30"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137565, 3824, 323, 5, 92, "Chapter",ExpressionUUID->"963a5af9-850b-421b-b699-cd2e81349045"],
Cell[137891, 3831, 221, 6, 43, "Text",ExpressionUUID->"5210adaa-4a5c-499b-9bb2-7ab597c82414"],
Cell[138115, 3839, 846, 22, 67, "Text",ExpressionUUID->"8bc3b89f-ae54-45a4-b7c8-d6d374bcca24"],
Cell[138964, 3863, 642, 17, 60, "Text",ExpressionUUID->"ecf4b542-9280-43d3-aab2-9f7be121959a"],
Cell[139609, 3882, 642, 17, 60, "Text",ExpressionUUID->"309ece2e-754c-456c-9ad9-a2cbd6dfc6e1"],
Cell[140254, 3901, 914, 24, 87, "Text",ExpressionUUID->"620814fe-86fd-4dfe-af01-6c5d34a962d9"],
Cell[141171, 3927, 527, 13, 42, "Text",ExpressionUUID->"58419dee-b9a6-4b17-a73f-2ff2b3557848"],
Cell[141701, 3942, 469, 11, 42, "Text",ExpressionUUID->"4540114e-d190-4718-bc86-ce92682a2b92"],
Cell[142173, 3955, 1490, 37, 115, "Text",ExpressionUUID->"88114cac-7209-4ae8-b535-1dace8d772a6"],
Cell[143666, 3994, 1654, 38, 87, "Text",ExpressionUUID->"4f3820de-77ea-4d8d-9513-ece87a55d9b9"],
Cell[145323, 4034, 2183, 52, 116, "Text",ExpressionUUID->"b6b47ee4-ade7-413f-bed7-b842b2fbadf7"],
Cell[147509, 4088, 1280, 34, 65, "Text",ExpressionUUID->"e5b54813-d93c-474d-aa75-c92c09fd7785"],
Cell[148792, 4124, 1372, 36, 65, "Text",ExpressionUUID->"6c7dbe89-d985-4918-800a-66d1721ae22e"],
Cell[150167, 4162, 1648, 43, 63, "Text",ExpressionUUID->"8577f67a-ab91-4ba8-bf40-4512c18c069a"],
Cell[151818, 4207, 226, 6, 43, "Text",ExpressionUUID->"ff3aa4e6-5584-40f2-93b9-5c3961985e16"],
Cell[152047, 4215, 15569, 429, 750, "Input",ExpressionUUID->"7bc09ddb-f90c-4de9-8eb0-ddbf532f8b39"],
Cell[167619, 4646, 219, 6, 43, "Text",ExpressionUUID->"e0a76863-c908-41a4-affb-d5e54813ba49"],
Cell[167841, 4654, 18152, 554, 667, "Input",ExpressionUUID->"704b105c-dc66-4c97-8062-30c1bfb7e24e"]
}, Closed]],
Cell[CellGroupData[{
Cell[186030, 5213, 248, 3, 65, "Chapter",ExpressionUUID->"70629e49-3625-4c08-adc6-cf8db8534ac0"],
Cell[CellGroupData[{
Cell[186303, 5220, 203, 3, 57, "Subsection",ExpressionUUID->"9d93d764-2aec-4026-b502-97c1f3949da0"],
Cell[CellGroupData[{
Cell[186531, 5227, 169, 3, 46, "Subsubsection",ExpressionUUID->"528717eb-72b1-4266-84a3-e9e2331727c4"],
Cell[CellGroupData[{
Cell[186725, 5234, 3359, 56, 23, "Input",ExpressionUUID->"49786c8e-5b06-41ec-8e02-0021f641a1d2",
 CellOpen->False],
Cell[190087, 5292, 8427, 156, 630, "Output",ExpressionUUID->"7a7eb51b-7020-4af2-9f44-8058cd503138"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198563, 5454, 168, 3, 46, "Subsubsection",ExpressionUUID->"62ce09ea-614f-48e4-bce6-1cff03f463a4"],
Cell[CellGroupData[{
Cell[198756, 5461, 2067, 38, 23, "Input",ExpressionUUID->"983793b6-2518-47d4-a236-9b5ae79d59d2",
 CellOpen->False],
Cell[200826, 5501, 9241, 167, 630, "Output",ExpressionUUID->"252c32e6-01fd-40ea-b32a-d9745c0b887a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210128, 5675, 298, 6, 57, "Subsection",ExpressionUUID->"c4666743-8fed-4b65-9d4a-df5fd3c894a9"],
Cell[CellGroupData[{
Cell[210451, 5685, 7762, 159, 23, "Input",ExpressionUUID->"f7a764c2-dade-4815-8205-4d78f89561df",
 CellOpen->False],
Cell[218216, 5846, 8405, 143, 604, "Output",ExpressionUUID->"0406b991-8899-4e42-9b9f-c66ee7dd593b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226670, 5995, 168, 3, 57, "Subsection",ExpressionUUID->"fdf94739-d5c6-49be-9619-84e0f9f66c8b"],
Cell[CellGroupData[{
Cell[226863, 6002, 5381, 116, 23, "Input",ExpressionUUID->"0abf1b81-eab1-4f1a-a14e-9132b9ec55ff",
 CellOpen->False],
Cell[232247, 6120, 28593, 547, 583, "Output",ExpressionUUID->"ea75a569-d711-4999-a3f0-838334e81d00"]
}, Closed]],
Cell[CellGroupData[{
Cell[260877, 6672, 5253, 109, 23, "Input",ExpressionUUID->"bee1135c-38b5-47a8-9144-8a50f2e80369",
 CellOpen->False],
Cell[266133, 6783, 47914, 892, 570, "Output",ExpressionUUID->"713f66c5-3b83-4a29-8df8-4d961de5a0e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314084, 7680, 10339, 211, 23, "Input",ExpressionUUID->"05979366-87fd-4089-bd72-529cbd176afd",
 CellOpen->False],
Cell[324426, 7893, 48025, 891, 584, "Output",ExpressionUUID->"73542fe4-33dd-4745-8d2f-2bc3e7992735"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372500, 8790, 181, 3, 57, "Subsection",ExpressionUUID->"8d797eb9-a480-4c50-a4a2-bc6c8545eb63"],
Cell[CellGroupData[{
Cell[372706, 8797, 10815, 219, 23, "Input",ExpressionUUID->"ac8330fb-a258-43c8-b887-e260f981b0f6",
 CellOpen->False],
Cell[383524, 9018, 38722, 718, 602, "Output",ExpressionUUID->"2ba536f6-5548-4e23-ac17-3ae0de731ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422283, 9741, 15833, 340, 23, "Input",ExpressionUUID->"960b1621-be05-4cf4-b851-fb0ba06423df",
 CellOpen->False],
Cell[438119, 10083, 44057, 822, 576, "Output",ExpressionUUID->"a13cd0f6-09bd-434c-95f4-9294235ce42e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[482225, 10911, 205, 3, 57, "Subsection",ExpressionUUID->"221ae3ba-61a9-479d-a5f3-a87c8a51725a"],
Cell[CellGroupData[{
Cell[482455, 10918, 5426, 128, 23, "Input",ExpressionUUID->"a27c61a8-702e-416b-bfc9-a882e0086f5d",
 CellOpen->False],
Cell[487884, 11048, 344465, 5989, 546, "Output",ExpressionUUID->"2882fc60-56a1-46fb-a101-ef4a6614d756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832386, 17042, 6251, 151, 23, "Input",ExpressionUUID->"15b9cca5-8c0f-47a8-8184-14433a284c75",
 CellOpen->False],
Cell[838640, 17195, 497419, 8580, 546, "Output",ExpressionUUID->"2b9bd112-b0d1-4b91-9d09-c74d8f28ac71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1336108, 25781, 212, 4, 57, "Subsection",ExpressionUUID->"fb6da92a-4bba-4254-954f-f7b969261fb4"],
Cell[CellGroupData[{
Cell[1336345, 25789, 5419, 127, 23, "Input",ExpressionUUID->"a1f427c0-0983-40bb-a46e-1313aac217b7",
 CellOpen->False],
Cell[1341767, 25918, 290679, 5107, 546, "Output",ExpressionUUID->"fc564825-9180-43f4-a028-a9b9f4b951ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632483, 31030, 6837, 159, 23, "Input",ExpressionUUID->"ed7b5229-c4e7-4844-9e0b-5b899cc2f472",
 CellOpen->False],
Cell[1639323, 31191, 358407, 6302, 546, "Output",ExpressionUUID->"b6b03e2d-a928-467b-a723-83b9bd8aa48f"]
}, Open  ]],
Cell[1997745, 37496, 338, 8, 23, "Input",ExpressionUUID->"19c5e798-6e6d-4eed-ada3-e9e96e73fe4a",
 CellOpen->False]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

